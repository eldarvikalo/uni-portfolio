!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	/84dbaf52/
$(OBJDIR)/.deps	GNUmakefile	/^$(OBJDIR)\/.deps: $(foreach dir, $(OBJDIRS), $(wildcard $(OBJDIR)\/$(dir)\/*.d))$/;"	t
$(OBJDIR)/.vars.%	GNUmakefile	/^$(OBJDIR)\/.vars.%: FORCE$/;"	t
.bss	kern/kernel.ld	/^	.bss : {$/;"	S
.data	kern/kernel.ld	/^	.data : {$/;"	S
.gdbinit	GNUmakefile	/^.gdbinit: .gdbinit.tmpl$/;"	t
.rodata	kern/kernel.ld	/^	.rodata : {$/;"	S
.stab	kern/kernel.ld	/^	.stab : {$/;"	S
.stabstr	kern/kernel.ld	/^	.stabstr : {$/;"	S
.text	kern/kernel.ld	/^	.text : AT(0x100000) {$/;"	S
ALT	kern/console.c	/^#define ALT	/;"	d	file:
AR	GNUmakefile	/^AR	:= $(GCCPREFIX)ar$/;"	m
ARRAY_SIZE	inc/types.h	/^#define ARRAY_SIZE(/;"	d
AS	GNUmakefile	/^AS	:= $(GCCPREFIX)as$/;"	m
ASM	lib/string.c	/^#define ASM /;"	d	file:
ASM	obj/kern/kernel.asm	/^#define ASM /;"	d	file:
BACKTRACE_RE	grade-lab1	/^BACKTRACE_RE = r"^ *ebp +f01[0-9a-z]{5} +eip +f0100[0-9a-z]{3} +args +([0-9a-z]+)"$/;"	v
BUFLEN	lib/readline.c	/^#define BUFLEN /;"	d	file:
BUFLEN	obj/kern/kernel.asm	/^#define BUFLEN /;"	d	file:
C	kern/console.c	/^#define C(/;"	d	file:
CAPSLOCK	kern/console.c	/^#define CAPSLOCK	/;"	d	file:
CC	GNUmakefile	/^CC	:= $(GCCPREFIX)gcc -pipe$/;"	m
CFLAGS	GNUmakefile	/^CFLAGS := $(CFLAGS) $(DEFS) $(LABDEFS) -O1 -fno-builtin -I$(TOP) -MD$/;"	m
CGA_BASE	kern/console.h	/^#define CGA_BASE	/;"	d
CGA_BUF	kern/console.h	/^#define CGA_BUF	/;"	d
CHECKSUM	kern/entry.S	/^#define CHECKSUM /;"	d	file:
CMDBUF_SIZE	kern/monitor.c	/^#define CMDBUF_SIZE	/;"	d	file:
CMDBYTE	inc/kbdreg.h	/^#define	CMDBYTE	/;"	d
COLORS	gradelib.py	/^COLORS = {"default": "\\033[0m", "red": "\\033[31m", "green": "\\033[32m"}$/;"	v
COM1	kern/console.c	/^#define COM1	/;"	d	file:
COM_DLL	kern/console.c	/^#define COM_DLL	/;"	d	file:
COM_DLM	kern/console.c	/^#define COM_DLM	/;"	d	file:
COM_FCR	kern/console.c	/^#define COM_FCR	/;"	d	file:
COM_IER	kern/console.c	/^#define COM_IER	/;"	d	file:
COM_IER_RDI	kern/console.c	/^#define   COM_IER_RDI	/;"	d	file:
COM_IIR	kern/console.c	/^#define COM_IIR	/;"	d	file:
COM_LCR	kern/console.c	/^#define COM_LCR	/;"	d	file:
COM_LCR_DLAB	kern/console.c	/^#define	  COM_LCR_DLAB	/;"	d	file:
COM_LCR_WLEN8	kern/console.c	/^#define	  COM_LCR_WLEN8	/;"	d	file:
COM_LSR	kern/console.c	/^#define COM_LSR	/;"	d	file:
COM_LSR_DATA	kern/console.c	/^#define   COM_LSR_DATA	/;"	d	file:
COM_LSR_TSRE	kern/console.c	/^#define   COM_LSR_TSRE	/;"	d	file:
COM_LSR_TXRDY	kern/console.c	/^#define   COM_LSR_TXRDY	/;"	d	file:
COM_MCR	kern/console.c	/^#define COM_MCR	/;"	d	file:
COM_MCR_DTR	kern/console.c	/^#define	  COM_MCR_DTR	/;"	d	file:
COM_MCR_OUT2	kern/console.c	/^#define	  COM_MCR_OUT2	/;"	d	file:
COM_MCR_RTS	kern/console.c	/^#define	  COM_MCR_RTS	/;"	d	file:
COM_RX	kern/console.c	/^#define COM_RX	/;"	d	file:
COM_TX	kern/console.c	/^#define COM_TX	/;"	d	file:
CONSBUFSIZE	kern/console.c	/^#define CONSBUFSIZE /;"	d	file:
CR0_AM	inc/mmu.h	/^#define CR0_AM	/;"	d
CR0_CD	inc/mmu.h	/^#define CR0_CD	/;"	d
CR0_EM	inc/mmu.h	/^#define CR0_EM	/;"	d
CR0_ET	inc/mmu.h	/^#define CR0_ET	/;"	d
CR0_MP	inc/mmu.h	/^#define CR0_MP	/;"	d
CR0_NE	inc/mmu.h	/^#define CR0_NE	/;"	d
CR0_NW	inc/mmu.h	/^#define CR0_NW	/;"	d
CR0_PE	inc/mmu.h	/^#define CR0_PE	/;"	d
CR0_PE_ON	boot/boot.S	/^.set CR0_PE_ON,      0x1         # protected mode enable flag$/;"	d
CR0_PE_ON	obj/boot/boot.asm	/^.set CR0_PE_ON,      0x1         # protected mode enable flag$/;"	d
CR0_PG	inc/mmu.h	/^#define CR0_PG	/;"	d
CR0_TS	inc/mmu.h	/^#define CR0_TS	/;"	d
CR0_WP	inc/mmu.h	/^#define CR0_WP	/;"	d
CR4_DE	inc/mmu.h	/^#define CR4_DE	/;"	d
CR4_MCE	inc/mmu.h	/^#define CR4_MCE	/;"	d
CR4_PCE	inc/mmu.h	/^#define CR4_PCE	/;"	d
CR4_PSE	inc/mmu.h	/^#define CR4_PSE	/;"	d
CR4_PVI	inc/mmu.h	/^#define CR4_PVI	/;"	d
CR4_TSD	inc/mmu.h	/^#define CR4_TSD	/;"	d
CR4_VME	inc/mmu.h	/^#define CR4_VME	/;"	d
CRT_COLS	kern/console.h	/^#define CRT_COLS	/;"	d
CRT_ROWS	kern/console.h	/^#define CRT_ROWS	/;"	d
CRT_SIZE	kern/console.h	/^#define CRT_SIZE	/;"	d
CTL	kern/console.c	/^#define CTL	/;"	d	file:
CURRENT_TEST	gradelib.py	/^CURRENT_TEST = None$/;"	v
Command	kern/monitor.c	/^struct Command {$/;"	s	file:
Disassembly	obj/boot/boot.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/kern/kernel.asm	/^Disassembly of section .text:$/;"	l
E0ESC	kern/console.c	/^#define E0ESC	/;"	d	file:
ELFHDR	boot/main.c	/^#define ELFHDR	/;"	d	file:
ELF_MAGIC	inc/elf.h	/^#define ELF_MAGIC /;"	d
ELF_PROG_FLAG_EXEC	inc/elf.h	/^#define ELF_PROG_FLAG_EXEC	/;"	d
ELF_PROG_FLAG_READ	inc/elf.h	/^#define ELF_PROG_FLAG_READ	/;"	d
ELF_PROG_FLAG_WRITE	inc/elf.h	/^#define ELF_PROG_FLAG_WRITE	/;"	d
ELF_PROG_LOAD	inc/elf.h	/^#define ELF_PROG_LOAD	/;"	d
ELF_SHN_UNDEF	inc/elf.h	/^#define ELF_SHN_UNDEF	/;"	d
ELF_SHT_NULL	inc/elf.h	/^#define ELF_SHT_NULL	/;"	d
ELF_SHT_PROGBITS	inc/elf.h	/^#define ELF_SHT_PROGBITS	/;"	d
ELF_SHT_STRTAB	inc/elf.h	/^#define ELF_SHT_STRTAB	/;"	d
ELF_SHT_SYMTAB	inc/elf.h	/^#define ELF_SHT_SYMTAB	/;"	d
EXTPHYSMEM	inc/memlayout.h	/^#define EXTPHYSMEM	/;"	d
E_BAD_ENV	inc/error.h	/^	E_BAD_ENV	,	\/\/ Environment doesn't exist or otherwise$/;"	e	enum:__anon3824070e0103
E_FAULT	inc/error.h	/^	E_FAULT		,	\/\/ Memory fault$/;"	e	enum:__anon3824070e0103
E_INVAL	inc/error.h	/^	E_INVAL		,	\/\/ Invalid parameter$/;"	e	enum:__anon3824070e0103
E_NO_FREE_ENV	inc/error.h	/^	E_NO_FREE_ENV	,	\/\/ Attempt to create a new environment beyond$/;"	e	enum:__anon3824070e0103
E_NO_MEM	inc/error.h	/^	E_NO_MEM	,	\/\/ Request failed due to memory shortage$/;"	e	enum:__anon3824070e0103
E_UNSPECIFIED	inc/error.h	/^	E_UNSPECIFIED	= 1,	\/\/ Unspecified or unknown problem$/;"	e	enum:__anon3824070e0103
Eipdebuginfo	kern/kdebug.h	/^struct Eipdebuginfo {$/;"	s
Elf	inc/elf.h	/^struct Elf {$/;"	s
FEC_PR	inc/mmu.h	/^#define FEC_PR	/;"	d
FEC_U	inc/mmu.h	/^#define FEC_U	/;"	d
FEC_WR	inc/mmu.h	/^#define FEC_WR	/;"	d
FL_AC	inc/mmu.h	/^#define FL_AC	/;"	d
FL_AF	inc/mmu.h	/^#define FL_AF	/;"	d
FL_CF	inc/mmu.h	/^#define FL_CF	/;"	d
FL_DF	inc/mmu.h	/^#define FL_DF	/;"	d
FL_ID	inc/mmu.h	/^#define FL_ID	/;"	d
FL_IF	inc/mmu.h	/^#define FL_IF	/;"	d
FL_IOPL_0	inc/mmu.h	/^#define FL_IOPL_0	/;"	d
FL_IOPL_1	inc/mmu.h	/^#define FL_IOPL_1	/;"	d
FL_IOPL_2	inc/mmu.h	/^#define FL_IOPL_2	/;"	d
FL_IOPL_3	inc/mmu.h	/^#define FL_IOPL_3	/;"	d
FL_IOPL_MASK	inc/mmu.h	/^#define FL_IOPL_MASK	/;"	d
FL_NT	inc/mmu.h	/^#define FL_NT	/;"	d
FL_OF	inc/mmu.h	/^#define FL_OF	/;"	d
FL_PF	inc/mmu.h	/^#define FL_PF	/;"	d
FL_RF	inc/mmu.h	/^#define FL_RF	/;"	d
FL_SF	inc/mmu.h	/^#define FL_SF	/;"	d
FL_TF	inc/mmu.h	/^#define FL_TF	/;"	d
FL_VIF	inc/mmu.h	/^#define FL_VIF	/;"	d
FL_VIP	inc/mmu.h	/^#define FL_VIP	/;"	d
FL_VM	inc/mmu.h	/^#define FL_VM	/;"	d
FL_ZF	inc/mmu.h	/^#define FL_ZF	/;"	d
GCCPREFIX	GNUmakefile	/^GCCPREFIX := $(shell if i386-jos-elf-objdump -i 2>&1 | grep '^elf32-i386$$' >\/dev\/null 2>&1; \\$/;"	m
GCC_LIB	GNUmakefile	/^GCC_LIB := $(shell $(CC) $(CFLAGS) -print-libgcc-file-name)$/;"	m
GDBClient	gradelib.py	/^class GDBClient(object):$/;"	c
GDBPORT	GNUmakefile	/^GDBPORT	:= $(shell expr `id -u` % 5000 + 25000)$/;"	m
GD_KD	inc/memlayout.h	/^#define GD_KD /;"	d
GD_KT	inc/memlayout.h	/^#define GD_KT /;"	d
GD_TSS0	inc/memlayout.h	/^#define GD_TSS0 /;"	d
GD_UD	inc/memlayout.h	/^#define GD_UD /;"	d
GD_UT	inc/memlayout.h	/^#define GD_UT /;"	d
Gatedesc	inc/mmu.h	/^struct Gatedesc {$/;"	s
IMAGES	GNUmakefile	/^IMAGES = $(OBJDIR)\/kern\/kernel.img$/;"	m
IOPHYSMEM	inc/memlayout.h	/^#define IOPHYSMEM	/;"	d
JOS_INC_ASSERT_H	inc/assert.h	/^#define JOS_INC_ASSERT_H$/;"	d
JOS_INC_ELF_H	inc/elf.h	/^#define JOS_INC_ELF_H$/;"	d
JOS_INC_ERROR_H	inc/error.h	/^#define JOS_INC_ERROR_H$/;"	d
JOS_INC_MEMLAYOUT_H	inc/memlayout.h	/^#define JOS_INC_MEMLAYOUT_H$/;"	d
JOS_INC_MMU_H	inc/mmu.h	/^#define JOS_INC_MMU_H$/;"	d
JOS_INC_STDARG_H	inc/stdarg.h	/^#define	JOS_INC_STDARG_H$/;"	d
JOS_INC_STDIO_H	inc/stdio.h	/^#define JOS_INC_STDIO_H$/;"	d
JOS_INC_STRING_H	inc/string.h	/^#define JOS_INC_STRING_H$/;"	d
JOS_INC_TYPES_H	inc/types.h	/^#define JOS_INC_TYPES_H$/;"	d
JOS_INC_X86_H	inc/x86.h	/^#define JOS_INC_X86_H$/;"	d
JOS_KBDREG_H	inc/kbdreg.h	/^#define JOS_KBDREG_H$/;"	d
JOS_KERN_KDEBUG_H	kern/kdebug.h	/^#define JOS_KERN_KDEBUG_H$/;"	d
JOS_KERN_MONITOR_H	kern/monitor.h	/^#define JOS_KERN_MONITOR_H$/;"	d
JOS_STAB_H	inc/stab.h	/^#define JOS_STAB_H$/;"	d
KBCMDP	inc/kbdreg.h	/^#define	KBCMDP	/;"	d
KBC_AUXDISABLE	inc/kbdreg.h	/^#define	 KBC_AUXDISABLE	/;"	d
KBC_AUXECHO	inc/kbdreg.h	/^#define	 KBC_AUXECHO	/;"	d
KBC_AUXENABLE	inc/kbdreg.h	/^#define	 KBC_AUXENABLE	/;"	d
KBC_AUXTEST	inc/kbdreg.h	/^#define	 KBC_AUXTEST	/;"	d
KBC_AUXWRITE	inc/kbdreg.h	/^#define	 KBC_AUXWRITE	/;"	d
KBC_DISABLE	inc/kbdreg.h	/^#define	KBC_DISABLE	/;"	d
KBC_ECHO	inc/kbdreg.h	/^#define	KBC_ECHO	/;"	d
KBC_ENABLE	inc/kbdreg.h	/^#define	KBC_ENABLE	/;"	d
KBC_KBDDISABLE	inc/kbdreg.h	/^#define	 KBC_KBDDISABLE	/;"	d
KBC_KBDECHO	inc/kbdreg.h	/^#define	 KBC_KBDECHO	/;"	d
KBC_KBDENABLE	inc/kbdreg.h	/^#define	 KBC_KBDENABLE	/;"	d
KBC_KBDTEST	inc/kbdreg.h	/^#define	 KBC_KBDTEST	/;"	d
KBC_MODEIND	inc/kbdreg.h	/^#define	KBC_MODEIND	/;"	d
KBC_PULSE0	inc/kbdreg.h	/^#define	 KBC_PULSE0	/;"	d
KBC_PULSE1	inc/kbdreg.h	/^#define	 KBC_PULSE1	/;"	d
KBC_PULSE2	inc/kbdreg.h	/^#define	 KBC_PULSE2	/;"	d
KBC_PULSE3	inc/kbdreg.h	/^#define	 KBC_PULSE3	/;"	d
KBC_RAMREAD	inc/kbdreg.h	/^#define	 KBC_RAMREAD	/;"	d
KBC_RAMWRITE	inc/kbdreg.h	/^#define	 KBC_RAMWRITE	/;"	d
KBC_RESEND	inc/kbdreg.h	/^#define	KBC_RESEND	/;"	d
KBC_RESET	inc/kbdreg.h	/^#define	KBC_RESET	/;"	d
KBC_SELFTEST	inc/kbdreg.h	/^#define	 KBC_SELFTEST	/;"	d
KBC_SETDEFAULT	inc/kbdreg.h	/^#define	KBC_SETDEFAULT	/;"	d
KBC_SETTABLE	inc/kbdreg.h	/^#define	KBC_SETTABLE	/;"	d
KBC_TYPEMATIC	inc/kbdreg.h	/^#define	KBC_TYPEMATIC	/;"	d
KBDATAP	inc/kbdreg.h	/^#define	KBDATAP	/;"	d
KBOUTP	inc/kbdreg.h	/^#define	KBOUTP	/;"	d
KBR_ACK	inc/kbdreg.h	/^#define	KBR_ACK	/;"	d
KBR_BREAK	inc/kbdreg.h	/^#define	KBR_BREAK	/;"	d
KBR_ECHO	inc/kbdreg.h	/^#define	KBR_ECHO	/;"	d
KBR_EXTENDED	inc/kbdreg.h	/^#define	KBR_EXTENDED	/;"	d
KBR_FAILURE	inc/kbdreg.h	/^#define	KBR_FAILURE	/;"	d
KBR_OVERRUN	inc/kbdreg.h	/^#define	KBR_OVERRUN	/;"	d
KBR_RESEND	inc/kbdreg.h	/^#define	KBR_RESEND	/;"	d
KBR_RSTDONE	inc/kbdreg.h	/^#define	KBR_RSTDONE	/;"	d
KBSTATP	inc/kbdreg.h	/^#define	KBSTATP	/;"	d
KBS_DIB	inc/kbdreg.h	/^#define	 KBS_DIB	/;"	d
KBS_IBF	inc/kbdreg.h	/^#define	 KBS_IBF	/;"	d
KBS_NOSEC	inc/kbdreg.h	/^#define	 KBS_NOSEC	/;"	d
KBS_OCMD	inc/kbdreg.h	/^#define	 KBS_OCMD	/;"	d
KBS_PERR	inc/kbdreg.h	/^#define	 KBS_PERR	/;"	d
KBS_RERR	inc/kbdreg.h	/^#define	 KBS_RERR	/;"	d
KBS_TERR	inc/kbdreg.h	/^#define	 KBS_TERR	/;"	d
KBS_WARM	inc/kbdreg.h	/^#define	 KBS_WARM	/;"	d
KC8_CPU	inc/kbdreg.h	/^#define	KC8_CPU	/;"	d
KC8_IGNSEC	inc/kbdreg.h	/^#define	KC8_IGNSEC	/;"	d
KC8_KDISABLE	inc/kbdreg.h	/^#define	KC8_KDISABLE	/;"	d
KC8_KENABLE	inc/kbdreg.h	/^#define	KC8_KENABLE	/;"	d
KC8_MDISABLE	inc/kbdreg.h	/^#define	KC8_MDISABLE	/;"	d
KC8_MENABLE	inc/kbdreg.h	/^#define	KC8_MENABLE	/;"	d
KC8_TRANS	inc/kbdreg.h	/^#define	KC8_TRANS	/;"	d
KERNBASE	inc/memlayout.h	/^#define	KERNBASE	/;"	d
KERN_CFLAGS	GNUmakefile	/^KERN_CFLAGS := $(CFLAGS) -DJOS_KERNEL -gstabs$/;"	m
KEY_DEL	inc/kbdreg.h	/^#define KEY_DEL	/;"	d
KEY_DN	inc/kbdreg.h	/^#define KEY_DN	/;"	d
KEY_END	inc/kbdreg.h	/^#define KEY_END	/;"	d
KEY_HOME	inc/kbdreg.h	/^#define KEY_HOME	/;"	d
KEY_INS	inc/kbdreg.h	/^#define KEY_INS	/;"	d
KEY_LF	inc/kbdreg.h	/^#define KEY_LF	/;"	d
KEY_PGDN	inc/kbdreg.h	/^#define KEY_PGDN	/;"	d
KEY_PGUP	inc/kbdreg.h	/^#define KEY_PGUP	/;"	d
KEY_RT	inc/kbdreg.h	/^#define KEY_RT	/;"	d
KEY_UP	inc/kbdreg.h	/^#define KEY_UP	/;"	d
KSTACKTOP	inc/memlayout.h	/^#define KSTACKTOP	/;"	d
KSTKGAP	inc/memlayout.h	/^#define KSTKGAP	/;"	d
KSTKSIZE	inc/memlayout.h	/^#define KSTKSIZE	/;"	d
K_LDCMDBYTE	inc/kbdreg.h	/^#define	K_LDCMDBYTE	/;"	d
K_RDCMDBYTE	inc/kbdreg.h	/^#define	K_RDCMDBYTE	/;"	d
LAB	conf/lab.mk	/^LAB=1$/;"	m
LABSETUP	GNUmakefile	/^LABSETUP ?= .\/$/;"	m
LD	GNUmakefile	/^LD	:= $(GCCPREFIX)ld$/;"	m
LDFLAGS	GNUmakefile	/^LDFLAGS := -m elf_i386$/;"	m
MAKE_TIMESTAMP	gradelib.py	/^MAKE_TIMESTAMP = 0$/;"	v
MAX	inc/types.h	/^#define MAX(/;"	d
MAXARGS	kern/monitor.c	/^#define MAXARGS /;"	d	file:
MAXERROR	inc/error.h	/^	MAXERROR$/;"	e	enum:__anon3824070e0103
MIN	inc/types.h	/^#define MIN(/;"	d
MMIOBASE	inc/memlayout.h	/^#define MMIOBASE	/;"	d
MMIOLIM	inc/memlayout.h	/^#define MMIOLIM	/;"	d
MONO_BASE	kern/console.h	/^#define MONO_BASE	/;"	d
MONO_BUF	kern/console.h	/^#define MONO_BUF	/;"	d
MULTIBOOT_HEADER_FLAGS	kern/entry.S	/^#define MULTIBOOT_HEADER_FLAGS /;"	d	file:
MULTIBOOT_HEADER_MAGIC	kern/entry.S	/^#define MULTIBOOT_HEADER_MAGIC /;"	d	file:
NATIVE_CFLAGS	GNUmakefile	/^NATIVE_CFLAGS := $(CFLAGS) $(DEFS) $(LABDEFS) -I$(TOP) -MD -Wall$/;"	m
NCC	GNUmakefile	/^NCC	:= gcc $(CC_VER) -pipe$/;"	m
NM	GNUmakefile	/^NM	:= $(GCCPREFIX)nm$/;"	m
NO	kern/console.c	/^#define NO	/;"	d	file:
NPDENTRIES	inc/mmu.h	/^#define NPDENTRIES	/;"	d
NPTENTRIES	inc/mmu.h	/^#define NPTENTRIES	/;"	d
NULL	inc/stdio.h	/^#define NULL	/;"	d
NULL	inc/types.h	/^#define NULL /;"	d
NUMLOCK	kern/console.c	/^#define NUMLOCK	/;"	d	file:
N_BCOMM	inc/stab.h	/^#define	N_BCOMM	/;"	d
N_BINCL	inc/stab.h	/^#define	N_BINCL	/;"	d
N_BSLINE	inc/stab.h	/^#define	N_BSLINE	/;"	d
N_DSLINE	inc/stab.h	/^#define	N_DSLINE	/;"	d
N_ECOML	inc/stab.h	/^#define	N_ECOML	/;"	d
N_ECOMM	inc/stab.h	/^#define	N_ECOMM	/;"	d
N_EINCL	inc/stab.h	/^#define	N_EINCL	/;"	d
N_ENTRY	inc/stab.h	/^#define	N_ENTRY	/;"	d
N_EXCL	inc/stab.h	/^#define	N_EXCL	/;"	d
N_FNAME	inc/stab.h	/^#define	N_FNAME	/;"	d
N_FUN	inc/stab.h	/^#define	N_FUN	/;"	d
N_GSYM	inc/stab.h	/^#define	N_GSYM	/;"	d
N_LBRAC	inc/stab.h	/^#define	N_LBRAC	/;"	d
N_LCSYM	inc/stab.h	/^#define	N_LCSYM	/;"	d
N_LENG	inc/stab.h	/^#define	N_LENG	/;"	d
N_LSYM	inc/stab.h	/^#define	N_LSYM	/;"	d
N_MAIN	inc/stab.h	/^#define	N_MAIN	/;"	d
N_PC	inc/stab.h	/^#define	N_PC	/;"	d
N_PSYM	inc/stab.h	/^#define	N_PSYM	/;"	d
N_RBRAC	inc/stab.h	/^#define	N_RBRAC	/;"	d
N_RSYM	inc/stab.h	/^#define	N_RSYM	/;"	d
N_SLINE	inc/stab.h	/^#define	N_SLINE	/;"	d
N_SO	inc/stab.h	/^#define	N_SO	/;"	d
N_SOL	inc/stab.h	/^#define	N_SOL	/;"	d
N_SSYM	inc/stab.h	/^#define	N_SSYM	/;"	d
N_STSYM	inc/stab.h	/^#define	N_STSYM	/;"	d
OBJCOPY	GNUmakefile	/^OBJCOPY	:= $(GCCPREFIX)objcopy$/;"	m
OBJDIR	GNUmakefile	/^OBJDIR := obj$/;"	m
OBJDIRS	GNUmakefile	/^OBJDIRS :=$/;"	m
OBJDUMP	GNUmakefile	/^OBJDUMP	:= $(GCCPREFIX)objdump$/;"	m
PACKAGEDATE	conf/lab.mk	/^PACKAGEDATE=Thu Aug 30 15:16:04 EDT 2018$/;"	m
PART_TOTAL	gradelib.py	/^PART_TOTAL = PART_POSSIBLE = 0$/;"	v
PDX	inc/mmu.h	/^#define PDX(/;"	d
PDXSHIFT	inc/mmu.h	/^#define PDXSHIFT	/;"	d
PERL	GNUmakefile	/^PERL	:= perl$/;"	m
PFTEMP	inc/memlayout.h	/^#define PFTEMP	/;"	d
PGADDR	inc/mmu.h	/^#define PGADDR(/;"	d
PGNUM	inc/mmu.h	/^#define PGNUM(/;"	d
PGOFF	inc/mmu.h	/^#define PGOFF(/;"	d
PGSHIFT	inc/mmu.h	/^#define PGSHIFT	/;"	d
PGSIZE	inc/mmu.h	/^#define PGSIZE	/;"	d
PROT_MODE_CSEG	boot/boot.S	/^.set PROT_MODE_CSEG, 0x8         # kernel code segment selector$/;"	d
PROT_MODE_DSEG	boot/boot.S	/^.set PROT_MODE_DSEG, 0x10        # kernel data segment selector$/;"	d
PTE_A	inc/mmu.h	/^#define PTE_A	/;"	d
PTE_ADDR	inc/mmu.h	/^#define PTE_ADDR(/;"	d
PTE_AVAIL	inc/mmu.h	/^#define PTE_AVAIL	/;"	d
PTE_D	inc/mmu.h	/^#define PTE_D	/;"	d
PTE_G	inc/mmu.h	/^#define PTE_G	/;"	d
PTE_P	inc/mmu.h	/^#define PTE_P	/;"	d
PTE_PCD	inc/mmu.h	/^#define PTE_PCD	/;"	d
PTE_PS	inc/mmu.h	/^#define PTE_PS	/;"	d
PTE_PWT	inc/mmu.h	/^#define PTE_PWT	/;"	d
PTE_SYSCALL	inc/mmu.h	/^#define PTE_SYSCALL	/;"	d
PTE_U	inc/mmu.h	/^#define PTE_U	/;"	d
PTE_W	inc/mmu.h	/^#define PTE_W	/;"	d
PTSHIFT	inc/mmu.h	/^#define PTSHIFT	/;"	d
PTSIZE	inc/mmu.h	/^#define PTSIZE	/;"	d
PTX	inc/mmu.h	/^#define PTX(/;"	d
PTXSHIFT	inc/mmu.h	/^#define PTXSHIFT	/;"	d
Proghdr	inc/elf.h	/^struct Proghdr {$/;"	s
Pseudodesc	inc/mmu.h	/^struct Pseudodesc {$/;"	s
QEMU	GNUmakefile	/^QEMU := $(shell if which qemu >\/dev\/null 2>&1; \\$/;"	m
QEMU	gradelib.py	/^class QEMU(object):$/;"	c
QEMUOPTS	GNUmakefile	/^QEMUOPTS = -drive file=$(OBJDIR)\/kern\/kernel.img,index=0,media=disk,format=raw -serial mon:std/;"	m
RELOC	kern/entry.S	/^#define	RELOC(/;"	d	file:
ROUNDDOWN	inc/types.h	/^#define ROUNDDOWN(/;"	d
ROUNDUP	inc/types.h	/^#define ROUNDUP(/;"	d
Runner	gradelib.py	/^class Runner():$/;"	c
SCROLLLOCK	kern/console.c	/^#define SCROLLLOCK	/;"	d	file:
SECTSIZE	boot/main.c	/^#define SECTSIZE	/;"	d	file:
SEG	inc/mmu.h	/^#define SEG(/;"	d
SEG16	inc/mmu.h	/^#define SEG16(/;"	d
SEG_FAULT	inc/mmu.h	/^#define SEG_FAULT	/;"	d
SEG_NULL	inc/mmu.h	/^#define SEG_NULL	/;"	d
SETCALLGATE	inc/mmu.h	/^#define SETCALLGATE(/;"	d
SETGATE	inc/mmu.h	/^#define SETGATE(/;"	d
SHIFT	kern/console.c	/^#define SHIFT	/;"	d	file:
SRL	kern/entry.S	/^#define SRL(/;"	d	file:
STA_A	inc/mmu.h	/^#define STA_A	/;"	d
STA_C	inc/mmu.h	/^#define STA_C	/;"	d
STA_E	inc/mmu.h	/^#define STA_E	/;"	d
STA_R	inc/mmu.h	/^#define STA_R	/;"	d
STA_W	inc/mmu.h	/^#define STA_W	/;"	d
STA_X	inc/mmu.h	/^#define STA_X	/;"	d
STS_CG16	inc/mmu.h	/^#define STS_CG16	/;"	d
STS_CG32	inc/mmu.h	/^#define STS_CG32	/;"	d
STS_IG16	inc/mmu.h	/^#define STS_IG16	/;"	d
STS_IG32	inc/mmu.h	/^#define STS_IG32	/;"	d
STS_LDT	inc/mmu.h	/^#define STS_LDT	/;"	d
STS_T16A	inc/mmu.h	/^#define STS_T16A	/;"	d
STS_T16B	inc/mmu.h	/^#define STS_T16B	/;"	d
STS_T32A	inc/mmu.h	/^#define STS_T32A	/;"	d
STS_T32B	inc/mmu.h	/^#define STS_T32B	/;"	d
STS_TG	inc/mmu.h	/^#define STS_TG	/;"	d
STS_TG16	inc/mmu.h	/^#define STS_TG16	/;"	d
STS_TG32	inc/mmu.h	/^#define STS_TG32	/;"	d
Secthdr	inc/elf.h	/^struct Secthdr {$/;"	s
Segdesc	inc/mmu.h	/^struct Segdesc {$/;"	s
Stab	inc/stab.h	/^struct Stab {$/;"	s
TAR	GNUmakefile	/^TAR	:= gtar$/;"	m
TEMP_ADDR	user/sendpage.c	/^#define TEMP_ADDR	/;"	d	file:
TEMP_ADDR_CHILD	user/sendpage.c	/^#define TEMP_ADDR_CHILD	/;"	d	file:
TESTS	gradelib.py	/^TESTS = []$/;"	v
TOP	GNUmakefile	/^TOP = .$/;"	m
TOTAL	gradelib.py	/^TOTAL = POSSIBLE = 0$/;"	v
Taskstate	inc/mmu.h	/^struct Taskstate {$/;"	s
TerminateTest	gradelib.py	/^class TerminateTest(Exception):$/;"	c
UENVS	inc/memlayout.h	/^#define UENVS	/;"	d
ULDFLAGS	GNUmakefile	/^ULDFLAGS := -T user\/user.ld$/;"	m
ULIM	inc/memlayout.h	/^#define ULIM	/;"	d
UPAGES	inc/memlayout.h	/^#define UPAGES	/;"	d
UPSTREAM	GNUmakefile	/^UPSTREAM := $(shell git remote -v | grep "pdos.csail.mit.edu\/6.828\/2018\/jos.git (fetch)" | aw/;"	m
USER_CFLAGS	GNUmakefile	/^USER_CFLAGS := $(CFLAGS) -DJOS_USER -gstabs$/;"	m
USTABDATA	inc/memlayout.h	/^#define USTABDATA	/;"	d
USTACKTOP	inc/memlayout.h	/^#define USTACKTOP	/;"	d
UTEMP	inc/memlayout.h	/^#define UTEMP	/;"	d
UTEXT	inc/memlayout.h	/^#define UTEXT	/;"	d
UTOP	inc/memlayout.h	/^#define UTOP	/;"	d
UVPT	inc/memlayout.h	/^#define UVPT	/;"	d
UXSTACKTOP	inc/memlayout.h	/^#define UXSTACKTOP	/;"	d
V	conf/env.mk	/^V = @$/;"	m
WEBSUB	GNUmakefile	/^WEBSUB := https:\/\/6828.scripts.mit.edu\/2018\/handin.py$/;"	m
WHITESPACE	kern/monitor.c	/^#define WHITESPACE /;"	d	file:
_Bool	inc/types.h	/^typedef _Bool bool;$/;"	t	typeref:typename:bool
_CONSOLE_H_	kern/console.h	/^#define _CONSOLE_H_$/;"	d
_GDBPORT	gradelib.py	/^    _GDBPORT = None$/;"	v	class:QEMU
__STABSTR_BEGIN__	kern/kernel.ld	/^		PROVIDE(__STABSTR_BEGIN__ = .);$/;"	s	section:.stabstr	assignment:provide
__STABSTR_END__	kern/kernel.ld	/^		PROVIDE(__STABSTR_END__ = .);$/;"	s	section:.stabstr	assignment:provide
__STAB_BEGIN__	kern/kernel.ld	/^		PROVIDE(__STAB_BEGIN__ = .);$/;"	s	section:.stab	assignment:provide
__STAB_END__	kern/kernel.ld	/^		PROVIDE(__STAB_END__ = .);$/;"	s	section:.stab	assignment:provide
__all__	gradelib.py	/^__all__ = []$/;"	v
__anon3824070e0103	inc/error.h	/^enum {$/;"	g
__anon9d6ad5280108	kern/console.c	/^static struct {$/;"	s	file:
__anoncaf80a390103	inc/types.h	/^enum { false, true };$/;"	g
__init__	gradelib.py	/^    def __init__(self, *default_monitors):$/;"	m	class:Runner
__init__	gradelib.py	/^    def __init__(self, *make_args):$/;"	m	class:QEMU
__init__	gradelib.py	/^    def __init__(self, port, timeout=15):$/;"	m	class:GDBClient
__monitor_start	gradelib.py	/^    def __monitor_start(self, output):$/;"	m	class:Runner	file:
__react	gradelib.py	/^    def __react(self, reactors, timeout):$/;"	m	class:Runner	file:
__send	gradelib.py	/^    def __send(self, cmd):$/;"	m	class:GDBClient	file:
__send_break	gradelib.py	/^    def __send_break(self):$/;"	m	class:GDBClient	file:
_panic	kern/init.c	/^_panic(const char *file, int line, const char *fmt,...)$/;"	f	typeref:typename:void
_start	kern/entry.S	/^_start = RELOC(entry)$/;"	d
_start	obj/kern/kernel.asm	/^_start = RELOC(entry)$/;"	d
_warn	kern/init.c	/^_warn(const char *file, int line, const char *fmt,...)$/;"	f	typeref:typename:void
addr_6845	kern/console.c	/^static unsigned addr_6845;$/;"	v	typeref:typename:unsigned	file:
addr_6845	obj/kern/kernel.asm	/^		addr_6845 = CGA_BASE;$/;"	d
addr_6845	obj/kern/kernel.asm	/^		addr_6845 = MONO_BASE;$/;"	d
all	GNUmakefile	/^all:$/;"	t
altflag	obj/kern/kernel.asm	/^			altflag = 1;$/;"	d
altflag	obj/kern/kernel.asm	/^		altflag = 0;$/;"	d
always	GNUmakefile	/^always:$/;"	t
any_matches	obj/kern/kernel.asm	/^		any_matches = 1;$/;"	d
argc	obj/kern/kernel.asm	/^	argc = 0;$/;"	d
assert	inc/assert.h	/^#define assert(/;"	d
assert_equal	gradelib.py	/^def assert_equal(got, expect, msg=""):$/;"	f
assert_lines_match	gradelib.py	/^def assert_lines_match(text, *regexps, **kw):$/;"	f
assert_lines_match_kw	gradelib.py	/^    def assert_lines_match_kw(no=[]):$/;"	f	function:assert_lines_match	file:
base	obj/kern/kernel.asm	/^			base = 10;$/;"	d
base	obj/kern/kernel.asm	/^			base = 16;$/;"	d
base	obj/kern/kernel.asm	/^		base = 10;$/;"	d
bootmain	boot/main.c	/^bootmain(void)$/;"	f	typeref:typename:void
bootstack	kern/entry.S	/^bootstack:$/;"	l
bootstacktop	kern/entry.S	/^bootstacktop:$/;"	l
breakpoint	gradelib.py	/^    def breakpoint(self, addr):$/;"	m	class:GDBClient
breakpoint	inc/x86.h	/^breakpoint(void)$/;"	f	typeref:typename:void
buf	kern/console.c	/^	uint8_t buf[CONSBUFSIZE];$/;"	m	struct:__anon9d6ad5280108	typeref:typename:uint8_t[]	file:
buf	lib/printfmt.c	/^	char *buf;$/;"	m	struct:sprintbuf	typeref:typename:char *	file:
buf	lib/readline.c	/^static char buf[BUFLEN];$/;"	v	typeref:typename:char[]	file:
buf	obj/kern/kernel.asm	/^		buf = readline("K> ");$/;"	d
c	obj/kern/kernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/kern/kernel.asm	/^		c = cons.buf[cons.rpos++];$/;"	d
c	obj/kern/kernel.asm	/^		c = getchar();$/;"	d
c	obj/kern/kernel.asm	/^	c = charcode[shift & (CTL | SHIFT)][data];$/;"	d
call_on_line	gradelib.py	/^def call_on_line(regexp, callback):$/;"	f
cga_init	kern/console.c	/^cga_init(void)$/;"	f	typeref:typename:void	file:
cga_putc	kern/console.c	/^cga_putc(int c)$/;"	f	typeref:typename:void	file:
ch	obj/kern/kernel.asm	/^				ch = *fmt;$/;"	d
char	obj/kern/kernel.asm	/^char *$/;"	l
charcode	kern/console.c	/^static uint8_t *charcode[4] = {$/;"	v	typeref:typename:uint8_t * [4]	file:
clean	GNUmakefile	/^clean:$/;"	t
close	gradelib.py	/^    def close(self):$/;"	m	class:GDBClient
cnt	lib/printfmt.c	/^	int cnt;$/;"	m	struct:sprintbuf	typeref:typename:int	file:
cnt	obj/kern/kernel.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
color	gradelib.py	/^def color(name, text):$/;"	f
commands	kern/monitor.c	/^static struct Command commands[] = {$/;"	v	typeref:struct:Command[]	file:
cons	kern/console.c	/^} cons;$/;"	v	typeref:struct:__anon9d6ad5280108
cons_getc	kern/console.c	/^cons_getc(void)$/;"	f	typeref:typename:int
cons_init	kern/console.c	/^cons_init(void)$/;"	f	typeref:typename:void
cons_intr	kern/console.c	/^cons_intr(int (*proc)(void))$/;"	f	typeref:typename:void	file:
cons_putc	kern/console.c	/^cons_putc(int c)$/;"	f	typeref:typename:void	file:
const	obj/kern/kernel.asm	/^	const struct Stab *stabs, *stab_end;$/;"	t
cont	gradelib.py	/^    def cont(self):$/;"	m	class:GDBClient
cp	obj/kern/kernel.asm	/^		cp = (uint16_t*) (KERNBASE + MONO_BUF);$/;"	d
cp	obj/kern/kernel.asm	/^	cp = (uint16_t*) (KERNBASE + CGA_BUF);$/;"	d
cprintf	kern/printf.c	/^cprintf(const char *fmt, ...)$/;"	f	typeref:typename:int
cpuid	inc/x86.h	/^cpuid(uint32_t info, uint32_t *eaxp, uint32_t *ebxp, uint32_t *ecxp, uint32_t *edxp)$/;"	f	typeref:typename:void
cputchar	kern/console.c	/^cputchar(int c)$/;"	f	typeref:typename:void
crt_buf	kern/console.c	/^static uint16_t *crt_buf;$/;"	v	typeref:typename:uint16_t *	file:
crt_buf	obj/kern/kernel.asm	/^	crt_buf = (uint16_t*) cp;$/;"	d
crt_pos	kern/console.c	/^static uint16_t crt_pos;$/;"	v	typeref:typename:uint16_t	file:
crt_pos	obj/kern/kernel.asm	/^	crt_pos = pos;$/;"	d
ctlmap	kern/console.c	/^static uint8_t ctlmap[256] =$/;"	v	typeref:typename:uint8_t[256]	file:
d	obj/kern/kernel.asm	/^	d = dst;$/;"	d
data	obj/kern/kernel.asm	/^		data = (shift & E0ESC ? data : data & 0x7F);$/;"	d
dead	obj/kern/kernel.asm	/^dead:$/;"	l
debuginfo_eip	kern/kdebug.c	/^debuginfo_eip(uintptr_t addr, struct Eipdebuginfo *info)$/;"	f	typeref:typename:int
delay	kern/console.c	/^delay(void)$/;"	f	typeref:typename:void	file:
desc	kern/monitor.c	/^	const char *desc;$/;"	m	struct:Command	typeref:typename:const char *	file:
dig	obj/kern/kernel.asm	/^			dig = *s - '0';$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
distclean	GNUmakefile	/^distclean: realclean$/;"	t
dst_in	obj/kern/kernel.asm	/^	dst_in = dst;$/;"	d
e_ehsize	inc/elf.h	/^	uint16_t e_ehsize;$/;"	m	struct:Elf	typeref:typename:uint16_t
e_elf	inc/elf.h	/^	uint8_t e_elf[12];$/;"	m	struct:Elf	typeref:typename:uint8_t[12]
e_entry	inc/elf.h	/^	uint32_t e_entry;$/;"	m	struct:Elf	typeref:typename:uint32_t
e_flags	inc/elf.h	/^	uint32_t e_flags;$/;"	m	struct:Elf	typeref:typename:uint32_t
e_machine	inc/elf.h	/^	uint16_t e_machine;$/;"	m	struct:Elf	typeref:typename:uint16_t
e_magic	inc/elf.h	/^	uint32_t e_magic;	\/\/ must equal ELF_MAGIC$/;"	m	struct:Elf	typeref:typename:uint32_t
e_phentsize	inc/elf.h	/^	uint16_t e_phentsize;$/;"	m	struct:Elf	typeref:typename:uint16_t
e_phnum	inc/elf.h	/^	uint16_t e_phnum;$/;"	m	struct:Elf	typeref:typename:uint16_t
e_phoff	inc/elf.h	/^	uint32_t e_phoff;$/;"	m	struct:Elf	typeref:typename:uint32_t
e_shentsize	inc/elf.h	/^	uint16_t e_shentsize;$/;"	m	struct:Elf	typeref:typename:uint16_t
e_shnum	inc/elf.h	/^	uint16_t e_shnum;$/;"	m	struct:Elf	typeref:typename:uint16_t
e_shoff	inc/elf.h	/^	uint32_t e_shoff;$/;"	m	struct:Elf	typeref:typename:uint32_t
e_shstrndx	inc/elf.h	/^	uint16_t e_shstrndx;$/;"	m	struct:Elf	typeref:typename:uint16_t
e_type	inc/elf.h	/^	uint16_t e_type;$/;"	m	struct:Elf	typeref:typename:uint16_t
e_version	inc/elf.h	/^	uint32_t e_version;$/;"	m	struct:Elf	typeref:typename:uint32_t
ebuf	lib/printfmt.c	/^	char *ebuf;$/;"	m	struct:sprintbuf	typeref:typename:char *	file:
echoing	obj/kern/kernel.asm	/^	echoing = iscons(0);$/;"	d
edata	kern/kernel.ld	/^		PROVIDE(edata = .);$/;"	s	section:.bss	assignment:provide
eip_file	kern/kdebug.h	/^	const char *eip_file;		\/\/ Source code filename for EIP$/;"	m	struct:Eipdebuginfo	typeref:typename:const char *
eip_fn_addr	kern/kdebug.h	/^	uintptr_t eip_fn_addr;		\/\/ Address of start of function$/;"	m	struct:Eipdebuginfo	typeref:typename:uintptr_t
eip_fn_name	kern/kdebug.h	/^	const char *eip_fn_name;	\/\/ Name of function containing EIP$/;"	m	struct:Eipdebuginfo	typeref:typename:const char *
eip_fn_namelen	kern/kdebug.h	/^	int eip_fn_namelen;		\/\/ Length of function name$/;"	m	struct:Eipdebuginfo	typeref:typename:int
eip_fn_narg	kern/kdebug.h	/^	int eip_fn_narg;		\/\/ Number of function arguments$/;"	m	struct:Eipdebuginfo	typeref:typename:int
eip_line	kern/kdebug.h	/^	int eip_line;			\/\/ Source code linenumber for EIP$/;"	m	struct:Eipdebuginfo	typeref:typename:int
end	kern/kernel.ld	/^		PROVIDE(end = .);$/;"	s	section:.bss	assignment:provide
end_pa	obj/boot/boot.asm	/^	end_pa = pa + count;$/;"	d
end_part	gradelib.py	/^def end_part(name):$/;"	f
entry	kern/entry.S	/^entry:$/;"	l
entry	obj/kern/kernel.asm	/^entry:$/;"	l
entry_pgdir	kern/entrypgdir.c	/^pde_t entry_pgdir[NPDENTRIES] = {$/;"	v	typeref:typename:pde_t[]
entry_pgtable	kern/entrypgdir.c	/^pte_t entry_pgtable[NPTENTRIES] = {$/;"	v	typeref:typename:pte_t[]
entry_pgtable	kern/entrypgdir.c	/^pte_t entry_pgtable[NPTENTRIES];$/;"	v	typeref:typename:pte_t[]
eph	obj/boot/boot.asm	/^	eph = ph + ELFHDR->e_phnum;$/;"	d
err	obj/kern/kernel.asm	/^			err = va_arg(ap, int);$/;"	d
error_string	lib/printfmt.c	/^static const char * const error_string[MAXERROR] =$/;"	v	typeref:typename:const char * const[]	file:
etext	kern/kernel.ld	/^	PROVIDE(etext = .);	\/* Define the 'etext' symbol to this value *\/$/;"	s	assignment:provide
f0100000	obj/kern/kernel.asm	/^f0100000 <_start+0xeffffff4>:$/;"	l
f0100000	obj/kern/kernel.asm	/^f0100000:	02 b0 ad 1b 00 00    	add    0x1bad(%eax),%dh$/;"	l
f0100006	obj/kern/kernel.asm	/^f0100006:	00 00                	add    %al,(%eax)$/;"	l
f0100008	obj/kern/kernel.asm	/^f0100008:	fe 4f 52             	decb   0x52(%edi)$/;"	l
f010000b	obj/kern/kernel.asm	/^f010000b:	e4                   	.byte 0xe4$/;"	l
f010000c	obj/kern/kernel.asm	/^f010000c <entry>:$/;"	l
f010000c	obj/kern/kernel.asm	/^f010000c:	66 c7 05 72 04 00 00 	movw   $0x1234,0x472$/;"	l
f0100013	obj/kern/kernel.asm	/^f0100013:	34 12 $/;"	l
f0100015	obj/kern/kernel.asm	/^f0100015:	b8 00 20 11 00       	mov    $0x112000,%eax$/;"	l
f010001a	obj/kern/kernel.asm	/^f010001a:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f010001d	obj/kern/kernel.asm	/^f010001d:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f0100020	obj/kern/kernel.asm	/^f0100020:	0d 01 00 01 80       	or     $0x80010001,%eax$/;"	l
f0100025	obj/kern/kernel.asm	/^f0100025:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f0100028	obj/kern/kernel.asm	/^f0100028:	b8 2f 00 10 f0       	mov    $0xf010002f,%eax$/;"	l
f010002d	obj/kern/kernel.asm	/^f010002d:	ff e0                	jmp    *%eax$/;"	l
f010002f	obj/kern/kernel.asm	/^f010002f <relocated>:$/;"	l
f010002f	obj/kern/kernel.asm	/^f010002f:	bd 00 00 00 00       	mov    $0x0,%ebp$/;"	l
f0100034	obj/kern/kernel.asm	/^f0100034:	bc 00 00 11 f0       	mov    $0xf0110000,%esp$/;"	l
f0100039	obj/kern/kernel.asm	/^f0100039:	e8 68 00 00 00       	call   f01000a6 <i386_init>$/;"	l
f010003e	obj/kern/kernel.asm	/^f010003e <spin>:$/;"	l
f010003e	obj/kern/kernel.asm	/^f010003e:	eb fe                	jmp    f010003e <spin>$/;"	l
f0100040	obj/kern/kernel.asm	/^f0100040 <test_backtrace>:$/;"	l
f0100040	obj/kern/kernel.asm	/^f0100040:	55                   	push   %ebp$/;"	l
f0100041	obj/kern/kernel.asm	/^f0100041:	89 e5                	mov    %esp,%ebp$/;"	l
f0100043	obj/kern/kernel.asm	/^f0100043:	56                   	push   %esi$/;"	l
f0100044	obj/kern/kernel.asm	/^f0100044:	53                   	push   %ebx$/;"	l
f0100045	obj/kern/kernel.asm	/^f0100045:	e8 72 01 00 00       	call   f01001bc <__x86.get_pc_thunk.bx>$/;"	l
f010004a	obj/kern/kernel.asm	/^f010004a:	81 c3 be 12 01 00    	add    $0x112be,%ebx$/;"	l
f0100050	obj/kern/kernel.asm	/^f0100050:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0100053	obj/kern/kernel.asm	/^f0100053:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100056	obj/kern/kernel.asm	/^f0100056:	56                   	push   %esi$/;"	l
f0100057	obj/kern/kernel.asm	/^f0100057:	8d 83 f8 06 ff ff    	lea    -0xf908(%ebx),%eax$/;"	l
f010005d	obj/kern/kernel.asm	/^f010005d:	50                   	push   %eax$/;"	l
f010005e	obj/kern/kernel.asm	/^f010005e:	e8 e6 09 00 00       	call   f0100a49 <cprintf>$/;"	l
f0100063	obj/kern/kernel.asm	/^f0100063:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100066	obj/kern/kernel.asm	/^f0100066:	85 f6                	test   %esi,%esi$/;"	l
f0100068	obj/kern/kernel.asm	/^f0100068:	7f 2b                	jg     f0100095 <test_backtrace+0x55>$/;"	l
f010006a	obj/kern/kernel.asm	/^f010006a:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010006d	obj/kern/kernel.asm	/^f010006d:	6a 00                	push   $0x0$/;"	l
f010006f	obj/kern/kernel.asm	/^f010006f:	6a 00                	push   $0x0$/;"	l
f0100071	obj/kern/kernel.asm	/^f0100071:	6a 00                	push   $0x0$/;"	l
f0100073	obj/kern/kernel.asm	/^f0100073:	e8 0b 08 00 00       	call   f0100883 <mon_backtrace>$/;"	l
f0100078	obj/kern/kernel.asm	/^f0100078:	83 c4 10             	add    $0x10,%esp$/;"	l
f010007b	obj/kern/kernel.asm	/^f010007b:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010007e	obj/kern/kernel.asm	/^f010007e:	56                   	push   %esi$/;"	l
f010007f	obj/kern/kernel.asm	/^f010007f:	8d 83 14 07 ff ff    	lea    -0xf8ec(%ebx),%eax$/;"	l
f0100085	obj/kern/kernel.asm	/^f0100085:	50                   	push   %eax$/;"	l
f0100086	obj/kern/kernel.asm	/^f0100086:	e8 be 09 00 00       	call   f0100a49 <cprintf>$/;"	l
f010008b	obj/kern/kernel.asm	/^f010008b:	83 c4 10             	add    $0x10,%esp$/;"	l
f010008e	obj/kern/kernel.asm	/^f010008e:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f0100091	obj/kern/kernel.asm	/^f0100091:	5b                   	pop    %ebx$/;"	l
f0100092	obj/kern/kernel.asm	/^f0100092:	5e                   	pop    %esi$/;"	l
f0100093	obj/kern/kernel.asm	/^f0100093:	5d                   	pop    %ebp$/;"	l
f0100094	obj/kern/kernel.asm	/^f0100094:	c3                   	ret    $/;"	l
f0100095	obj/kern/kernel.asm	/^f0100095:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100098	obj/kern/kernel.asm	/^f0100098:	8d 46 ff             	lea    -0x1(%esi),%eax$/;"	l
f010009b	obj/kern/kernel.asm	/^f010009b:	50                   	push   %eax$/;"	l
f010009c	obj/kern/kernel.asm	/^f010009c:	e8 9f ff ff ff       	call   f0100040 <test_backtrace>$/;"	l
f01000a1	obj/kern/kernel.asm	/^f01000a1:	83 c4 10             	add    $0x10,%esp$/;"	l
f01000a4	obj/kern/kernel.asm	/^f01000a4:	eb d5                	jmp    f010007b <test_backtrace+0x3b>$/;"	l
f01000a6	obj/kern/kernel.asm	/^f01000a6 <i386_init>:$/;"	l
f01000a6	obj/kern/kernel.asm	/^f01000a6:	55                   	push   %ebp$/;"	l
f01000a7	obj/kern/kernel.asm	/^f01000a7:	89 e5                	mov    %esp,%ebp$/;"	l
f01000a9	obj/kern/kernel.asm	/^f01000a9:	53                   	push   %ebx$/;"	l
f01000aa	obj/kern/kernel.asm	/^f01000aa:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01000ad	obj/kern/kernel.asm	/^f01000ad:	e8 0a 01 00 00       	call   f01001bc <__x86.get_pc_thunk.bx>$/;"	l
f01000b2	obj/kern/kernel.asm	/^f01000b2:	81 c3 56 12 01 00    	add    $0x11256,%ebx$/;"	l
f01000b8	obj/kern/kernel.asm	/^f01000b8:	c7 c2 60 30 11 f0    	mov    $0xf0113060,%edx$/;"	l
f01000be	obj/kern/kernel.asm	/^f01000be:	c7 c0 a0 36 11 f0    	mov    $0xf01136a0,%eax$/;"	l
f01000c4	obj/kern/kernel.asm	/^f01000c4:	29 d0                	sub    %edx,%eax$/;"	l
f01000c6	obj/kern/kernel.asm	/^f01000c6:	50                   	push   %eax$/;"	l
f01000c7	obj/kern/kernel.asm	/^f01000c7:	6a 00                	push   $0x0$/;"	l
f01000c9	obj/kern/kernel.asm	/^f01000c9:	52                   	push   %edx$/;"	l
f01000ca	obj/kern/kernel.asm	/^f01000ca:	e8 da 14 00 00       	call   f01015a9 <memset>$/;"	l
f01000cf	obj/kern/kernel.asm	/^f01000cf:	e8 3d 05 00 00       	call   f0100611 <cons_init>$/;"	l
f01000d4	obj/kern/kernel.asm	/^f01000d4:	83 c4 08             	add    $0x8,%esp$/;"	l
f01000d7	obj/kern/kernel.asm	/^f01000d7:	68 ac 1a 00 00       	push   $0x1aac$/;"	l
f01000dc	obj/kern/kernel.asm	/^f01000dc:	8d 83 2f 07 ff ff    	lea    -0xf8d1(%ebx),%eax$/;"	l
f01000e2	obj/kern/kernel.asm	/^f01000e2:	50                   	push   %eax$/;"	l
f01000e3	obj/kern/kernel.asm	/^f01000e3:	e8 61 09 00 00       	call   f0100a49 <cprintf>$/;"	l
f01000e8	obj/kern/kernel.asm	/^f01000e8:	c7 04 24 05 00 00 00 	movl   $0x5,(%esp)$/;"	l
f01000ef	obj/kern/kernel.asm	/^f01000ef:	e8 4c ff ff ff       	call   f0100040 <test_backtrace>$/;"	l
f01000f4	obj/kern/kernel.asm	/^f01000f4:	83 c4 10             	add    $0x10,%esp$/;"	l
f01000f7	obj/kern/kernel.asm	/^f01000f7:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01000fa	obj/kern/kernel.asm	/^f01000fa:	6a 00                	push   $0x0$/;"	l
f01000fc	obj/kern/kernel.asm	/^f01000fc:	e8 8c 07 00 00       	call   f010088d <monitor>$/;"	l
f0100101	obj/kern/kernel.asm	/^f0100101:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100104	obj/kern/kernel.asm	/^f0100104:	eb f1                	jmp    f01000f7 <i386_init+0x51>$/;"	l
f0100106	obj/kern/kernel.asm	/^f0100106 <_panic>:$/;"	l
f0100106	obj/kern/kernel.asm	/^f0100106:	55                   	push   %ebp$/;"	l
f0100107	obj/kern/kernel.asm	/^f0100107:	89 e5                	mov    %esp,%ebp$/;"	l
f0100109	obj/kern/kernel.asm	/^f0100109:	57                   	push   %edi$/;"	l
f010010a	obj/kern/kernel.asm	/^f010010a:	56                   	push   %esi$/;"	l
f010010b	obj/kern/kernel.asm	/^f010010b:	53                   	push   %ebx$/;"	l
f010010c	obj/kern/kernel.asm	/^f010010c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010010f	obj/kern/kernel.asm	/^f010010f:	e8 a8 00 00 00       	call   f01001bc <__x86.get_pc_thunk.bx>$/;"	l
f0100114	obj/kern/kernel.asm	/^f0100114:	81 c3 f4 11 01 00    	add    $0x111f4,%ebx$/;"	l
f010011a	obj/kern/kernel.asm	/^f010011a:	8b 7d 10             	mov    0x10(%ebp),%edi$/;"	l
f010011d	obj/kern/kernel.asm	/^f010011d:	c7 c0 a4 36 11 f0    	mov    $0xf01136a4,%eax$/;"	l
f0100123	obj/kern/kernel.asm	/^f0100123:	83 38 00             	cmpl   $0x0,(%eax)$/;"	l
f0100126	obj/kern/kernel.asm	/^f0100126:	74 0f                	je     f0100137 <_panic+0x31>$/;"	l
f0100128	obj/kern/kernel.asm	/^f0100128:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010012b	obj/kern/kernel.asm	/^f010012b:	6a 00                	push   $0x0$/;"	l
f010012d	obj/kern/kernel.asm	/^f010012d:	e8 5b 07 00 00       	call   f010088d <monitor>$/;"	l
f0100132	obj/kern/kernel.asm	/^f0100132:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100135	obj/kern/kernel.asm	/^f0100135:	eb f1                	jmp    f0100128 <_panic+0x22>$/;"	l
f0100137	obj/kern/kernel.asm	/^f0100137:	89 38                	mov    %edi,(%eax)$/;"	l
f0100139	obj/kern/kernel.asm	/^f0100139:	fa                   	cli    $/;"	l
f010013a	obj/kern/kernel.asm	/^f010013a:	fc                   	cld    $/;"	l
f010013b	obj/kern/kernel.asm	/^f010013b:	8d 75 14             	lea    0x14(%ebp),%esi$/;"	l
f010013e	obj/kern/kernel.asm	/^f010013e:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100141	obj/kern/kernel.asm	/^f0100141:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0100144	obj/kern/kernel.asm	/^f0100144:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0100147	obj/kern/kernel.asm	/^f0100147:	8d 83 4a 07 ff ff    	lea    -0xf8b6(%ebx),%eax$/;"	l
f010014d	obj/kern/kernel.asm	/^f010014d:	50                   	push   %eax$/;"	l
f010014e	obj/kern/kernel.asm	/^f010014e:	e8 f6 08 00 00       	call   f0100a49 <cprintf>$/;"	l
f0100153	obj/kern/kernel.asm	/^f0100153:	83 c4 08             	add    $0x8,%esp$/;"	l
f0100156	obj/kern/kernel.asm	/^f0100156:	56                   	push   %esi$/;"	l
f0100157	obj/kern/kernel.asm	/^f0100157:	57                   	push   %edi$/;"	l
f0100158	obj/kern/kernel.asm	/^f0100158:	e8 b5 08 00 00       	call   f0100a12 <vcprintf>$/;"	l
f010015d	obj/kern/kernel.asm	/^f010015d:	8d 83 86 07 ff ff    	lea    -0xf87a(%ebx),%eax$/;"	l
f0100163	obj/kern/kernel.asm	/^f0100163:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100166	obj/kern/kernel.asm	/^f0100166:	e8 de 08 00 00       	call   f0100a49 <cprintf>$/;"	l
f010016b	obj/kern/kernel.asm	/^f010016b:	83 c4 10             	add    $0x10,%esp$/;"	l
f010016e	obj/kern/kernel.asm	/^f010016e:	eb b8                	jmp    f0100128 <_panic+0x22>$/;"	l
f0100170	obj/kern/kernel.asm	/^f0100170 <_warn>:$/;"	l
f0100170	obj/kern/kernel.asm	/^f0100170:	55                   	push   %ebp$/;"	l
f0100171	obj/kern/kernel.asm	/^f0100171:	89 e5                	mov    %esp,%ebp$/;"	l
f0100173	obj/kern/kernel.asm	/^f0100173:	56                   	push   %esi$/;"	l
f0100174	obj/kern/kernel.asm	/^f0100174:	53                   	push   %ebx$/;"	l
f0100175	obj/kern/kernel.asm	/^f0100175:	e8 42 00 00 00       	call   f01001bc <__x86.get_pc_thunk.bx>$/;"	l
f010017a	obj/kern/kernel.asm	/^f010017a:	81 c3 8e 11 01 00    	add    $0x1118e,%ebx$/;"	l
f0100180	obj/kern/kernel.asm	/^f0100180:	8d 75 14             	lea    0x14(%ebp),%esi$/;"	l
f0100183	obj/kern/kernel.asm	/^f0100183:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100186	obj/kern/kernel.asm	/^f0100186:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0100189	obj/kern/kernel.asm	/^f0100189:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f010018c	obj/kern/kernel.asm	/^f010018c:	8d 83 62 07 ff ff    	lea    -0xf89e(%ebx),%eax$/;"	l
f0100192	obj/kern/kernel.asm	/^f0100192:	50                   	push   %eax$/;"	l
f0100193	obj/kern/kernel.asm	/^f0100193:	e8 b1 08 00 00       	call   f0100a49 <cprintf>$/;"	l
f0100198	obj/kern/kernel.asm	/^f0100198:	83 c4 08             	add    $0x8,%esp$/;"	l
f010019b	obj/kern/kernel.asm	/^f010019b:	56                   	push   %esi$/;"	l
f010019c	obj/kern/kernel.asm	/^f010019c:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f010019f	obj/kern/kernel.asm	/^f010019f:	e8 6e 08 00 00       	call   f0100a12 <vcprintf>$/;"	l
f01001a4	obj/kern/kernel.asm	/^f01001a4:	8d 83 86 07 ff ff    	lea    -0xf87a(%ebx),%eax$/;"	l
f01001aa	obj/kern/kernel.asm	/^f01001aa:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01001ad	obj/kern/kernel.asm	/^f01001ad:	e8 97 08 00 00       	call   f0100a49 <cprintf>$/;"	l
f01001b2	obj/kern/kernel.asm	/^f01001b2:	83 c4 10             	add    $0x10,%esp$/;"	l
f01001b5	obj/kern/kernel.asm	/^f01001b5:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f01001b8	obj/kern/kernel.asm	/^f01001b8:	5b                   	pop    %ebx$/;"	l
f01001b9	obj/kern/kernel.asm	/^f01001b9:	5e                   	pop    %esi$/;"	l
f01001ba	obj/kern/kernel.asm	/^f01001ba:	5d                   	pop    %ebp$/;"	l
f01001bb	obj/kern/kernel.asm	/^f01001bb:	c3                   	ret    $/;"	l
f01001bc	obj/kern/kernel.asm	/^f01001bc <__x86.get_pc_thunk.bx>:$/;"	l
f01001bc	obj/kern/kernel.asm	/^f01001bc:	8b 1c 24             	mov    (%esp),%ebx$/;"	l
f01001bf	obj/kern/kernel.asm	/^f01001bf:	c3                   	ret    $/;"	l
f01001c0	obj/kern/kernel.asm	/^f01001c0 <serial_proc_data>:$/;"	l
f01001c0	obj/kern/kernel.asm	/^f01001c0:	55                   	push   %ebp$/;"	l
f01001c1	obj/kern/kernel.asm	/^f01001c1:	89 e5                	mov    %esp,%ebp$/;"	l
f01001c3	obj/kern/kernel.asm	/^f01001c3:	ba fd 03 00 00       	mov    $0x3fd,%edx$/;"	l
f01001c8	obj/kern/kernel.asm	/^f01001c8:	ec                   	in     (%dx),%al$/;"	l
f01001c9	obj/kern/kernel.asm	/^f01001c9:	a8 01                	test   $0x1,%al$/;"	l
f01001cb	obj/kern/kernel.asm	/^f01001cb:	74 0b                	je     f01001d8 <serial_proc_data+0x18>$/;"	l
f01001cd	obj/kern/kernel.asm	/^f01001cd:	ba f8 03 00 00       	mov    $0x3f8,%edx$/;"	l
f01001d2	obj/kern/kernel.asm	/^f01001d2:	ec                   	in     (%dx),%al$/;"	l
f01001d3	obj/kern/kernel.asm	/^f01001d3:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01001d6	obj/kern/kernel.asm	/^f01001d6:	5d                   	pop    %ebp$/;"	l
f01001d7	obj/kern/kernel.asm	/^f01001d7:	c3                   	ret    $/;"	l
f01001d8	obj/kern/kernel.asm	/^f01001d8:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f01001dd	obj/kern/kernel.asm	/^f01001dd:	eb f7                	jmp    f01001d6 <serial_proc_data+0x16>$/;"	l
f01001df	obj/kern/kernel.asm	/^f01001df <cons_intr>:$/;"	l
f01001df	obj/kern/kernel.asm	/^f01001df:	55                   	push   %ebp$/;"	l
f01001e0	obj/kern/kernel.asm	/^f01001e0:	89 e5                	mov    %esp,%ebp$/;"	l
f01001e2	obj/kern/kernel.asm	/^f01001e2:	56                   	push   %esi$/;"	l
f01001e3	obj/kern/kernel.asm	/^f01001e3:	53                   	push   %ebx$/;"	l
f01001e4	obj/kern/kernel.asm	/^f01001e4:	e8 d3 ff ff ff       	call   f01001bc <__x86.get_pc_thunk.bx>$/;"	l
f01001e9	obj/kern/kernel.asm	/^f01001e9:	81 c3 1f 11 01 00    	add    $0x1111f,%ebx$/;"	l
f01001ef	obj/kern/kernel.asm	/^f01001ef:	89 c6                	mov    %eax,%esi$/;"	l
f01001f1	obj/kern/kernel.asm	/^f01001f1:	ff d6                	call   *%esi$/;"	l
f01001f3	obj/kern/kernel.asm	/^f01001f3:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f01001f6	obj/kern/kernel.asm	/^f01001f6:	74 2e                	je     f0100226 <cons_intr+0x47>$/;"	l
f01001f8	obj/kern/kernel.asm	/^f01001f8:	85 c0                	test   %eax,%eax$/;"	l
f01001fa	obj/kern/kernel.asm	/^f01001fa:	74 f5                	je     f01001f1 <cons_intr+0x12>$/;"	l
f01001fc	obj/kern/kernel.asm	/^f01001fc:	8b 8b 7c 1f 00 00    	mov    0x1f7c(%ebx),%ecx$/;"	l
f0100202	obj/kern/kernel.asm	/^f0100202:	8d 51 01             	lea    0x1(%ecx),%edx$/;"	l
f0100205	obj/kern/kernel.asm	/^f0100205:	89 93 7c 1f 00 00    	mov    %edx,0x1f7c(%ebx)$/;"	l
f010020b	obj/kern/kernel.asm	/^f010020b:	88 84 0b 78 1d 00 00 	mov    %al,0x1d78(%ebx,%ecx,1)$/;"	l
f0100212	obj/kern/kernel.asm	/^f0100212:	81 fa 00 02 00 00    	cmp    $0x200,%edx$/;"	l
f0100218	obj/kern/kernel.asm	/^f0100218:	75 d7                	jne    f01001f1 <cons_intr+0x12>$/;"	l
f010021a	obj/kern/kernel.asm	/^f010021a:	c7 83 7c 1f 00 00 00 	movl   $0x0,0x1f7c(%ebx)$/;"	l
f0100221	obj/kern/kernel.asm	/^f0100221:	00 00 00 $/;"	l
f0100224	obj/kern/kernel.asm	/^f0100224:	eb cb                	jmp    f01001f1 <cons_intr+0x12>$/;"	l
f0100226	obj/kern/kernel.asm	/^f0100226:	5b                   	pop    %ebx$/;"	l
f0100227	obj/kern/kernel.asm	/^f0100227:	5e                   	pop    %esi$/;"	l
f0100228	obj/kern/kernel.asm	/^f0100228:	5d                   	pop    %ebp$/;"	l
f0100229	obj/kern/kernel.asm	/^f0100229:	c3                   	ret    $/;"	l
f010022a	obj/kern/kernel.asm	/^f010022a <kbd_proc_data>:$/;"	l
f010022a	obj/kern/kernel.asm	/^f010022a:	55                   	push   %ebp$/;"	l
f010022b	obj/kern/kernel.asm	/^f010022b:	89 e5                	mov    %esp,%ebp$/;"	l
f010022d	obj/kern/kernel.asm	/^f010022d:	56                   	push   %esi$/;"	l
f010022e	obj/kern/kernel.asm	/^f010022e:	53                   	push   %ebx$/;"	l
f010022f	obj/kern/kernel.asm	/^f010022f:	e8 88 ff ff ff       	call   f01001bc <__x86.get_pc_thunk.bx>$/;"	l
f0100234	obj/kern/kernel.asm	/^f0100234:	81 c3 d4 10 01 00    	add    $0x110d4,%ebx$/;"	l
f010023a	obj/kern/kernel.asm	/^f010023a:	ba 64 00 00 00       	mov    $0x64,%edx$/;"	l
f010023f	obj/kern/kernel.asm	/^f010023f:	ec                   	in     (%dx),%al$/;"	l
f0100240	obj/kern/kernel.asm	/^f0100240:	a8 01                	test   $0x1,%al$/;"	l
f0100242	obj/kern/kernel.asm	/^f0100242:	0f 84 06 01 00 00    	je     f010034e <kbd_proc_data+0x124>$/;"	l
f0100248	obj/kern/kernel.asm	/^f0100248:	a8 20                	test   $0x20,%al$/;"	l
f010024a	obj/kern/kernel.asm	/^f010024a:	0f 85 05 01 00 00    	jne    f0100355 <kbd_proc_data+0x12b>$/;"	l
f0100250	obj/kern/kernel.asm	/^f0100250:	ba 60 00 00 00       	mov    $0x60,%edx$/;"	l
f0100255	obj/kern/kernel.asm	/^f0100255:	ec                   	in     (%dx),%al$/;"	l
f0100256	obj/kern/kernel.asm	/^f0100256:	89 c2                	mov    %eax,%edx$/;"	l
f0100258	obj/kern/kernel.asm	/^f0100258:	3c e0                	cmp    $0xe0,%al$/;"	l
f010025a	obj/kern/kernel.asm	/^f010025a:	0f 84 93 00 00 00    	je     f01002f3 <kbd_proc_data+0xc9>$/;"	l
f0100260	obj/kern/kernel.asm	/^f0100260:	84 c0                	test   %al,%al$/;"	l
f0100262	obj/kern/kernel.asm	/^f0100262:	0f 88 a0 00 00 00    	js     f0100308 <kbd_proc_data+0xde>$/;"	l
f0100268	obj/kern/kernel.asm	/^f0100268:	8b 8b 58 1d 00 00    	mov    0x1d58(%ebx),%ecx$/;"	l
f010026e	obj/kern/kernel.asm	/^f010026e:	f6 c1 40             	test   $0x40,%cl$/;"	l
f0100271	obj/kern/kernel.asm	/^f0100271:	74 0e                	je     f0100281 <kbd_proc_data+0x57>$/;"	l
f0100273	obj/kern/kernel.asm	/^f0100273:	83 c8 80             	or     $0xffffff80,%eax$/;"	l
f0100276	obj/kern/kernel.asm	/^f0100276:	89 c2                	mov    %eax,%edx$/;"	l
f0100278	obj/kern/kernel.asm	/^f0100278:	83 e1 bf             	and    $0xffffffbf,%ecx$/;"	l
f010027b	obj/kern/kernel.asm	/^f010027b:	89 8b 58 1d 00 00    	mov    %ecx,0x1d58(%ebx)$/;"	l
f0100281	obj/kern/kernel.asm	/^f0100281:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f0100284	obj/kern/kernel.asm	/^f0100284:	0f b6 84 13 b8 08 ff 	movzbl -0xf748(%ebx,%edx,1),%eax$/;"	l
f010028b	obj/kern/kernel.asm	/^f010028b:	ff $/;"	l
f010028c	obj/kern/kernel.asm	/^f010028c:	0b 83 58 1d 00 00    	or     0x1d58(%ebx),%eax$/;"	l
f0100292	obj/kern/kernel.asm	/^f0100292:	0f b6 8c 13 b8 07 ff 	movzbl -0xf848(%ebx,%edx,1),%ecx$/;"	l
f0100299	obj/kern/kernel.asm	/^f0100299:	ff $/;"	l
f010029a	obj/kern/kernel.asm	/^f010029a:	31 c8                	xor    %ecx,%eax$/;"	l
f010029c	obj/kern/kernel.asm	/^f010029c:	89 83 58 1d 00 00    	mov    %eax,0x1d58(%ebx)$/;"	l
f01002a2	obj/kern/kernel.asm	/^f01002a2:	89 c1                	mov    %eax,%ecx$/;"	l
f01002a4	obj/kern/kernel.asm	/^f01002a4:	83 e1 03             	and    $0x3,%ecx$/;"	l
f01002a7	obj/kern/kernel.asm	/^f01002a7:	8b 8c 8b f8 1c 00 00 	mov    0x1cf8(%ebx,%ecx,4),%ecx$/;"	l
f01002ae	obj/kern/kernel.asm	/^f01002ae:	0f b6 14 11          	movzbl (%ecx,%edx,1),%edx$/;"	l
f01002b2	obj/kern/kernel.asm	/^f01002b2:	0f b6 f2             	movzbl %dl,%esi$/;"	l
f01002b5	obj/kern/kernel.asm	/^f01002b5:	a8 08                	test   $0x8,%al$/;"	l
f01002b7	obj/kern/kernel.asm	/^f01002b7:	74 0d                	je     f01002c6 <kbd_proc_data+0x9c>$/;"	l
f01002b9	obj/kern/kernel.asm	/^f01002b9:	89 f2                	mov    %esi,%edx$/;"	l
f01002bb	obj/kern/kernel.asm	/^f01002bb:	8d 4e 9f             	lea    -0x61(%esi),%ecx$/;"	l
f01002be	obj/kern/kernel.asm	/^f01002be:	83 f9 19             	cmp    $0x19,%ecx$/;"	l
f01002c1	obj/kern/kernel.asm	/^f01002c1:	77 7a                	ja     f010033d <kbd_proc_data+0x113>$/;"	l
f01002c3	obj/kern/kernel.asm	/^f01002c3:	83 ee 20             	sub    $0x20,%esi$/;"	l
f01002c6	obj/kern/kernel.asm	/^f01002c6:	f7 d0                	not    %eax$/;"	l
f01002c8	obj/kern/kernel.asm	/^f01002c8:	a8 06                	test   $0x6,%al$/;"	l
f01002ca	obj/kern/kernel.asm	/^f01002ca:	75 33                	jne    f01002ff <kbd_proc_data+0xd5>$/;"	l
f01002cc	obj/kern/kernel.asm	/^f01002cc:	81 fe e9 00 00 00    	cmp    $0xe9,%esi$/;"	l
f01002d2	obj/kern/kernel.asm	/^f01002d2:	75 2b                	jne    f01002ff <kbd_proc_data+0xd5>$/;"	l
f01002d4	obj/kern/kernel.asm	/^f01002d4:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01002d7	obj/kern/kernel.asm	/^f01002d7:	8d 83 7c 07 ff ff    	lea    -0xf884(%ebx),%eax$/;"	l
f01002dd	obj/kern/kernel.asm	/^f01002dd:	50                   	push   %eax$/;"	l
f01002de	obj/kern/kernel.asm	/^f01002de:	e8 66 07 00 00       	call   f0100a49 <cprintf>$/;"	l
f01002e3	obj/kern/kernel.asm	/^f01002e3:	b8 03 00 00 00       	mov    $0x3,%eax$/;"	l
f01002e8	obj/kern/kernel.asm	/^f01002e8:	ba 92 00 00 00       	mov    $0x92,%edx$/;"	l
f01002ed	obj/kern/kernel.asm	/^f01002ed:	ee                   	out    %al,(%dx)$/;"	l
f01002ee	obj/kern/kernel.asm	/^f01002ee:	83 c4 10             	add    $0x10,%esp$/;"	l
f01002f1	obj/kern/kernel.asm	/^f01002f1:	eb 0c                	jmp    f01002ff <kbd_proc_data+0xd5>$/;"	l
f01002f3	obj/kern/kernel.asm	/^f01002f3:	83 8b 58 1d 00 00 40 	orl    $0x40,0x1d58(%ebx)$/;"	l
f01002fa	obj/kern/kernel.asm	/^f01002fa:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f01002ff	obj/kern/kernel.asm	/^f01002ff:	89 f0                	mov    %esi,%eax$/;"	l
f0100301	obj/kern/kernel.asm	/^f0100301:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f0100304	obj/kern/kernel.asm	/^f0100304:	5b                   	pop    %ebx$/;"	l
f0100305	obj/kern/kernel.asm	/^f0100305:	5e                   	pop    %esi$/;"	l
f0100306	obj/kern/kernel.asm	/^f0100306:	5d                   	pop    %ebp$/;"	l
f0100307	obj/kern/kernel.asm	/^f0100307:	c3                   	ret    $/;"	l
f0100308	obj/kern/kernel.asm	/^f0100308:	8b 8b 58 1d 00 00    	mov    0x1d58(%ebx),%ecx$/;"	l
f010030e	obj/kern/kernel.asm	/^f010030e:	89 ce                	mov    %ecx,%esi$/;"	l
f0100310	obj/kern/kernel.asm	/^f0100310:	83 e6 40             	and    $0x40,%esi$/;"	l
f0100313	obj/kern/kernel.asm	/^f0100313:	83 e0 7f             	and    $0x7f,%eax$/;"	l
f0100316	obj/kern/kernel.asm	/^f0100316:	85 f6                	test   %esi,%esi$/;"	l
f0100318	obj/kern/kernel.asm	/^f0100318:	0f 44 d0             	cmove  %eax,%edx$/;"	l
f010031b	obj/kern/kernel.asm	/^f010031b:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f010031e	obj/kern/kernel.asm	/^f010031e:	0f b6 84 13 b8 08 ff 	movzbl -0xf748(%ebx,%edx,1),%eax$/;"	l
f0100325	obj/kern/kernel.asm	/^f0100325:	ff $/;"	l
f0100326	obj/kern/kernel.asm	/^f0100326:	83 c8 40             	or     $0x40,%eax$/;"	l
f0100329	obj/kern/kernel.asm	/^f0100329:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010032c	obj/kern/kernel.asm	/^f010032c:	f7 d0                	not    %eax$/;"	l
f010032e	obj/kern/kernel.asm	/^f010032e:	21 c8                	and    %ecx,%eax$/;"	l
f0100330	obj/kern/kernel.asm	/^f0100330:	89 83 58 1d 00 00    	mov    %eax,0x1d58(%ebx)$/;"	l
f0100336	obj/kern/kernel.asm	/^f0100336:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f010033b	obj/kern/kernel.asm	/^f010033b:	eb c2                	jmp    f01002ff <kbd_proc_data+0xd5>$/;"	l
f010033d	obj/kern/kernel.asm	/^f010033d:	83 ea 41             	sub    $0x41,%edx$/;"	l
f0100340	obj/kern/kernel.asm	/^f0100340:	8d 4e 20             	lea    0x20(%esi),%ecx$/;"	l
f0100343	obj/kern/kernel.asm	/^f0100343:	83 fa 1a             	cmp    $0x1a,%edx$/;"	l
f0100346	obj/kern/kernel.asm	/^f0100346:	0f 42 f1             	cmovb  %ecx,%esi$/;"	l
f0100349	obj/kern/kernel.asm	/^f0100349:	e9 78 ff ff ff       	jmp    f01002c6 <kbd_proc_data+0x9c>$/;"	l
f010034e	obj/kern/kernel.asm	/^f010034e:	be ff ff ff ff       	mov    $0xffffffff,%esi$/;"	l
f0100353	obj/kern/kernel.asm	/^f0100353:	eb aa                	jmp    f01002ff <kbd_proc_data+0xd5>$/;"	l
f0100355	obj/kern/kernel.asm	/^f0100355:	be ff ff ff ff       	mov    $0xffffffff,%esi$/;"	l
f010035a	obj/kern/kernel.asm	/^f010035a:	eb a3                	jmp    f01002ff <kbd_proc_data+0xd5>$/;"	l
f010035c	obj/kern/kernel.asm	/^f010035c <cons_putc>:$/;"	l
f010035c	obj/kern/kernel.asm	/^f010035c:	55                   	push   %ebp$/;"	l
f010035d	obj/kern/kernel.asm	/^f010035d:	89 e5                	mov    %esp,%ebp$/;"	l
f010035f	obj/kern/kernel.asm	/^f010035f:	57                   	push   %edi$/;"	l
f0100360	obj/kern/kernel.asm	/^f0100360:	56                   	push   %esi$/;"	l
f0100361	obj/kern/kernel.asm	/^f0100361:	53                   	push   %ebx$/;"	l
f0100362	obj/kern/kernel.asm	/^f0100362:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0100365	obj/kern/kernel.asm	/^f0100365:	e8 52 fe ff ff       	call   f01001bc <__x86.get_pc_thunk.bx>$/;"	l
f010036a	obj/kern/kernel.asm	/^f010036a:	81 c3 9e 0f 01 00    	add    $0x10f9e,%ebx$/;"	l
f0100370	obj/kern/kernel.asm	/^f0100370:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0100373	obj/kern/kernel.asm	/^f0100373:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0100378	obj/kern/kernel.asm	/^f0100378:	bf fd 03 00 00       	mov    $0x3fd,%edi$/;"	l
f010037d	obj/kern/kernel.asm	/^f010037d:	b9 84 00 00 00       	mov    $0x84,%ecx$/;"	l
f0100382	obj/kern/kernel.asm	/^f0100382:	eb 09                	jmp    f010038d <cons_putc+0x31>$/;"	l
f0100384	obj/kern/kernel.asm	/^f0100384:	89 ca                	mov    %ecx,%edx$/;"	l
f0100386	obj/kern/kernel.asm	/^f0100386:	ec                   	in     (%dx),%al$/;"	l
f0100387	obj/kern/kernel.asm	/^f0100387:	ec                   	in     (%dx),%al$/;"	l
f0100388	obj/kern/kernel.asm	/^f0100388:	ec                   	in     (%dx),%al$/;"	l
f0100389	obj/kern/kernel.asm	/^f0100389:	ec                   	in     (%dx),%al$/;"	l
f010038a	obj/kern/kernel.asm	/^f010038a:	83 c6 01             	add    $0x1,%esi$/;"	l
f010038d	obj/kern/kernel.asm	/^f010038d:	89 fa                	mov    %edi,%edx$/;"	l
f010038f	obj/kern/kernel.asm	/^f010038f:	ec                   	in     (%dx),%al$/;"	l
f0100390	obj/kern/kernel.asm	/^f0100390:	a8 20                	test   $0x20,%al$/;"	l
f0100392	obj/kern/kernel.asm	/^f0100392:	75 08                	jne    f010039c <cons_putc+0x40>$/;"	l
f0100394	obj/kern/kernel.asm	/^f0100394:	81 fe ff 31 00 00    	cmp    $0x31ff,%esi$/;"	l
f010039a	obj/kern/kernel.asm	/^f010039a:	7e e8                	jle    f0100384 <cons_putc+0x28>$/;"	l
f010039c	obj/kern/kernel.asm	/^f010039c:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f010039f	obj/kern/kernel.asm	/^f010039f:	89 f8                	mov    %edi,%eax$/;"	l
f01003a1	obj/kern/kernel.asm	/^f01003a1:	88 45 e3             	mov    %al,-0x1d(%ebp)$/;"	l
f01003a4	obj/kern/kernel.asm	/^f01003a4:	ba f8 03 00 00       	mov    $0x3f8,%edx$/;"	l
f01003a9	obj/kern/kernel.asm	/^f01003a9:	ee                   	out    %al,(%dx)$/;"	l
f01003aa	obj/kern/kernel.asm	/^f01003aa:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f01003af	obj/kern/kernel.asm	/^f01003af:	bf 79 03 00 00       	mov    $0x379,%edi$/;"	l
f01003b4	obj/kern/kernel.asm	/^f01003b4:	b9 84 00 00 00       	mov    $0x84,%ecx$/;"	l
f01003b9	obj/kern/kernel.asm	/^f01003b9:	eb 09                	jmp    f01003c4 <cons_putc+0x68>$/;"	l
f01003bb	obj/kern/kernel.asm	/^f01003bb:	89 ca                	mov    %ecx,%edx$/;"	l
f01003bd	obj/kern/kernel.asm	/^f01003bd:	ec                   	in     (%dx),%al$/;"	l
f01003be	obj/kern/kernel.asm	/^f01003be:	ec                   	in     (%dx),%al$/;"	l
f01003bf	obj/kern/kernel.asm	/^f01003bf:	ec                   	in     (%dx),%al$/;"	l
f01003c0	obj/kern/kernel.asm	/^f01003c0:	ec                   	in     (%dx),%al$/;"	l
f01003c1	obj/kern/kernel.asm	/^f01003c1:	83 c6 01             	add    $0x1,%esi$/;"	l
f01003c4	obj/kern/kernel.asm	/^f01003c4:	89 fa                	mov    %edi,%edx$/;"	l
f01003c6	obj/kern/kernel.asm	/^f01003c6:	ec                   	in     (%dx),%al$/;"	l
f01003c7	obj/kern/kernel.asm	/^f01003c7:	81 fe ff 31 00 00    	cmp    $0x31ff,%esi$/;"	l
f01003cd	obj/kern/kernel.asm	/^f01003cd:	7f 04                	jg     f01003d3 <cons_putc+0x77>$/;"	l
f01003cf	obj/kern/kernel.asm	/^f01003cf:	84 c0                	test   %al,%al$/;"	l
f01003d1	obj/kern/kernel.asm	/^f01003d1:	79 e8                	jns    f01003bb <cons_putc+0x5f>$/;"	l
f01003d3	obj/kern/kernel.asm	/^f01003d3:	ba 78 03 00 00       	mov    $0x378,%edx$/;"	l
f01003d8	obj/kern/kernel.asm	/^f01003d8:	0f b6 45 e3          	movzbl -0x1d(%ebp),%eax$/;"	l
f01003dc	obj/kern/kernel.asm	/^f01003dc:	ee                   	out    %al,(%dx)$/;"	l
f01003dd	obj/kern/kernel.asm	/^f01003dd:	ba 7a 03 00 00       	mov    $0x37a,%edx$/;"	l
f01003e2	obj/kern/kernel.asm	/^f01003e2:	b8 0d 00 00 00       	mov    $0xd,%eax$/;"	l
f01003e7	obj/kern/kernel.asm	/^f01003e7:	ee                   	out    %al,(%dx)$/;"	l
f01003e8	obj/kern/kernel.asm	/^f01003e8:	b8 08 00 00 00       	mov    $0x8,%eax$/;"	l
f01003ed	obj/kern/kernel.asm	/^f01003ed:	ee                   	out    %al,(%dx)$/;"	l
f01003ee	obj/kern/kernel.asm	/^f01003ee:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f01003f1	obj/kern/kernel.asm	/^f01003f1:	89 fa                	mov    %edi,%edx$/;"	l
f01003f3	obj/kern/kernel.asm	/^f01003f3:	81 e2 00 ff ff ff    	and    $0xffffff00,%edx$/;"	l
f01003f9	obj/kern/kernel.asm	/^f01003f9:	89 f8                	mov    %edi,%eax$/;"	l
f01003fb	obj/kern/kernel.asm	/^f01003fb:	80 cc 07             	or     $0x7,%ah$/;"	l
f01003fe	obj/kern/kernel.asm	/^f01003fe:	85 d2                	test   %edx,%edx$/;"	l
f0100400	obj/kern/kernel.asm	/^f0100400:	0f 45 c7             	cmovne %edi,%eax$/;"	l
f0100403	obj/kern/kernel.asm	/^f0100403:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0100406	obj/kern/kernel.asm	/^f0100406:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0100409	obj/kern/kernel.asm	/^f0100409:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f010040c	obj/kern/kernel.asm	/^f010040c:	0f 84 b9 00 00 00    	je     f01004cb <cons_putc+0x16f>$/;"	l
f0100412	obj/kern/kernel.asm	/^f0100412:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f0100415	obj/kern/kernel.asm	/^f0100415:	7e 74                	jle    f010048b <cons_putc+0x12f>$/;"	l
f0100417	obj/kern/kernel.asm	/^f0100417:	83 f8 0a             	cmp    $0xa,%eax$/;"	l
f010041a	obj/kern/kernel.asm	/^f010041a:	0f 84 9e 00 00 00    	je     f01004be <cons_putc+0x162>$/;"	l
f0100420	obj/kern/kernel.asm	/^f0100420:	83 f8 0d             	cmp    $0xd,%eax$/;"	l
f0100423	obj/kern/kernel.asm	/^f0100423:	0f 85 d9 00 00 00    	jne    f0100502 <cons_putc+0x1a6>$/;"	l
f0100429	obj/kern/kernel.asm	/^f0100429:	0f b7 83 80 1f 00 00 	movzwl 0x1f80(%ebx),%eax$/;"	l
f0100430	obj/kern/kernel.asm	/^f0100430:	69 c0 cd cc 00 00    	imul   $0xcccd,%eax,%eax$/;"	l
f0100436	obj/kern/kernel.asm	/^f0100436:	c1 e8 16             	shr    $0x16,%eax$/;"	l
f0100439	obj/kern/kernel.asm	/^f0100439:	8d 04 80             	lea    (%eax,%eax,4),%eax$/;"	l
f010043c	obj/kern/kernel.asm	/^f010043c:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f010043f	obj/kern/kernel.asm	/^f010043f:	66 89 83 80 1f 00 00 	mov    %ax,0x1f80(%ebx)$/;"	l
f0100446	obj/kern/kernel.asm	/^f0100446:	66 81 bb 80 1f 00 00 	cmpw   $0x7cf,0x1f80(%ebx)$/;"	l
f010044d	obj/kern/kernel.asm	/^f010044d:	cf 07 $/;"	l
f010044f	obj/kern/kernel.asm	/^f010044f:	0f 87 d4 00 00 00    	ja     f0100529 <cons_putc+0x1cd>$/;"	l
f0100455	obj/kern/kernel.asm	/^f0100455:	8b 8b 88 1f 00 00    	mov    0x1f88(%ebx),%ecx$/;"	l
f010045b	obj/kern/kernel.asm	/^f010045b:	b8 0e 00 00 00       	mov    $0xe,%eax$/;"	l
f0100460	obj/kern/kernel.asm	/^f0100460:	89 ca                	mov    %ecx,%edx$/;"	l
f0100462	obj/kern/kernel.asm	/^f0100462:	ee                   	out    %al,(%dx)$/;"	l
f0100463	obj/kern/kernel.asm	/^f0100463:	0f b7 9b 80 1f 00 00 	movzwl 0x1f80(%ebx),%ebx$/;"	l
f010046a	obj/kern/kernel.asm	/^f010046a:	8d 71 01             	lea    0x1(%ecx),%esi$/;"	l
f010046d	obj/kern/kernel.asm	/^f010046d:	89 d8                	mov    %ebx,%eax$/;"	l
f010046f	obj/kern/kernel.asm	/^f010046f:	66 c1 e8 08          	shr    $0x8,%ax$/;"	l
f0100473	obj/kern/kernel.asm	/^f0100473:	89 f2                	mov    %esi,%edx$/;"	l
f0100475	obj/kern/kernel.asm	/^f0100475:	ee                   	out    %al,(%dx)$/;"	l
f0100476	obj/kern/kernel.asm	/^f0100476:	b8 0f 00 00 00       	mov    $0xf,%eax$/;"	l
f010047b	obj/kern/kernel.asm	/^f010047b:	89 ca                	mov    %ecx,%edx$/;"	l
f010047d	obj/kern/kernel.asm	/^f010047d:	ee                   	out    %al,(%dx)$/;"	l
f010047e	obj/kern/kernel.asm	/^f010047e:	89 d8                	mov    %ebx,%eax$/;"	l
f0100480	obj/kern/kernel.asm	/^f0100480:	89 f2                	mov    %esi,%edx$/;"	l
f0100482	obj/kern/kernel.asm	/^f0100482:	ee                   	out    %al,(%dx)$/;"	l
f0100483	obj/kern/kernel.asm	/^f0100483:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0100486	obj/kern/kernel.asm	/^f0100486:	5b                   	pop    %ebx$/;"	l
f0100487	obj/kern/kernel.asm	/^f0100487:	5e                   	pop    %esi$/;"	l
f0100488	obj/kern/kernel.asm	/^f0100488:	5f                   	pop    %edi$/;"	l
f0100489	obj/kern/kernel.asm	/^f0100489:	5d                   	pop    %ebp$/;"	l
f010048a	obj/kern/kernel.asm	/^f010048a:	c3                   	ret    $/;"	l
f010048b	obj/kern/kernel.asm	/^f010048b:	83 f8 08             	cmp    $0x8,%eax$/;"	l
f010048e	obj/kern/kernel.asm	/^f010048e:	75 72                	jne    f0100502 <cons_putc+0x1a6>$/;"	l
f0100490	obj/kern/kernel.asm	/^f0100490:	0f b7 83 80 1f 00 00 	movzwl 0x1f80(%ebx),%eax$/;"	l
f0100497	obj/kern/kernel.asm	/^f0100497:	66 85 c0             	test   %ax,%ax$/;"	l
f010049a	obj/kern/kernel.asm	/^f010049a:	74 b9                	je     f0100455 <cons_putc+0xf9>$/;"	l
f010049c	obj/kern/kernel.asm	/^f010049c:	83 e8 01             	sub    $0x1,%eax$/;"	l
f010049f	obj/kern/kernel.asm	/^f010049f:	66 89 83 80 1f 00 00 	mov    %ax,0x1f80(%ebx)$/;"	l
f01004a6	obj/kern/kernel.asm	/^f01004a6:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f01004a9	obj/kern/kernel.asm	/^f01004a9:	0f b7 55 e4          	movzwl -0x1c(%ebp),%edx$/;"	l
f01004ad	obj/kern/kernel.asm	/^f01004ad:	b2 00                	mov    $0x0,%dl$/;"	l
f01004af	obj/kern/kernel.asm	/^f01004af:	83 ca 20             	or     $0x20,%edx$/;"	l
f01004b2	obj/kern/kernel.asm	/^f01004b2:	8b 8b 84 1f 00 00    	mov    0x1f84(%ebx),%ecx$/;"	l
f01004b8	obj/kern/kernel.asm	/^f01004b8:	66 89 14 41          	mov    %dx,(%ecx,%eax,2)$/;"	l
f01004bc	obj/kern/kernel.asm	/^f01004bc:	eb 88                	jmp    f0100446 <cons_putc+0xea>$/;"	l
f01004be	obj/kern/kernel.asm	/^f01004be:	66 83 83 80 1f 00 00 	addw   $0x50,0x1f80(%ebx)$/;"	l
f01004c5	obj/kern/kernel.asm	/^f01004c5:	50 $/;"	l
f01004c6	obj/kern/kernel.asm	/^f01004c6:	e9 5e ff ff ff       	jmp    f0100429 <cons_putc+0xcd>$/;"	l
f01004cb	obj/kern/kernel.asm	/^f01004cb:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f01004d0	obj/kern/kernel.asm	/^f01004d0:	e8 87 fe ff ff       	call   f010035c <cons_putc>$/;"	l
f01004d5	obj/kern/kernel.asm	/^f01004d5:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f01004da	obj/kern/kernel.asm	/^f01004da:	e8 7d fe ff ff       	call   f010035c <cons_putc>$/;"	l
f01004df	obj/kern/kernel.asm	/^f01004df:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f01004e4	obj/kern/kernel.asm	/^f01004e4:	e8 73 fe ff ff       	call   f010035c <cons_putc>$/;"	l
f01004e9	obj/kern/kernel.asm	/^f01004e9:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f01004ee	obj/kern/kernel.asm	/^f01004ee:	e8 69 fe ff ff       	call   f010035c <cons_putc>$/;"	l
f01004f3	obj/kern/kernel.asm	/^f01004f3:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f01004f8	obj/kern/kernel.asm	/^f01004f8:	e8 5f fe ff ff       	call   f010035c <cons_putc>$/;"	l
f01004fd	obj/kern/kernel.asm	/^f01004fd:	e9 44 ff ff ff       	jmp    f0100446 <cons_putc+0xea>$/;"	l
f0100502	obj/kern/kernel.asm	/^f0100502:	0f b7 83 80 1f 00 00 	movzwl 0x1f80(%ebx),%eax$/;"	l
f0100509	obj/kern/kernel.asm	/^f0100509:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
f010050c	obj/kern/kernel.asm	/^f010050c:	66 89 93 80 1f 00 00 	mov    %dx,0x1f80(%ebx)$/;"	l
f0100513	obj/kern/kernel.asm	/^f0100513:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f0100516	obj/kern/kernel.asm	/^f0100516:	8b 93 84 1f 00 00    	mov    0x1f84(%ebx),%edx$/;"	l
f010051c	obj/kern/kernel.asm	/^f010051c:	0f b7 7d e4          	movzwl -0x1c(%ebp),%edi$/;"	l
f0100520	obj/kern/kernel.asm	/^f0100520:	66 89 3c 42          	mov    %di,(%edx,%eax,2)$/;"	l
f0100524	obj/kern/kernel.asm	/^f0100524:	e9 1d ff ff ff       	jmp    f0100446 <cons_putc+0xea>$/;"	l
f0100529	obj/kern/kernel.asm	/^f0100529:	8b 83 84 1f 00 00    	mov    0x1f84(%ebx),%eax$/;"	l
f010052f	obj/kern/kernel.asm	/^f010052f:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100532	obj/kern/kernel.asm	/^f0100532:	68 00 0f 00 00       	push   $0xf00$/;"	l
f0100537	obj/kern/kernel.asm	/^f0100537:	8d 90 a0 00 00 00    	lea    0xa0(%eax),%edx$/;"	l
f010053d	obj/kern/kernel.asm	/^f010053d:	52                   	push   %edx$/;"	l
f010053e	obj/kern/kernel.asm	/^f010053e:	50                   	push   %eax$/;"	l
f010053f	obj/kern/kernel.asm	/^f010053f:	e8 b2 10 00 00       	call   f01015f6 <memmove>$/;"	l
f0100544	obj/kern/kernel.asm	/^f0100544:	8b 93 84 1f 00 00    	mov    0x1f84(%ebx),%edx$/;"	l
f010054a	obj/kern/kernel.asm	/^f010054a:	8d 82 00 0f 00 00    	lea    0xf00(%edx),%eax$/;"	l
f0100550	obj/kern/kernel.asm	/^f0100550:	81 c2 a0 0f 00 00    	add    $0xfa0,%edx$/;"	l
f0100556	obj/kern/kernel.asm	/^f0100556:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100559	obj/kern/kernel.asm	/^f0100559:	66 c7 00 20 07       	movw   $0x720,(%eax)$/;"	l
f010055e	obj/kern/kernel.asm	/^f010055e:	83 c0 02             	add    $0x2,%eax$/;"	l
f0100561	obj/kern/kernel.asm	/^f0100561:	39 d0                	cmp    %edx,%eax$/;"	l
f0100563	obj/kern/kernel.asm	/^f0100563:	75 f4                	jne    f0100559 <cons_putc+0x1fd>$/;"	l
f0100565	obj/kern/kernel.asm	/^f0100565:	66 83 ab 80 1f 00 00 	subw   $0x50,0x1f80(%ebx)$/;"	l
f010056c	obj/kern/kernel.asm	/^f010056c:	50 $/;"	l
f010056d	obj/kern/kernel.asm	/^f010056d:	e9 e3 fe ff ff       	jmp    f0100455 <cons_putc+0xf9>$/;"	l
f0100572	obj/kern/kernel.asm	/^f0100572 <serial_intr>:$/;"	l
f0100572	obj/kern/kernel.asm	/^f0100572:	e8 e7 01 00 00       	call   f010075e <__x86.get_pc_thunk.ax>$/;"	l
f0100577	obj/kern/kernel.asm	/^f0100577:	05 91 0d 01 00       	add    $0x10d91,%eax$/;"	l
f010057c	obj/kern/kernel.asm	/^f010057c:	80 b8 8c 1f 00 00 00 	cmpb   $0x0,0x1f8c(%eax)$/;"	l
f0100583	obj/kern/kernel.asm	/^f0100583:	75 02                	jne    f0100587 <serial_intr+0x15>$/;"	l
f0100585	obj/kern/kernel.asm	/^f0100585:	f3 c3                	repz ret $/;"	l
f0100587	obj/kern/kernel.asm	/^f0100587:	55                   	push   %ebp$/;"	l
f0100588	obj/kern/kernel.asm	/^f0100588:	89 e5                	mov    %esp,%ebp$/;"	l
f010058a	obj/kern/kernel.asm	/^f010058a:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010058d	obj/kern/kernel.asm	/^f010058d:	8d 80 b8 ee fe ff    	lea    -0x11148(%eax),%eax$/;"	l
f0100593	obj/kern/kernel.asm	/^f0100593:	e8 47 fc ff ff       	call   f01001df <cons_intr>$/;"	l
f0100598	obj/kern/kernel.asm	/^f0100598:	c9                   	leave  $/;"	l
f0100599	obj/kern/kernel.asm	/^f0100599:	c3                   	ret    $/;"	l
f010059a	obj/kern/kernel.asm	/^f010059a <kbd_intr>:$/;"	l
f010059a	obj/kern/kernel.asm	/^f010059a:	55                   	push   %ebp$/;"	l
f010059b	obj/kern/kernel.asm	/^f010059b:	89 e5                	mov    %esp,%ebp$/;"	l
f010059d	obj/kern/kernel.asm	/^f010059d:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01005a0	obj/kern/kernel.asm	/^f01005a0:	e8 b9 01 00 00       	call   f010075e <__x86.get_pc_thunk.ax>$/;"	l
f01005a5	obj/kern/kernel.asm	/^f01005a5:	05 63 0d 01 00       	add    $0x10d63,%eax$/;"	l
f01005aa	obj/kern/kernel.asm	/^f01005aa:	8d 80 22 ef fe ff    	lea    -0x110de(%eax),%eax$/;"	l
f01005b0	obj/kern/kernel.asm	/^f01005b0:	e8 2a fc ff ff       	call   f01001df <cons_intr>$/;"	l
f01005b5	obj/kern/kernel.asm	/^f01005b5:	c9                   	leave  $/;"	l
f01005b6	obj/kern/kernel.asm	/^f01005b6:	c3                   	ret    $/;"	l
f01005b7	obj/kern/kernel.asm	/^f01005b7 <cons_getc>:$/;"	l
f01005b7	obj/kern/kernel.asm	/^f01005b7:	55                   	push   %ebp$/;"	l
f01005b8	obj/kern/kernel.asm	/^f01005b8:	89 e5                	mov    %esp,%ebp$/;"	l
f01005ba	obj/kern/kernel.asm	/^f01005ba:	53                   	push   %ebx$/;"	l
f01005bb	obj/kern/kernel.asm	/^f01005bb:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01005be	obj/kern/kernel.asm	/^f01005be:	e8 f9 fb ff ff       	call   f01001bc <__x86.get_pc_thunk.bx>$/;"	l
f01005c3	obj/kern/kernel.asm	/^f01005c3:	81 c3 45 0d 01 00    	add    $0x10d45,%ebx$/;"	l
f01005c9	obj/kern/kernel.asm	/^f01005c9:	e8 a4 ff ff ff       	call   f0100572 <serial_intr>$/;"	l
f01005ce	obj/kern/kernel.asm	/^f01005ce:	e8 c7 ff ff ff       	call   f010059a <kbd_intr>$/;"	l
f01005d3	obj/kern/kernel.asm	/^f01005d3:	8b 93 78 1f 00 00    	mov    0x1f78(%ebx),%edx$/;"	l
f01005d9	obj/kern/kernel.asm	/^f01005d9:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01005de	obj/kern/kernel.asm	/^f01005de:	3b 93 7c 1f 00 00    	cmp    0x1f7c(%ebx),%edx$/;"	l
f01005e4	obj/kern/kernel.asm	/^f01005e4:	74 19                	je     f01005ff <cons_getc+0x48>$/;"	l
f01005e6	obj/kern/kernel.asm	/^f01005e6:	8d 4a 01             	lea    0x1(%edx),%ecx$/;"	l
f01005e9	obj/kern/kernel.asm	/^f01005e9:	89 8b 78 1f 00 00    	mov    %ecx,0x1f78(%ebx)$/;"	l
f01005ef	obj/kern/kernel.asm	/^f01005ef:	0f b6 84 13 78 1d 00 	movzbl 0x1d78(%ebx,%edx,1),%eax$/;"	l
f01005f6	obj/kern/kernel.asm	/^f01005f6:	00 $/;"	l
f01005f7	obj/kern/kernel.asm	/^f01005f7:	81 f9 00 02 00 00    	cmp    $0x200,%ecx$/;"	l
f01005fd	obj/kern/kernel.asm	/^f01005fd:	74 06                	je     f0100605 <cons_getc+0x4e>$/;"	l
f01005ff	obj/kern/kernel.asm	/^f01005ff:	83 c4 04             	add    $0x4,%esp$/;"	l
f0100602	obj/kern/kernel.asm	/^f0100602:	5b                   	pop    %ebx$/;"	l
f0100603	obj/kern/kernel.asm	/^f0100603:	5d                   	pop    %ebp$/;"	l
f0100604	obj/kern/kernel.asm	/^f0100604:	c3                   	ret    $/;"	l
f0100605	obj/kern/kernel.asm	/^f0100605:	c7 83 78 1f 00 00 00 	movl   $0x0,0x1f78(%ebx)$/;"	l
f010060c	obj/kern/kernel.asm	/^f010060c:	00 00 00 $/;"	l
f010060f	obj/kern/kernel.asm	/^f010060f:	eb ee                	jmp    f01005ff <cons_getc+0x48>$/;"	l
f0100611	obj/kern/kernel.asm	/^f0100611 <cons_init>:$/;"	l
f0100611	obj/kern/kernel.asm	/^f0100611:	55                   	push   %ebp$/;"	l
f0100612	obj/kern/kernel.asm	/^f0100612:	89 e5                	mov    %esp,%ebp$/;"	l
f0100614	obj/kern/kernel.asm	/^f0100614:	57                   	push   %edi$/;"	l
f0100615	obj/kern/kernel.asm	/^f0100615:	56                   	push   %esi$/;"	l
f0100616	obj/kern/kernel.asm	/^f0100616:	53                   	push   %ebx$/;"	l
f0100617	obj/kern/kernel.asm	/^f0100617:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f010061a	obj/kern/kernel.asm	/^f010061a:	e8 9d fb ff ff       	call   f01001bc <__x86.get_pc_thunk.bx>$/;"	l
f010061f	obj/kern/kernel.asm	/^f010061f:	81 c3 e9 0c 01 00    	add    $0x10ce9,%ebx$/;"	l
f0100625	obj/kern/kernel.asm	/^f0100625:	0f b7 15 00 80 0b f0 	movzwl 0xf00b8000,%edx$/;"	l
f010062c	obj/kern/kernel.asm	/^f010062c:	66 c7 05 00 80 0b f0 	movw   $0xa55a,0xf00b8000$/;"	l
f0100633	obj/kern/kernel.asm	/^f0100633:	5a a5 $/;"	l
f0100635	obj/kern/kernel.asm	/^f0100635:	0f b7 05 00 80 0b f0 	movzwl 0xf00b8000,%eax$/;"	l
f010063c	obj/kern/kernel.asm	/^f010063c:	66 3d 5a a5          	cmp    $0xa55a,%ax$/;"	l
f0100640	obj/kern/kernel.asm	/^f0100640:	0f 84 bc 00 00 00    	je     f0100702 <cons_init+0xf1>$/;"	l
f0100646	obj/kern/kernel.asm	/^f0100646:	c7 83 88 1f 00 00 b4 	movl   $0x3b4,0x1f88(%ebx)$/;"	l
f010064d	obj/kern/kernel.asm	/^f010064d:	03 00 00 $/;"	l
f0100650	obj/kern/kernel.asm	/^f0100650:	c7 45 e4 00 00 0b f0 	movl   $0xf00b0000,-0x1c(%ebp)$/;"	l
f0100657	obj/kern/kernel.asm	/^f0100657:	8b bb 88 1f 00 00    	mov    0x1f88(%ebx),%edi$/;"	l
f010065d	obj/kern/kernel.asm	/^f010065d:	b8 0e 00 00 00       	mov    $0xe,%eax$/;"	l
f0100662	obj/kern/kernel.asm	/^f0100662:	89 fa                	mov    %edi,%edx$/;"	l
f0100664	obj/kern/kernel.asm	/^f0100664:	ee                   	out    %al,(%dx)$/;"	l
f0100665	obj/kern/kernel.asm	/^f0100665:	8d 4f 01             	lea    0x1(%edi),%ecx$/;"	l
f0100668	obj/kern/kernel.asm	/^f0100668:	89 ca                	mov    %ecx,%edx$/;"	l
f010066a	obj/kern/kernel.asm	/^f010066a:	ec                   	in     (%dx),%al$/;"	l
f010066b	obj/kern/kernel.asm	/^f010066b:	0f b6 f0             	movzbl %al,%esi$/;"	l
f010066e	obj/kern/kernel.asm	/^f010066e:	c1 e6 08             	shl    $0x8,%esi$/;"	l
f0100671	obj/kern/kernel.asm	/^f0100671:	b8 0f 00 00 00       	mov    $0xf,%eax$/;"	l
f0100676	obj/kern/kernel.asm	/^f0100676:	89 fa                	mov    %edi,%edx$/;"	l
f0100678	obj/kern/kernel.asm	/^f0100678:	ee                   	out    %al,(%dx)$/;"	l
f0100679	obj/kern/kernel.asm	/^f0100679:	89 ca                	mov    %ecx,%edx$/;"	l
f010067b	obj/kern/kernel.asm	/^f010067b:	ec                   	in     (%dx),%al$/;"	l
f010067c	obj/kern/kernel.asm	/^f010067c:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f010067f	obj/kern/kernel.asm	/^f010067f:	89 bb 84 1f 00 00    	mov    %edi,0x1f84(%ebx)$/;"	l
f0100685	obj/kern/kernel.asm	/^f0100685:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0100688	obj/kern/kernel.asm	/^f0100688:	09 c6                	or     %eax,%esi$/;"	l
f010068a	obj/kern/kernel.asm	/^f010068a:	66 89 b3 80 1f 00 00 	mov    %si,0x1f80(%ebx)$/;"	l
f0100691	obj/kern/kernel.asm	/^f0100691:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f0100696	obj/kern/kernel.asm	/^f0100696:	89 c8                	mov    %ecx,%eax$/;"	l
f0100698	obj/kern/kernel.asm	/^f0100698:	ba fa 03 00 00       	mov    $0x3fa,%edx$/;"	l
f010069d	obj/kern/kernel.asm	/^f010069d:	ee                   	out    %al,(%dx)$/;"	l
f010069e	obj/kern/kernel.asm	/^f010069e:	bf fb 03 00 00       	mov    $0x3fb,%edi$/;"	l
f01006a3	obj/kern/kernel.asm	/^f01006a3:	b8 80 ff ff ff       	mov    $0xffffff80,%eax$/;"	l
f01006a8	obj/kern/kernel.asm	/^f01006a8:	89 fa                	mov    %edi,%edx$/;"	l
f01006aa	obj/kern/kernel.asm	/^f01006aa:	ee                   	out    %al,(%dx)$/;"	l
f01006ab	obj/kern/kernel.asm	/^f01006ab:	b8 0c 00 00 00       	mov    $0xc,%eax$/;"	l
f01006b0	obj/kern/kernel.asm	/^f01006b0:	ba f8 03 00 00       	mov    $0x3f8,%edx$/;"	l
f01006b5	obj/kern/kernel.asm	/^f01006b5:	ee                   	out    %al,(%dx)$/;"	l
f01006b6	obj/kern/kernel.asm	/^f01006b6:	be f9 03 00 00       	mov    $0x3f9,%esi$/;"	l
f01006bb	obj/kern/kernel.asm	/^f01006bb:	89 c8                	mov    %ecx,%eax$/;"	l
f01006bd	obj/kern/kernel.asm	/^f01006bd:	89 f2                	mov    %esi,%edx$/;"	l
f01006bf	obj/kern/kernel.asm	/^f01006bf:	ee                   	out    %al,(%dx)$/;"	l
f01006c0	obj/kern/kernel.asm	/^f01006c0:	b8 03 00 00 00       	mov    $0x3,%eax$/;"	l
f01006c5	obj/kern/kernel.asm	/^f01006c5:	89 fa                	mov    %edi,%edx$/;"	l
f01006c7	obj/kern/kernel.asm	/^f01006c7:	ee                   	out    %al,(%dx)$/;"	l
f01006c8	obj/kern/kernel.asm	/^f01006c8:	ba fc 03 00 00       	mov    $0x3fc,%edx$/;"	l
f01006cd	obj/kern/kernel.asm	/^f01006cd:	89 c8                	mov    %ecx,%eax$/;"	l
f01006cf	obj/kern/kernel.asm	/^f01006cf:	ee                   	out    %al,(%dx)$/;"	l
f01006d0	obj/kern/kernel.asm	/^f01006d0:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f01006d5	obj/kern/kernel.asm	/^f01006d5:	89 f2                	mov    %esi,%edx$/;"	l
f01006d7	obj/kern/kernel.asm	/^f01006d7:	ee                   	out    %al,(%dx)$/;"	l
f01006d8	obj/kern/kernel.asm	/^f01006d8:	ba fd 03 00 00       	mov    $0x3fd,%edx$/;"	l
f01006dd	obj/kern/kernel.asm	/^f01006dd:	ec                   	in     (%dx),%al$/;"	l
f01006de	obj/kern/kernel.asm	/^f01006de:	89 c1                	mov    %eax,%ecx$/;"	l
f01006e0	obj/kern/kernel.asm	/^f01006e0:	3c ff                	cmp    $0xff,%al$/;"	l
f01006e2	obj/kern/kernel.asm	/^f01006e2:	0f 95 83 8c 1f 00 00 	setne  0x1f8c(%ebx)$/;"	l
f01006e9	obj/kern/kernel.asm	/^f01006e9:	ba fa 03 00 00       	mov    $0x3fa,%edx$/;"	l
f01006ee	obj/kern/kernel.asm	/^f01006ee:	ec                   	in     (%dx),%al$/;"	l
f01006ef	obj/kern/kernel.asm	/^f01006ef:	ba f8 03 00 00       	mov    $0x3f8,%edx$/;"	l
f01006f4	obj/kern/kernel.asm	/^f01006f4:	ec                   	in     (%dx),%al$/;"	l
f01006f5	obj/kern/kernel.asm	/^f01006f5:	80 f9 ff             	cmp    $0xff,%cl$/;"	l
f01006f8	obj/kern/kernel.asm	/^f01006f8:	74 25                	je     f010071f <cons_init+0x10e>$/;"	l
f01006fa	obj/kern/kernel.asm	/^f01006fa:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f01006fd	obj/kern/kernel.asm	/^f01006fd:	5b                   	pop    %ebx$/;"	l
f01006fe	obj/kern/kernel.asm	/^f01006fe:	5e                   	pop    %esi$/;"	l
f01006ff	obj/kern/kernel.asm	/^f01006ff:	5f                   	pop    %edi$/;"	l
f0100700	obj/kern/kernel.asm	/^f0100700:	5d                   	pop    %ebp$/;"	l
f0100701	obj/kern/kernel.asm	/^f0100701:	c3                   	ret    $/;"	l
f0100702	obj/kern/kernel.asm	/^f0100702:	66 89 15 00 80 0b f0 	mov    %dx,0xf00b8000$/;"	l
f0100709	obj/kern/kernel.asm	/^f0100709:	c7 83 88 1f 00 00 d4 	movl   $0x3d4,0x1f88(%ebx)$/;"	l
f0100710	obj/kern/kernel.asm	/^f0100710:	03 00 00 $/;"	l
f0100713	obj/kern/kernel.asm	/^f0100713:	c7 45 e4 00 80 0b f0 	movl   $0xf00b8000,-0x1c(%ebp)$/;"	l
f010071a	obj/kern/kernel.asm	/^f010071a:	e9 38 ff ff ff       	jmp    f0100657 <cons_init+0x46>$/;"	l
f010071f	obj/kern/kernel.asm	/^f010071f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100722	obj/kern/kernel.asm	/^f0100722:	8d 83 88 07 ff ff    	lea    -0xf878(%ebx),%eax$/;"	l
f0100728	obj/kern/kernel.asm	/^f0100728:	50                   	push   %eax$/;"	l
f0100729	obj/kern/kernel.asm	/^f0100729:	e8 1b 03 00 00       	call   f0100a49 <cprintf>$/;"	l
f010072e	obj/kern/kernel.asm	/^f010072e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100731	obj/kern/kernel.asm	/^f0100731:	eb c7                	jmp    f01006fa <cons_init+0xe9>$/;"	l
f0100733	obj/kern/kernel.asm	/^f0100733 <cputchar>:$/;"	l
f0100733	obj/kern/kernel.asm	/^f0100733:	55                   	push   %ebp$/;"	l
f0100734	obj/kern/kernel.asm	/^f0100734:	89 e5                	mov    %esp,%ebp$/;"	l
f0100736	obj/kern/kernel.asm	/^f0100736:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100739	obj/kern/kernel.asm	/^f0100739:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010073c	obj/kern/kernel.asm	/^f010073c:	e8 1b fc ff ff       	call   f010035c <cons_putc>$/;"	l
f0100741	obj/kern/kernel.asm	/^f0100741:	c9                   	leave  $/;"	l
f0100742	obj/kern/kernel.asm	/^f0100742:	c3                   	ret    $/;"	l
f0100743	obj/kern/kernel.asm	/^f0100743 <getchar>:$/;"	l
f0100743	obj/kern/kernel.asm	/^f0100743:	55                   	push   %ebp$/;"	l
f0100744	obj/kern/kernel.asm	/^f0100744:	89 e5                	mov    %esp,%ebp$/;"	l
f0100746	obj/kern/kernel.asm	/^f0100746:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100749	obj/kern/kernel.asm	/^f0100749:	e8 69 fe ff ff       	call   f01005b7 <cons_getc>$/;"	l
f010074e	obj/kern/kernel.asm	/^f010074e:	85 c0                	test   %eax,%eax$/;"	l
f0100750	obj/kern/kernel.asm	/^f0100750:	74 f7                	je     f0100749 <getchar+0x6>$/;"	l
f0100752	obj/kern/kernel.asm	/^f0100752:	c9                   	leave  $/;"	l
f0100753	obj/kern/kernel.asm	/^f0100753:	c3                   	ret    $/;"	l
f0100754	obj/kern/kernel.asm	/^f0100754 <iscons>:$/;"	l
f0100754	obj/kern/kernel.asm	/^f0100754:	55                   	push   %ebp$/;"	l
f0100755	obj/kern/kernel.asm	/^f0100755:	89 e5                	mov    %esp,%ebp$/;"	l
f0100757	obj/kern/kernel.asm	/^f0100757:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f010075c	obj/kern/kernel.asm	/^f010075c:	5d                   	pop    %ebp$/;"	l
f010075d	obj/kern/kernel.asm	/^f010075d:	c3                   	ret    $/;"	l
f010075e	obj/kern/kernel.asm	/^f010075e <__x86.get_pc_thunk.ax>:$/;"	l
f010075e	obj/kern/kernel.asm	/^f010075e:	8b 04 24             	mov    (%esp),%eax$/;"	l
f0100761	obj/kern/kernel.asm	/^f0100761:	c3                   	ret    $/;"	l
f0100762	obj/kern/kernel.asm	/^f0100762 <mon_help>:$/;"	l
f0100762	obj/kern/kernel.asm	/^f0100762:	55                   	push   %ebp$/;"	l
f0100763	obj/kern/kernel.asm	/^f0100763:	89 e5                	mov    %esp,%ebp$/;"	l
f0100765	obj/kern/kernel.asm	/^f0100765:	56                   	push   %esi$/;"	l
f0100766	obj/kern/kernel.asm	/^f0100766:	53                   	push   %ebx$/;"	l
f0100767	obj/kern/kernel.asm	/^f0100767:	e8 50 fa ff ff       	call   f01001bc <__x86.get_pc_thunk.bx>$/;"	l
f010076c	obj/kern/kernel.asm	/^f010076c:	81 c3 9c 0b 01 00    	add    $0x10b9c,%ebx$/;"	l
f0100772	obj/kern/kernel.asm	/^f0100772:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100775	obj/kern/kernel.asm	/^f0100775:	8d 83 b8 09 ff ff    	lea    -0xf648(%ebx),%eax$/;"	l
f010077b	obj/kern/kernel.asm	/^f010077b:	50                   	push   %eax$/;"	l
f010077c	obj/kern/kernel.asm	/^f010077c:	8d 83 d6 09 ff ff    	lea    -0xf62a(%ebx),%eax$/;"	l
f0100782	obj/kern/kernel.asm	/^f0100782:	50                   	push   %eax$/;"	l
f0100783	obj/kern/kernel.asm	/^f0100783:	8d b3 db 09 ff ff    	lea    -0xf625(%ebx),%esi$/;"	l
f0100789	obj/kern/kernel.asm	/^f0100789:	56                   	push   %esi$/;"	l
f010078a	obj/kern/kernel.asm	/^f010078a:	e8 ba 02 00 00       	call   f0100a49 <cprintf>$/;"	l
f010078f	obj/kern/kernel.asm	/^f010078f:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0100792	obj/kern/kernel.asm	/^f0100792:	8d 83 44 0a ff ff    	lea    -0xf5bc(%ebx),%eax$/;"	l
f0100798	obj/kern/kernel.asm	/^f0100798:	50                   	push   %eax$/;"	l
f0100799	obj/kern/kernel.asm	/^f0100799:	8d 83 e4 09 ff ff    	lea    -0xf61c(%ebx),%eax$/;"	l
f010079f	obj/kern/kernel.asm	/^f010079f:	50                   	push   %eax$/;"	l
f01007a0	obj/kern/kernel.asm	/^f01007a0:	56                   	push   %esi$/;"	l
f01007a1	obj/kern/kernel.asm	/^f01007a1:	e8 a3 02 00 00       	call   f0100a49 <cprintf>$/;"	l
f01007a6	obj/kern/kernel.asm	/^f01007a6:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01007ab	obj/kern/kernel.asm	/^f01007ab:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f01007ae	obj/kern/kernel.asm	/^f01007ae:	5b                   	pop    %ebx$/;"	l
f01007af	obj/kern/kernel.asm	/^f01007af:	5e                   	pop    %esi$/;"	l
f01007b0	obj/kern/kernel.asm	/^f01007b0:	5d                   	pop    %ebp$/;"	l
f01007b1	obj/kern/kernel.asm	/^f01007b1:	c3                   	ret    $/;"	l
f01007b2	obj/kern/kernel.asm	/^f01007b2 <mon_kerninfo>:$/;"	l
f01007b2	obj/kern/kernel.asm	/^f01007b2:	55                   	push   %ebp$/;"	l
f01007b3	obj/kern/kernel.asm	/^f01007b3:	89 e5                	mov    %esp,%ebp$/;"	l
f01007b5	obj/kern/kernel.asm	/^f01007b5:	57                   	push   %edi$/;"	l
f01007b6	obj/kern/kernel.asm	/^f01007b6:	56                   	push   %esi$/;"	l
f01007b7	obj/kern/kernel.asm	/^f01007b7:	53                   	push   %ebx$/;"	l
f01007b8	obj/kern/kernel.asm	/^f01007b8:	83 ec 18             	sub    $0x18,%esp$/;"	l
f01007bb	obj/kern/kernel.asm	/^f01007bb:	e8 fc f9 ff ff       	call   f01001bc <__x86.get_pc_thunk.bx>$/;"	l
f01007c0	obj/kern/kernel.asm	/^f01007c0:	81 c3 48 0b 01 00    	add    $0x10b48,%ebx$/;"	l
f01007c6	obj/kern/kernel.asm	/^f01007c6:	8d 83 ed 09 ff ff    	lea    -0xf613(%ebx),%eax$/;"	l
f01007cc	obj/kern/kernel.asm	/^f01007cc:	50                   	push   %eax$/;"	l
f01007cd	obj/kern/kernel.asm	/^f01007cd:	e8 77 02 00 00       	call   f0100a49 <cprintf>$/;"	l
f01007d2	obj/kern/kernel.asm	/^f01007d2:	83 c4 08             	add    $0x8,%esp$/;"	l
f01007d5	obj/kern/kernel.asm	/^f01007d5:	ff b3 f8 ff ff ff    	pushl  -0x8(%ebx)$/;"	l
f01007db	obj/kern/kernel.asm	/^f01007db:	8d 83 6c 0a ff ff    	lea    -0xf594(%ebx),%eax$/;"	l
f01007e1	obj/kern/kernel.asm	/^f01007e1:	50                   	push   %eax$/;"	l
f01007e2	obj/kern/kernel.asm	/^f01007e2:	e8 62 02 00 00       	call   f0100a49 <cprintf>$/;"	l
f01007e7	obj/kern/kernel.asm	/^f01007e7:	83 c4 0c             	add    $0xc,%esp$/;"	l
f01007ea	obj/kern/kernel.asm	/^f01007ea:	c7 c7 0c 00 10 f0    	mov    $0xf010000c,%edi$/;"	l
f01007f0	obj/kern/kernel.asm	/^f01007f0:	8d 87 00 00 00 10    	lea    0x10000000(%edi),%eax$/;"	l
f01007f6	obj/kern/kernel.asm	/^f01007f6:	50                   	push   %eax$/;"	l
f01007f7	obj/kern/kernel.asm	/^f01007f7:	57                   	push   %edi$/;"	l
f01007f8	obj/kern/kernel.asm	/^f01007f8:	8d 83 94 0a ff ff    	lea    -0xf56c(%ebx),%eax$/;"	l
f01007fe	obj/kern/kernel.asm	/^f01007fe:	50                   	push   %eax$/;"	l
f01007ff	obj/kern/kernel.asm	/^f01007ff:	e8 45 02 00 00       	call   f0100a49 <cprintf>$/;"	l
f0100804	obj/kern/kernel.asm	/^f0100804:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0100807	obj/kern/kernel.asm	/^f0100807:	c7 c0 e9 19 10 f0    	mov    $0xf01019e9,%eax$/;"	l
f010080d	obj/kern/kernel.asm	/^f010080d:	8d 90 00 00 00 10    	lea    0x10000000(%eax),%edx$/;"	l
f0100813	obj/kern/kernel.asm	/^f0100813:	52                   	push   %edx$/;"	l
f0100814	obj/kern/kernel.asm	/^f0100814:	50                   	push   %eax$/;"	l
f0100815	obj/kern/kernel.asm	/^f0100815:	8d 83 b8 0a ff ff    	lea    -0xf548(%ebx),%eax$/;"	l
f010081b	obj/kern/kernel.asm	/^f010081b:	50                   	push   %eax$/;"	l
f010081c	obj/kern/kernel.asm	/^f010081c:	e8 28 02 00 00       	call   f0100a49 <cprintf>$/;"	l
f0100821	obj/kern/kernel.asm	/^f0100821:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0100824	obj/kern/kernel.asm	/^f0100824:	c7 c0 60 30 11 f0    	mov    $0xf0113060,%eax$/;"	l
f010082a	obj/kern/kernel.asm	/^f010082a:	8d 90 00 00 00 10    	lea    0x10000000(%eax),%edx$/;"	l
f0100830	obj/kern/kernel.asm	/^f0100830:	52                   	push   %edx$/;"	l
f0100831	obj/kern/kernel.asm	/^f0100831:	50                   	push   %eax$/;"	l
f0100832	obj/kern/kernel.asm	/^f0100832:	8d 83 dc 0a ff ff    	lea    -0xf524(%ebx),%eax$/;"	l
f0100838	obj/kern/kernel.asm	/^f0100838:	50                   	push   %eax$/;"	l
f0100839	obj/kern/kernel.asm	/^f0100839:	e8 0b 02 00 00       	call   f0100a49 <cprintf>$/;"	l
f010083e	obj/kern/kernel.asm	/^f010083e:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0100841	obj/kern/kernel.asm	/^f0100841:	c7 c6 a0 36 11 f0    	mov    $0xf01136a0,%esi$/;"	l
f0100847	obj/kern/kernel.asm	/^f0100847:	8d 86 00 00 00 10    	lea    0x10000000(%esi),%eax$/;"	l
f010084d	obj/kern/kernel.asm	/^f010084d:	50                   	push   %eax$/;"	l
f010084e	obj/kern/kernel.asm	/^f010084e:	56                   	push   %esi$/;"	l
f010084f	obj/kern/kernel.asm	/^f010084f:	8d 83 00 0b ff ff    	lea    -0xf500(%ebx),%eax$/;"	l
f0100855	obj/kern/kernel.asm	/^f0100855:	50                   	push   %eax$/;"	l
f0100856	obj/kern/kernel.asm	/^f0100856:	e8 ee 01 00 00       	call   f0100a49 <cprintf>$/;"	l
f010085b	obj/kern/kernel.asm	/^f010085b:	83 c4 08             	add    $0x8,%esp$/;"	l
f010085e	obj/kern/kernel.asm	/^f010085e:	81 c6 ff 03 00 00    	add    $0x3ff,%esi$/;"	l
f0100864	obj/kern/kernel.asm	/^f0100864:	29 fe                	sub    %edi,%esi$/;"	l
f0100866	obj/kern/kernel.asm	/^f0100866:	c1 fe 0a             	sar    $0xa,%esi$/;"	l
f0100869	obj/kern/kernel.asm	/^f0100869:	56                   	push   %esi$/;"	l
f010086a	obj/kern/kernel.asm	/^f010086a:	8d 83 24 0b ff ff    	lea    -0xf4dc(%ebx),%eax$/;"	l
f0100870	obj/kern/kernel.asm	/^f0100870:	50                   	push   %eax$/;"	l
f0100871	obj/kern/kernel.asm	/^f0100871:	e8 d3 01 00 00       	call   f0100a49 <cprintf>$/;"	l
f0100876	obj/kern/kernel.asm	/^f0100876:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010087b	obj/kern/kernel.asm	/^f010087b:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f010087e	obj/kern/kernel.asm	/^f010087e:	5b                   	pop    %ebx$/;"	l
f010087f	obj/kern/kernel.asm	/^f010087f:	5e                   	pop    %esi$/;"	l
f0100880	obj/kern/kernel.asm	/^f0100880:	5f                   	pop    %edi$/;"	l
f0100881	obj/kern/kernel.asm	/^f0100881:	5d                   	pop    %ebp$/;"	l
f0100882	obj/kern/kernel.asm	/^f0100882:	c3                   	ret    $/;"	l
f0100883	obj/kern/kernel.asm	/^f0100883 <mon_backtrace>:$/;"	l
f0100883	obj/kern/kernel.asm	/^f0100883:	55                   	push   %ebp$/;"	l
f0100884	obj/kern/kernel.asm	/^f0100884:	89 e5                	mov    %esp,%ebp$/;"	l
f0100886	obj/kern/kernel.asm	/^f0100886:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010088b	obj/kern/kernel.asm	/^f010088b:	5d                   	pop    %ebp$/;"	l
f010088c	obj/kern/kernel.asm	/^f010088c:	c3                   	ret    $/;"	l
f010088d	obj/kern/kernel.asm	/^f010088d <monitor>:$/;"	l
f010088d	obj/kern/kernel.asm	/^f010088d:	55                   	push   %ebp$/;"	l
f010088e	obj/kern/kernel.asm	/^f010088e:	89 e5                	mov    %esp,%ebp$/;"	l
f0100890	obj/kern/kernel.asm	/^f0100890:	57                   	push   %edi$/;"	l
f0100891	obj/kern/kernel.asm	/^f0100891:	56                   	push   %esi$/;"	l
f0100892	obj/kern/kernel.asm	/^f0100892:	53                   	push   %ebx$/;"	l
f0100893	obj/kern/kernel.asm	/^f0100893:	83 ec 68             	sub    $0x68,%esp$/;"	l
f0100896	obj/kern/kernel.asm	/^f0100896:	e8 21 f9 ff ff       	call   f01001bc <__x86.get_pc_thunk.bx>$/;"	l
f010089b	obj/kern/kernel.asm	/^f010089b:	81 c3 6d 0a 01 00    	add    $0x10a6d,%ebx$/;"	l
f01008a1	obj/kern/kernel.asm	/^f01008a1:	8d 83 50 0b ff ff    	lea    -0xf4b0(%ebx),%eax$/;"	l
f01008a7	obj/kern/kernel.asm	/^f01008a7:	50                   	push   %eax$/;"	l
f01008a8	obj/kern/kernel.asm	/^f01008a8:	e8 9c 01 00 00       	call   f0100a49 <cprintf>$/;"	l
f01008ad	obj/kern/kernel.asm	/^f01008ad:	8d 83 74 0b ff ff    	lea    -0xf48c(%ebx),%eax$/;"	l
f01008b3	obj/kern/kernel.asm	/^f01008b3:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01008b6	obj/kern/kernel.asm	/^f01008b6:	e8 8e 01 00 00       	call   f0100a49 <cprintf>$/;"	l
f01008bb	obj/kern/kernel.asm	/^f01008bb:	83 c4 10             	add    $0x10,%esp$/;"	l
f01008be	obj/kern/kernel.asm	/^f01008be:	8d bb 0a 0a ff ff    	lea    -0xf5f6(%ebx),%edi$/;"	l
f01008c4	obj/kern/kernel.asm	/^f01008c4:	eb 4a                	jmp    f0100910 <monitor+0x83>$/;"	l
f01008c6	obj/kern/kernel.asm	/^f01008c6:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01008c9	obj/kern/kernel.asm	/^f01008c9:	0f be c0             	movsbl %al,%eax$/;"	l
f01008cc	obj/kern/kernel.asm	/^f01008cc:	50                   	push   %eax$/;"	l
f01008cd	obj/kern/kernel.asm	/^f01008cd:	57                   	push   %edi$/;"	l
f01008ce	obj/kern/kernel.asm	/^f01008ce:	e8 99 0c 00 00       	call   f010156c <strchr>$/;"	l
f01008d3	obj/kern/kernel.asm	/^f01008d3:	83 c4 10             	add    $0x10,%esp$/;"	l
f01008d6	obj/kern/kernel.asm	/^f01008d6:	85 c0                	test   %eax,%eax$/;"	l
f01008d8	obj/kern/kernel.asm	/^f01008d8:	74 08                	je     f01008e2 <monitor+0x55>$/;"	l
f01008da	obj/kern/kernel.asm	/^f01008da:	c6 06 00             	movb   $0x0,(%esi)$/;"	l
f01008dd	obj/kern/kernel.asm	/^f01008dd:	8d 76 01             	lea    0x1(%esi),%esi$/;"	l
f01008e0	obj/kern/kernel.asm	/^f01008e0:	eb 79                	jmp    f010095b <monitor+0xce>$/;"	l
f01008e2	obj/kern/kernel.asm	/^f01008e2:	80 3e 00             	cmpb   $0x0,(%esi)$/;"	l
f01008e5	obj/kern/kernel.asm	/^f01008e5:	74 7f                	je     f0100966 <monitor+0xd9>$/;"	l
f01008e7	obj/kern/kernel.asm	/^f01008e7:	83 7d a4 0f          	cmpl   $0xf,-0x5c(%ebp)$/;"	l
f01008eb	obj/kern/kernel.asm	/^f01008eb:	74 0f                	je     f01008fc <monitor+0x6f>$/;"	l
f01008ed	obj/kern/kernel.asm	/^f01008ed:	8b 45 a4             	mov    -0x5c(%ebp),%eax$/;"	l
f01008f0	obj/kern/kernel.asm	/^f01008f0:	8d 48 01             	lea    0x1(%eax),%ecx$/;"	l
f01008f3	obj/kern/kernel.asm	/^f01008f3:	89 4d a4             	mov    %ecx,-0x5c(%ebp)$/;"	l
f01008f6	obj/kern/kernel.asm	/^f01008f6:	89 74 85 a8          	mov    %esi,-0x58(%ebp,%eax,4)$/;"	l
f01008fa	obj/kern/kernel.asm	/^f01008fa:	eb 44                	jmp    f0100940 <monitor+0xb3>$/;"	l
f01008fc	obj/kern/kernel.asm	/^f01008fc:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01008ff	obj/kern/kernel.asm	/^f01008ff:	6a 10                	push   $0x10$/;"	l
f0100901	obj/kern/kernel.asm	/^f0100901:	8d 83 0f 0a ff ff    	lea    -0xf5f1(%ebx),%eax$/;"	l
f0100907	obj/kern/kernel.asm	/^f0100907:	50                   	push   %eax$/;"	l
f0100908	obj/kern/kernel.asm	/^f0100908:	e8 3c 01 00 00       	call   f0100a49 <cprintf>$/;"	l
f010090d	obj/kern/kernel.asm	/^f010090d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100910	obj/kern/kernel.asm	/^f0100910:	8d 83 06 0a ff ff    	lea    -0xf5fa(%ebx),%eax$/;"	l
f0100916	obj/kern/kernel.asm	/^f0100916:	89 45 a4             	mov    %eax,-0x5c(%ebp)$/;"	l
f0100919	obj/kern/kernel.asm	/^f0100919:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010091c	obj/kern/kernel.asm	/^f010091c:	ff 75 a4             	pushl  -0x5c(%ebp)$/;"	l
f010091f	obj/kern/kernel.asm	/^f010091f:	e8 10 0a 00 00       	call   f0101334 <readline>$/;"	l
f0100924	obj/kern/kernel.asm	/^f0100924:	89 c6                	mov    %eax,%esi$/;"	l
f0100926	obj/kern/kernel.asm	/^f0100926:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100929	obj/kern/kernel.asm	/^f0100929:	85 c0                	test   %eax,%eax$/;"	l
f010092b	obj/kern/kernel.asm	/^f010092b:	74 ec                	je     f0100919 <monitor+0x8c>$/;"	l
f010092d	obj/kern/kernel.asm	/^f010092d:	c7 45 a8 00 00 00 00 	movl   $0x0,-0x58(%ebp)$/;"	l
f0100934	obj/kern/kernel.asm	/^f0100934:	c7 45 a4 00 00 00 00 	movl   $0x0,-0x5c(%ebp)$/;"	l
f010093b	obj/kern/kernel.asm	/^f010093b:	eb 1e                	jmp    f010095b <monitor+0xce>$/;"	l
f010093d	obj/kern/kernel.asm	/^f010093d:	83 c6 01             	add    $0x1,%esi$/;"	l
f0100940	obj/kern/kernel.asm	/^f0100940:	0f b6 06             	movzbl (%esi),%eax$/;"	l
f0100943	obj/kern/kernel.asm	/^f0100943:	84 c0                	test   %al,%al$/;"	l
f0100945	obj/kern/kernel.asm	/^f0100945:	74 14                	je     f010095b <monitor+0xce>$/;"	l
f0100947	obj/kern/kernel.asm	/^f0100947:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010094a	obj/kern/kernel.asm	/^f010094a:	0f be c0             	movsbl %al,%eax$/;"	l
f010094d	obj/kern/kernel.asm	/^f010094d:	50                   	push   %eax$/;"	l
f010094e	obj/kern/kernel.asm	/^f010094e:	57                   	push   %edi$/;"	l
f010094f	obj/kern/kernel.asm	/^f010094f:	e8 18 0c 00 00       	call   f010156c <strchr>$/;"	l
f0100954	obj/kern/kernel.asm	/^f0100954:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100957	obj/kern/kernel.asm	/^f0100957:	85 c0                	test   %eax,%eax$/;"	l
f0100959	obj/kern/kernel.asm	/^f0100959:	74 e2                	je     f010093d <monitor+0xb0>$/;"	l
f010095b	obj/kern/kernel.asm	/^f010095b:	0f b6 06             	movzbl (%esi),%eax$/;"	l
f010095e	obj/kern/kernel.asm	/^f010095e:	84 c0                	test   %al,%al$/;"	l
f0100960	obj/kern/kernel.asm	/^f0100960:	0f 85 60 ff ff ff    	jne    f01008c6 <monitor+0x39>$/;"	l
f0100966	obj/kern/kernel.asm	/^f0100966:	8b 45 a4             	mov    -0x5c(%ebp),%eax$/;"	l
f0100969	obj/kern/kernel.asm	/^f0100969:	c7 44 85 a8 00 00 00 	movl   $0x0,-0x58(%ebp,%eax,4)$/;"	l
f0100970	obj/kern/kernel.asm	/^f0100970:	00 $/;"	l
f0100971	obj/kern/kernel.asm	/^f0100971:	85 c0                	test   %eax,%eax$/;"	l
f0100973	obj/kern/kernel.asm	/^f0100973:	74 9b                	je     f0100910 <monitor+0x83>$/;"	l
f0100975	obj/kern/kernel.asm	/^f0100975:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100978	obj/kern/kernel.asm	/^f0100978:	8d 83 d6 09 ff ff    	lea    -0xf62a(%ebx),%eax$/;"	l
f010097e	obj/kern/kernel.asm	/^f010097e:	50                   	push   %eax$/;"	l
f010097f	obj/kern/kernel.asm	/^f010097f:	ff 75 a8             	pushl  -0x58(%ebp)$/;"	l
f0100982	obj/kern/kernel.asm	/^f0100982:	e8 87 0b 00 00       	call   f010150e <strcmp>$/;"	l
f0100987	obj/kern/kernel.asm	/^f0100987:	83 c4 10             	add    $0x10,%esp$/;"	l
f010098a	obj/kern/kernel.asm	/^f010098a:	85 c0                	test   %eax,%eax$/;"	l
f010098c	obj/kern/kernel.asm	/^f010098c:	74 38                	je     f01009c6 <monitor+0x139>$/;"	l
f010098e	obj/kern/kernel.asm	/^f010098e:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100991	obj/kern/kernel.asm	/^f0100991:	8d 83 e4 09 ff ff    	lea    -0xf61c(%ebx),%eax$/;"	l
f0100997	obj/kern/kernel.asm	/^f0100997:	50                   	push   %eax$/;"	l
f0100998	obj/kern/kernel.asm	/^f0100998:	ff 75 a8             	pushl  -0x58(%ebp)$/;"	l
f010099b	obj/kern/kernel.asm	/^f010099b:	e8 6e 0b 00 00       	call   f010150e <strcmp>$/;"	l
f01009a0	obj/kern/kernel.asm	/^f01009a0:	83 c4 10             	add    $0x10,%esp$/;"	l
f01009a3	obj/kern/kernel.asm	/^f01009a3:	85 c0                	test   %eax,%eax$/;"	l
f01009a5	obj/kern/kernel.asm	/^f01009a5:	74 1a                	je     f01009c1 <monitor+0x134>$/;"	l
f01009a7	obj/kern/kernel.asm	/^f01009a7:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01009aa	obj/kern/kernel.asm	/^f01009aa:	ff 75 a8             	pushl  -0x58(%ebp)$/;"	l
f01009ad	obj/kern/kernel.asm	/^f01009ad:	8d 83 2c 0a ff ff    	lea    -0xf5d4(%ebx),%eax$/;"	l
f01009b3	obj/kern/kernel.asm	/^f01009b3:	50                   	push   %eax$/;"	l
f01009b4	obj/kern/kernel.asm	/^f01009b4:	e8 90 00 00 00       	call   f0100a49 <cprintf>$/;"	l
f01009b9	obj/kern/kernel.asm	/^f01009b9:	83 c4 10             	add    $0x10,%esp$/;"	l
f01009bc	obj/kern/kernel.asm	/^f01009bc:	e9 4f ff ff ff       	jmp    f0100910 <monitor+0x83>$/;"	l
f01009c1	obj/kern/kernel.asm	/^f01009c1:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f01009c6	obj/kern/kernel.asm	/^f01009c6:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01009c9	obj/kern/kernel.asm	/^f01009c9:	8d 04 40             	lea    (%eax,%eax,2),%eax$/;"	l
f01009cc	obj/kern/kernel.asm	/^f01009cc:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f01009cf	obj/kern/kernel.asm	/^f01009cf:	8d 55 a8             	lea    -0x58(%ebp),%edx$/;"	l
f01009d2	obj/kern/kernel.asm	/^f01009d2:	52                   	push   %edx$/;"	l
f01009d3	obj/kern/kernel.asm	/^f01009d3:	ff 75 a4             	pushl  -0x5c(%ebp)$/;"	l
f01009d6	obj/kern/kernel.asm	/^f01009d6:	ff 94 83 10 1d 00 00 	call   *0x1d10(%ebx,%eax,4)$/;"	l
f01009dd	obj/kern/kernel.asm	/^f01009dd:	83 c4 10             	add    $0x10,%esp$/;"	l
f01009e0	obj/kern/kernel.asm	/^f01009e0:	85 c0                	test   %eax,%eax$/;"	l
f01009e2	obj/kern/kernel.asm	/^f01009e2:	0f 89 28 ff ff ff    	jns    f0100910 <monitor+0x83>$/;"	l
f01009e8	obj/kern/kernel.asm	/^f01009e8:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f01009eb	obj/kern/kernel.asm	/^f01009eb:	5b                   	pop    %ebx$/;"	l
f01009ec	obj/kern/kernel.asm	/^f01009ec:	5e                   	pop    %esi$/;"	l
f01009ed	obj/kern/kernel.asm	/^f01009ed:	5f                   	pop    %edi$/;"	l
f01009ee	obj/kern/kernel.asm	/^f01009ee:	5d                   	pop    %ebp$/;"	l
f01009ef	obj/kern/kernel.asm	/^f01009ef:	c3                   	ret    $/;"	l
f01009f0	obj/kern/kernel.asm	/^f01009f0 <putch>:$/;"	l
f01009f0	obj/kern/kernel.asm	/^f01009f0:	55                   	push   %ebp$/;"	l
f01009f1	obj/kern/kernel.asm	/^f01009f1:	89 e5                	mov    %esp,%ebp$/;"	l
f01009f3	obj/kern/kernel.asm	/^f01009f3:	53                   	push   %ebx$/;"	l
f01009f4	obj/kern/kernel.asm	/^f01009f4:	83 ec 10             	sub    $0x10,%esp$/;"	l
f01009f7	obj/kern/kernel.asm	/^f01009f7:	e8 c0 f7 ff ff       	call   f01001bc <__x86.get_pc_thunk.bx>$/;"	l
f01009fc	obj/kern/kernel.asm	/^f01009fc:	81 c3 0c 09 01 00    	add    $0x1090c,%ebx$/;"	l
f0100a02	obj/kern/kernel.asm	/^f0100a02:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0100a05	obj/kern/kernel.asm	/^f0100a05:	e8 29 fd ff ff       	call   f0100733 <cputchar>$/;"	l
f0100a0a	obj/kern/kernel.asm	/^f0100a0a:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100a0d	obj/kern/kernel.asm	/^f0100a0d:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f0100a10	obj/kern/kernel.asm	/^f0100a10:	c9                   	leave  $/;"	l
f0100a11	obj/kern/kernel.asm	/^f0100a11:	c3                   	ret    $/;"	l
f0100a12	obj/kern/kernel.asm	/^f0100a12 <vcprintf>:$/;"	l
f0100a12	obj/kern/kernel.asm	/^f0100a12:	55                   	push   %ebp$/;"	l
f0100a13	obj/kern/kernel.asm	/^f0100a13:	89 e5                	mov    %esp,%ebp$/;"	l
f0100a15	obj/kern/kernel.asm	/^f0100a15:	53                   	push   %ebx$/;"	l
f0100a16	obj/kern/kernel.asm	/^f0100a16:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0100a19	obj/kern/kernel.asm	/^f0100a19:	e8 9e f7 ff ff       	call   f01001bc <__x86.get_pc_thunk.bx>$/;"	l
f0100a1e	obj/kern/kernel.asm	/^f0100a1e:	81 c3 ea 08 01 00    	add    $0x108ea,%ebx$/;"	l
f0100a24	obj/kern/kernel.asm	/^f0100a24:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f0100a2b	obj/kern/kernel.asm	/^f0100a2b:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0100a2e	obj/kern/kernel.asm	/^f0100a2e:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0100a31	obj/kern/kernel.asm	/^f0100a31:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
f0100a34	obj/kern/kernel.asm	/^f0100a34:	50                   	push   %eax$/;"	l
f0100a35	obj/kern/kernel.asm	/^f0100a35:	8d 83 e8 f6 fe ff    	lea    -0x10918(%ebx),%eax$/;"	l
f0100a3b	obj/kern/kernel.asm	/^f0100a3b:	50                   	push   %eax$/;"	l
f0100a3c	obj/kern/kernel.asm	/^f0100a3c:	e8 1c 04 00 00       	call   f0100e5d <vprintfmt>$/;"	l
f0100a41	obj/kern/kernel.asm	/^f0100a41:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0100a44	obj/kern/kernel.asm	/^f0100a44:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f0100a47	obj/kern/kernel.asm	/^f0100a47:	c9                   	leave  $/;"	l
f0100a48	obj/kern/kernel.asm	/^f0100a48:	c3                   	ret    $/;"	l
f0100a49	obj/kern/kernel.asm	/^f0100a49 <cprintf>:$/;"	l
f0100a49	obj/kern/kernel.asm	/^f0100a49:	55                   	push   %ebp$/;"	l
f0100a4a	obj/kern/kernel.asm	/^f0100a4a:	89 e5                	mov    %esp,%ebp$/;"	l
f0100a4c	obj/kern/kernel.asm	/^f0100a4c:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0100a4f	obj/kern/kernel.asm	/^f0100a4f:	8d 45 0c             	lea    0xc(%ebp),%eax$/;"	l
f0100a52	obj/kern/kernel.asm	/^f0100a52:	50                   	push   %eax$/;"	l
f0100a53	obj/kern/kernel.asm	/^f0100a53:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0100a56	obj/kern/kernel.asm	/^f0100a56:	e8 b7 ff ff ff       	call   f0100a12 <vcprintf>$/;"	l
f0100a5b	obj/kern/kernel.asm	/^f0100a5b:	c9                   	leave  $/;"	l
f0100a5c	obj/kern/kernel.asm	/^f0100a5c:	c3                   	ret    $/;"	l
f0100a5d	obj/kern/kernel.asm	/^f0100a5d <stab_binsearch>:$/;"	l
f0100a5d	obj/kern/kernel.asm	/^f0100a5d:	55                   	push   %ebp$/;"	l
f0100a5e	obj/kern/kernel.asm	/^f0100a5e:	89 e5                	mov    %esp,%ebp$/;"	l
f0100a60	obj/kern/kernel.asm	/^f0100a60:	57                   	push   %edi$/;"	l
f0100a61	obj/kern/kernel.asm	/^f0100a61:	56                   	push   %esi$/;"	l
f0100a62	obj/kern/kernel.asm	/^f0100a62:	53                   	push   %ebx$/;"	l
f0100a63	obj/kern/kernel.asm	/^f0100a63:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0100a66	obj/kern/kernel.asm	/^f0100a66:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f0100a69	obj/kern/kernel.asm	/^f0100a69:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f0100a6c	obj/kern/kernel.asm	/^f0100a6c:	89 4d e0             	mov    %ecx,-0x20(%ebp)$/;"	l
f0100a6f	obj/kern/kernel.asm	/^f0100a6f:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0100a72	obj/kern/kernel.asm	/^f0100a72:	8b 32                	mov    (%edx),%esi$/;"	l
f0100a74	obj/kern/kernel.asm	/^f0100a74:	8b 01                	mov    (%ecx),%eax$/;"	l
f0100a76	obj/kern/kernel.asm	/^f0100a76:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f0100a79	obj/kern/kernel.asm	/^f0100a79:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)$/;"	l
f0100a80	obj/kern/kernel.asm	/^f0100a80:	eb 2f                	jmp    f0100ab1 <stab_binsearch+0x54>$/;"	l
f0100a82	obj/kern/kernel.asm	/^f0100a82:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0100a85	obj/kern/kernel.asm	/^f0100a85:	39 c6                	cmp    %eax,%esi$/;"	l
f0100a87	obj/kern/kernel.asm	/^f0100a87:	7f 49                	jg     f0100ad2 <stab_binsearch+0x75>$/;"	l
f0100a89	obj/kern/kernel.asm	/^f0100a89:	0f b6 0a             	movzbl (%edx),%ecx$/;"	l
f0100a8c	obj/kern/kernel.asm	/^f0100a8c:	83 ea 0c             	sub    $0xc,%edx$/;"	l
f0100a8f	obj/kern/kernel.asm	/^f0100a8f:	39 f9                	cmp    %edi,%ecx$/;"	l
f0100a91	obj/kern/kernel.asm	/^f0100a91:	75 ef                	jne    f0100a82 <stab_binsearch+0x25>$/;"	l
f0100a93	obj/kern/kernel.asm	/^f0100a93:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f0100a96	obj/kern/kernel.asm	/^f0100a96:	8b 4d ec             	mov    -0x14(%ebp),%ecx$/;"	l
f0100a99	obj/kern/kernel.asm	/^f0100a99:	8b 54 91 08          	mov    0x8(%ecx,%edx,4),%edx$/;"	l
f0100a9d	obj/kern/kernel.asm	/^f0100a9d:	3b 55 0c             	cmp    0xc(%ebp),%edx$/;"	l
f0100aa0	obj/kern/kernel.asm	/^f0100aa0:	73 35                	jae    f0100ad7 <stab_binsearch+0x7a>$/;"	l
f0100aa2	obj/kern/kernel.asm	/^f0100aa2:	8b 75 e4             	mov    -0x1c(%ebp),%esi$/;"	l
f0100aa5	obj/kern/kernel.asm	/^f0100aa5:	89 06                	mov    %eax,(%esi)$/;"	l
f0100aa7	obj/kern/kernel.asm	/^f0100aa7:	8d 73 01             	lea    0x1(%ebx),%esi$/;"	l
f0100aaa	obj/kern/kernel.asm	/^f0100aaa:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)$/;"	l
f0100ab1	obj/kern/kernel.asm	/^f0100ab1:	3b 75 f0             	cmp    -0x10(%ebp),%esi$/;"	l
f0100ab4	obj/kern/kernel.asm	/^f0100ab4:	7f 4e                	jg     f0100b04 <stab_binsearch+0xa7>$/;"	l
f0100ab6	obj/kern/kernel.asm	/^f0100ab6:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0100ab9	obj/kern/kernel.asm	/^f0100ab9:	01 f0                	add    %esi,%eax$/;"	l
f0100abb	obj/kern/kernel.asm	/^f0100abb:	89 c3                	mov    %eax,%ebx$/;"	l
f0100abd	obj/kern/kernel.asm	/^f0100abd:	c1 eb 1f             	shr    $0x1f,%ebx$/;"	l
f0100ac0	obj/kern/kernel.asm	/^f0100ac0:	01 c3                	add    %eax,%ebx$/;"	l
f0100ac2	obj/kern/kernel.asm	/^f0100ac2:	d1 fb                	sar    %ebx$/;"	d
f0100ac4	obj/kern/kernel.asm	/^f0100ac4:	8d 04 5b             	lea    (%ebx,%ebx,2),%eax$/;"	l
f0100ac7	obj/kern/kernel.asm	/^f0100ac7:	8b 4d ec             	mov    -0x14(%ebp),%ecx$/;"	l
f0100aca	obj/kern/kernel.asm	/^f0100aca:	8d 54 81 04          	lea    0x4(%ecx,%eax,4),%edx$/;"	l
f0100ace	obj/kern/kernel.asm	/^f0100ace:	89 d8                	mov    %ebx,%eax$/;"	l
f0100ad0	obj/kern/kernel.asm	/^f0100ad0:	eb b3                	jmp    f0100a85 <stab_binsearch+0x28>$/;"	l
f0100ad2	obj/kern/kernel.asm	/^f0100ad2:	8d 73 01             	lea    0x1(%ebx),%esi$/;"	l
f0100ad5	obj/kern/kernel.asm	/^f0100ad5:	eb da                	jmp    f0100ab1 <stab_binsearch+0x54>$/;"	l
f0100ad7	obj/kern/kernel.asm	/^f0100ad7:	3b 55 0c             	cmp    0xc(%ebp),%edx$/;"	l
f0100ada	obj/kern/kernel.asm	/^f0100ada:	76 14                	jbe    f0100af0 <stab_binsearch+0x93>$/;"	l
f0100adc	obj/kern/kernel.asm	/^f0100adc:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0100adf	obj/kern/kernel.asm	/^f0100adf:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f0100ae2	obj/kern/kernel.asm	/^f0100ae2:	8b 5d e0             	mov    -0x20(%ebp),%ebx$/;"	l
f0100ae5	obj/kern/kernel.asm	/^f0100ae5:	89 03                	mov    %eax,(%ebx)$/;"	l
f0100ae7	obj/kern/kernel.asm	/^f0100ae7:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)$/;"	l
f0100aee	obj/kern/kernel.asm	/^f0100aee:	eb c1                	jmp    f0100ab1 <stab_binsearch+0x54>$/;"	l
f0100af0	obj/kern/kernel.asm	/^f0100af0:	8b 75 e4             	mov    -0x1c(%ebp),%esi$/;"	l
f0100af3	obj/kern/kernel.asm	/^f0100af3:	89 06                	mov    %eax,(%esi)$/;"	l
f0100af5	obj/kern/kernel.asm	/^f0100af5:	83 45 0c 01          	addl   $0x1,0xc(%ebp)$/;"	l
f0100af9	obj/kern/kernel.asm	/^f0100af9:	89 c6                	mov    %eax,%esi$/;"	l
f0100afb	obj/kern/kernel.asm	/^f0100afb:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)$/;"	l
f0100b02	obj/kern/kernel.asm	/^f0100b02:	eb ad                	jmp    f0100ab1 <stab_binsearch+0x54>$/;"	l
f0100b04	obj/kern/kernel.asm	/^f0100b04:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
f0100b08	obj/kern/kernel.asm	/^f0100b08:	74 16                	je     f0100b20 <stab_binsearch+0xc3>$/;"	l
f0100b0a	obj/kern/kernel.asm	/^f0100b0a:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0100b0d	obj/kern/kernel.asm	/^f0100b0d:	8b 00                	mov    (%eax),%eax$/;"	l
f0100b0f	obj/kern/kernel.asm	/^f0100b0f:	8b 75 e4             	mov    -0x1c(%ebp),%esi$/;"	l
f0100b12	obj/kern/kernel.asm	/^f0100b12:	8b 0e                	mov    (%esi),%ecx$/;"	l
f0100b14	obj/kern/kernel.asm	/^f0100b14:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f0100b17	obj/kern/kernel.asm	/^f0100b17:	8b 75 ec             	mov    -0x14(%ebp),%esi$/;"	l
f0100b1a	obj/kern/kernel.asm	/^f0100b1a:	8d 54 96 04          	lea    0x4(%esi,%edx,4),%edx$/;"	l
f0100b1e	obj/kern/kernel.asm	/^f0100b1e:	eb 12                	jmp    f0100b32 <stab_binsearch+0xd5>$/;"	l
f0100b20	obj/kern/kernel.asm	/^f0100b20:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0100b23	obj/kern/kernel.asm	/^f0100b23:	8b 00                	mov    (%eax),%eax$/;"	l
f0100b25	obj/kern/kernel.asm	/^f0100b25:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0100b28	obj/kern/kernel.asm	/^f0100b28:	8b 7d e0             	mov    -0x20(%ebp),%edi$/;"	l
f0100b2b	obj/kern/kernel.asm	/^f0100b2b:	89 07                	mov    %eax,(%edi)$/;"	l
f0100b2d	obj/kern/kernel.asm	/^f0100b2d:	eb 16                	jmp    f0100b45 <stab_binsearch+0xe8>$/;"	l
f0100b2f	obj/kern/kernel.asm	/^f0100b2f:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0100b32	obj/kern/kernel.asm	/^f0100b32:	39 c1                	cmp    %eax,%ecx$/;"	l
f0100b34	obj/kern/kernel.asm	/^f0100b34:	7d 0a                	jge    f0100b40 <stab_binsearch+0xe3>$/;"	l
f0100b36	obj/kern/kernel.asm	/^f0100b36:	0f b6 1a             	movzbl (%edx),%ebx$/;"	l
f0100b39	obj/kern/kernel.asm	/^f0100b39:	83 ea 0c             	sub    $0xc,%edx$/;"	l
f0100b3c	obj/kern/kernel.asm	/^f0100b3c:	39 fb                	cmp    %edi,%ebx$/;"	l
f0100b3e	obj/kern/kernel.asm	/^f0100b3e:	75 ef                	jne    f0100b2f <stab_binsearch+0xd2>$/;"	l
f0100b40	obj/kern/kernel.asm	/^f0100b40:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0100b43	obj/kern/kernel.asm	/^f0100b43:	89 07                	mov    %eax,(%edi)$/;"	l
f0100b45	obj/kern/kernel.asm	/^f0100b45:	83 c4 14             	add    $0x14,%esp$/;"	l
f0100b48	obj/kern/kernel.asm	/^f0100b48:	5b                   	pop    %ebx$/;"	l
f0100b49	obj/kern/kernel.asm	/^f0100b49:	5e                   	pop    %esi$/;"	l
f0100b4a	obj/kern/kernel.asm	/^f0100b4a:	5f                   	pop    %edi$/;"	l
f0100b4b	obj/kern/kernel.asm	/^f0100b4b:	5d                   	pop    %ebp$/;"	l
f0100b4c	obj/kern/kernel.asm	/^f0100b4c:	c3                   	ret    $/;"	l
f0100b4d	obj/kern/kernel.asm	/^f0100b4d <debuginfo_eip>:$/;"	l
f0100b4d	obj/kern/kernel.asm	/^f0100b4d:	55                   	push   %ebp$/;"	l
f0100b4e	obj/kern/kernel.asm	/^f0100b4e:	89 e5                	mov    %esp,%ebp$/;"	l
f0100b50	obj/kern/kernel.asm	/^f0100b50:	57                   	push   %edi$/;"	l
f0100b51	obj/kern/kernel.asm	/^f0100b51:	56                   	push   %esi$/;"	l
f0100b52	obj/kern/kernel.asm	/^f0100b52:	53                   	push   %ebx$/;"	l
f0100b53	obj/kern/kernel.asm	/^f0100b53:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f0100b56	obj/kern/kernel.asm	/^f0100b56:	e8 fa 01 00 00       	call   f0100d55 <__x86.get_pc_thunk.cx>$/;"	l
f0100b5b	obj/kern/kernel.asm	/^f0100b5b:	81 c1 ad 07 01 00    	add    $0x107ad,%ecx$/;"	l
f0100b61	obj/kern/kernel.asm	/^f0100b61:	89 4d d4             	mov    %ecx,-0x2c(%ebp)$/;"	l
f0100b64	obj/kern/kernel.asm	/^f0100b64:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0100b67	obj/kern/kernel.asm	/^f0100b67:	8b 7d 0c             	mov    0xc(%ebp),%edi$/;"	l
f0100b6a	obj/kern/kernel.asm	/^f0100b6a:	8d 81 9c 0b ff ff    	lea    -0xf464(%ecx),%eax$/;"	l
f0100b70	obj/kern/kernel.asm	/^f0100b70:	89 07                	mov    %eax,(%edi)$/;"	l
f0100b72	obj/kern/kernel.asm	/^f0100b72:	c7 47 04 00 00 00 00 	movl   $0x0,0x4(%edi)$/;"	l
f0100b79	obj/kern/kernel.asm	/^f0100b79:	89 47 08             	mov    %eax,0x8(%edi)$/;"	l
f0100b7c	obj/kern/kernel.asm	/^f0100b7c:	c7 47 0c 09 00 00 00 	movl   $0x9,0xc(%edi)$/;"	l
f0100b83	obj/kern/kernel.asm	/^f0100b83:	89 5f 10             	mov    %ebx,0x10(%edi)$/;"	l
f0100b86	obj/kern/kernel.asm	/^f0100b86:	c7 47 14 00 00 00 00 	movl   $0x0,0x14(%edi)$/;"	l
f0100b8d	obj/kern/kernel.asm	/^f0100b8d:	81 fb ff ff 7f ef    	cmp    $0xef7fffff,%ebx$/;"	l
f0100b93	obj/kern/kernel.asm	/^f0100b93:	0f 86 f4 00 00 00    	jbe    f0100c8d <debuginfo_eip+0x140>$/;"	l
f0100b99	obj/kern/kernel.asm	/^f0100b99:	c7 c0 55 5c 10 f0    	mov    $0xf0105c55,%eax$/;"	l
f0100b9f	obj/kern/kernel.asm	/^f0100b9f:	39 81 fc ff ff ff    	cmp    %eax,-0x4(%ecx)$/;"	l
f0100ba5	obj/kern/kernel.asm	/^f0100ba5:	0f 86 88 01 00 00    	jbe    f0100d33 <debuginfo_eip+0x1e6>$/;"	l
f0100bab	obj/kern/kernel.asm	/^f0100bab:	8b 75 d4             	mov    -0x2c(%ebp),%esi$/;"	l
f0100bae	obj/kern/kernel.asm	/^f0100bae:	c7 c0 9c 75 10 f0    	mov    $0xf010759c,%eax$/;"	l
f0100bb4	obj/kern/kernel.asm	/^f0100bb4:	80 78 ff 00          	cmpb   $0x0,-0x1(%eax)$/;"	l
f0100bb8	obj/kern/kernel.asm	/^f0100bb8:	0f 85 7c 01 00 00    	jne    f0100d3a <debuginfo_eip+0x1ed>$/;"	l
f0100bbe	obj/kern/kernel.asm	/^f0100bbe:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
f0100bc5	obj/kern/kernel.asm	/^f0100bc5:	c7 c0 c0 20 10 f0    	mov    $0xf01020c0,%eax$/;"	l
f0100bcb	obj/kern/kernel.asm	/^f0100bcb:	c7 c2 54 5c 10 f0    	mov    $0xf0105c54,%edx$/;"	l
f0100bd1	obj/kern/kernel.asm	/^f0100bd1:	29 c2                	sub    %eax,%edx$/;"	l
f0100bd3	obj/kern/kernel.asm	/^f0100bd3:	c1 fa 02             	sar    $0x2,%edx$/;"	l
f0100bd6	obj/kern/kernel.asm	/^f0100bd6:	69 d2 ab aa aa aa    	imul   $0xaaaaaaab,%edx,%edx$/;"	l
f0100bdc	obj/kern/kernel.asm	/^f0100bdc:	83 ea 01             	sub    $0x1,%edx$/;"	l
f0100bdf	obj/kern/kernel.asm	/^f0100bdf:	89 55 e0             	mov    %edx,-0x20(%ebp)$/;"	l
f0100be2	obj/kern/kernel.asm	/^f0100be2:	8d 4d e0             	lea    -0x20(%ebp),%ecx$/;"	l
f0100be5	obj/kern/kernel.asm	/^f0100be5:	8d 55 e4             	lea    -0x1c(%ebp),%edx$/;"	l
f0100be8	obj/kern/kernel.asm	/^f0100be8:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100beb	obj/kern/kernel.asm	/^f0100beb:	53                   	push   %ebx$/;"	l
f0100bec	obj/kern/kernel.asm	/^f0100bec:	6a 64                	push   $0x64$/;"	l
f0100bee	obj/kern/kernel.asm	/^f0100bee:	e8 6a fe ff ff       	call   f0100a5d <stab_binsearch>$/;"	l
f0100bf3	obj/kern/kernel.asm	/^f0100bf3:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0100bf6	obj/kern/kernel.asm	/^f0100bf6:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100bf9	obj/kern/kernel.asm	/^f0100bf9:	85 c0                	test   %eax,%eax$/;"	l
f0100bfb	obj/kern/kernel.asm	/^f0100bfb:	0f 84 40 01 00 00    	je     f0100d41 <debuginfo_eip+0x1f4>$/;"	l
f0100c01	obj/kern/kernel.asm	/^f0100c01:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f0100c04	obj/kern/kernel.asm	/^f0100c04:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0100c07	obj/kern/kernel.asm	/^f0100c07:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0100c0a	obj/kern/kernel.asm	/^f0100c0a:	8d 4d d8             	lea    -0x28(%ebp),%ecx$/;"	l
f0100c0d	obj/kern/kernel.asm	/^f0100c0d:	8d 55 dc             	lea    -0x24(%ebp),%edx$/;"	l
f0100c10	obj/kern/kernel.asm	/^f0100c10:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100c13	obj/kern/kernel.asm	/^f0100c13:	53                   	push   %ebx$/;"	l
f0100c14	obj/kern/kernel.asm	/^f0100c14:	6a 24                	push   $0x24$/;"	l
f0100c16	obj/kern/kernel.asm	/^f0100c16:	89 75 d4             	mov    %esi,-0x2c(%ebp)$/;"	l
f0100c19	obj/kern/kernel.asm	/^f0100c19:	c7 c0 c0 20 10 f0    	mov    $0xf01020c0,%eax$/;"	l
f0100c1f	obj/kern/kernel.asm	/^f0100c1f:	e8 39 fe ff ff       	call   f0100a5d <stab_binsearch>$/;"	l
f0100c24	obj/kern/kernel.asm	/^f0100c24:	8b 75 dc             	mov    -0x24(%ebp),%esi$/;"	l
f0100c27	obj/kern/kernel.asm	/^f0100c27:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100c2a	obj/kern/kernel.asm	/^f0100c2a:	3b 75 d8             	cmp    -0x28(%ebp),%esi$/;"	l
f0100c2d	obj/kern/kernel.asm	/^f0100c2d:	7f 79                	jg     f0100ca8 <debuginfo_eip+0x15b>$/;"	l
f0100c2f	obj/kern/kernel.asm	/^f0100c2f:	8d 04 76             	lea    (%esi,%esi,2),%eax$/;"	l
f0100c32	obj/kern/kernel.asm	/^f0100c32:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f0100c35	obj/kern/kernel.asm	/^f0100c35:	c7 c2 c0 20 10 f0    	mov    $0xf01020c0,%edx$/;"	l
f0100c3b	obj/kern/kernel.asm	/^f0100c3b:	8d 0c 82             	lea    (%edx,%eax,4),%ecx$/;"	l
f0100c3e	obj/kern/kernel.asm	/^f0100c3e:	8b 11                	mov    (%ecx),%edx$/;"	l
f0100c40	obj/kern/kernel.asm	/^f0100c40:	c7 c0 9c 75 10 f0    	mov    $0xf010759c,%eax$/;"	l
f0100c46	obj/kern/kernel.asm	/^f0100c46:	81 e8 55 5c 10 f0    	sub    $0xf0105c55,%eax$/;"	l
f0100c4c	obj/kern/kernel.asm	/^f0100c4c:	39 c2                	cmp    %eax,%edx$/;"	l
f0100c4e	obj/kern/kernel.asm	/^f0100c4e:	73 09                	jae    f0100c59 <debuginfo_eip+0x10c>$/;"	l
f0100c50	obj/kern/kernel.asm	/^f0100c50:	81 c2 55 5c 10 f0    	add    $0xf0105c55,%edx$/;"	l
f0100c56	obj/kern/kernel.asm	/^f0100c56:	89 57 08             	mov    %edx,0x8(%edi)$/;"	l
f0100c59	obj/kern/kernel.asm	/^f0100c59:	8b 41 08             	mov    0x8(%ecx),%eax$/;"	l
f0100c5c	obj/kern/kernel.asm	/^f0100c5c:	89 47 10             	mov    %eax,0x10(%edi)$/;"	l
f0100c5f	obj/kern/kernel.asm	/^f0100c5f:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100c62	obj/kern/kernel.asm	/^f0100c62:	6a 3a                	push   $0x3a$/;"	l
f0100c64	obj/kern/kernel.asm	/^f0100c64:	ff 77 08             	pushl  0x8(%edi)$/;"	l
f0100c67	obj/kern/kernel.asm	/^f0100c67:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f0100c6a	obj/kern/kernel.asm	/^f0100c6a:	e8 1e 09 00 00       	call   f010158d <strfind>$/;"	l
f0100c6f	obj/kern/kernel.asm	/^f0100c6f:	2b 47 08             	sub    0x8(%edi),%eax$/;"	l
f0100c72	obj/kern/kernel.asm	/^f0100c72:	89 47 0c             	mov    %eax,0xc(%edi)$/;"	l
f0100c75	obj/kern/kernel.asm	/^f0100c75:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
f0100c78	obj/kern/kernel.asm	/^f0100c78:	8d 04 76             	lea    (%esi,%esi,2),%eax$/;"	l
f0100c7b	obj/kern/kernel.asm	/^f0100c7b:	8b 4d d4             	mov    -0x2c(%ebp),%ecx$/;"	l
f0100c7e	obj/kern/kernel.asm	/^f0100c7e:	c7 c2 c0 20 10 f0    	mov    $0xf01020c0,%edx$/;"	l
f0100c84	obj/kern/kernel.asm	/^f0100c84:	8d 44 82 04          	lea    0x4(%edx,%eax,4),%eax$/;"	l
f0100c88	obj/kern/kernel.asm	/^f0100c88:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100c8b	obj/kern/kernel.asm	/^f0100c8b:	eb 29                	jmp    f0100cb6 <debuginfo_eip+0x169>$/;"	l
f0100c8d	obj/kern/kernel.asm	/^f0100c8d:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100c90	obj/kern/kernel.asm	/^f0100c90:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f0100c93	obj/kern/kernel.asm	/^f0100c93:	8d 83 a6 0b ff ff    	lea    -0xf45a(%ebx),%eax$/;"	l
f0100c99	obj/kern/kernel.asm	/^f0100c99:	50                   	push   %eax$/;"	l
f0100c9a	obj/kern/kernel.asm	/^f0100c9a:	6a 7f                	push   $0x7f$/;"	l
f0100c9c	obj/kern/kernel.asm	/^f0100c9c:	8d 83 b3 0b ff ff    	lea    -0xf44d(%ebx),%eax$/;"	l
f0100ca2	obj/kern/kernel.asm	/^f0100ca2:	50                   	push   %eax$/;"	l
f0100ca3	obj/kern/kernel.asm	/^f0100ca3:	e8 5e f4 ff ff       	call   f0100106 <_panic>$/;"	l
f0100ca8	obj/kern/kernel.asm	/^f0100ca8:	89 5f 10             	mov    %ebx,0x10(%edi)$/;"	l
f0100cab	obj/kern/kernel.asm	/^f0100cab:	8b 75 e4             	mov    -0x1c(%ebp),%esi$/;"	l
f0100cae	obj/kern/kernel.asm	/^f0100cae:	eb af                	jmp    f0100c5f <debuginfo_eip+0x112>$/;"	l
f0100cb0	obj/kern/kernel.asm	/^f0100cb0:	83 ee 01             	sub    $0x1,%esi$/;"	l
f0100cb3	obj/kern/kernel.asm	/^f0100cb3:	83 e8 0c             	sub    $0xc,%eax$/;"	l
f0100cb6	obj/kern/kernel.asm	/^f0100cb6:	39 f3                	cmp    %esi,%ebx$/;"	l
f0100cb8	obj/kern/kernel.asm	/^f0100cb8:	7f 3a                	jg     f0100cf4 <debuginfo_eip+0x1a7>$/;"	l
f0100cba	obj/kern/kernel.asm	/^f0100cba:	0f b6 10             	movzbl (%eax),%edx$/;"	l
f0100cbd	obj/kern/kernel.asm	/^f0100cbd:	80 fa 84             	cmp    $0x84,%dl$/;"	l
f0100cc0	obj/kern/kernel.asm	/^f0100cc0:	74 0b                	je     f0100ccd <debuginfo_eip+0x180>$/;"	l
f0100cc2	obj/kern/kernel.asm	/^f0100cc2:	80 fa 64             	cmp    $0x64,%dl$/;"	l
f0100cc5	obj/kern/kernel.asm	/^f0100cc5:	75 e9                	jne    f0100cb0 <debuginfo_eip+0x163>$/;"	l
f0100cc7	obj/kern/kernel.asm	/^f0100cc7:	83 78 04 00          	cmpl   $0x0,0x4(%eax)$/;"	l
f0100ccb	obj/kern/kernel.asm	/^f0100ccb:	74 e3                	je     f0100cb0 <debuginfo_eip+0x163>$/;"	l
f0100ccd	obj/kern/kernel.asm	/^f0100ccd:	8d 14 76             	lea    (%esi,%esi,2),%edx$/;"	l
f0100cd0	obj/kern/kernel.asm	/^f0100cd0:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f0100cd3	obj/kern/kernel.asm	/^f0100cd3:	c7 c0 c0 20 10 f0    	mov    $0xf01020c0,%eax$/;"	l
f0100cd9	obj/kern/kernel.asm	/^f0100cd9:	8b 14 90             	mov    (%eax,%edx,4),%edx$/;"	l
f0100cdc	obj/kern/kernel.asm	/^f0100cdc:	c7 c0 9c 75 10 f0    	mov    $0xf010759c,%eax$/;"	l
f0100ce2	obj/kern/kernel.asm	/^f0100ce2:	81 e8 55 5c 10 f0    	sub    $0xf0105c55,%eax$/;"	l
f0100ce8	obj/kern/kernel.asm	/^f0100ce8:	39 c2                	cmp    %eax,%edx$/;"	l
f0100cea	obj/kern/kernel.asm	/^f0100cea:	73 08                	jae    f0100cf4 <debuginfo_eip+0x1a7>$/;"	l
f0100cec	obj/kern/kernel.asm	/^f0100cec:	81 c2 55 5c 10 f0    	add    $0xf0105c55,%edx$/;"	l
f0100cf2	obj/kern/kernel.asm	/^f0100cf2:	89 17                	mov    %edx,(%edi)$/;"	l
f0100cf4	obj/kern/kernel.asm	/^f0100cf4:	8b 5d dc             	mov    -0x24(%ebp),%ebx$/;"	l
f0100cf7	obj/kern/kernel.asm	/^f0100cf7:	8b 4d d8             	mov    -0x28(%ebp),%ecx$/;"	l
f0100cfa	obj/kern/kernel.asm	/^f0100cfa:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100cff	obj/kern/kernel.asm	/^f0100cff:	39 cb                	cmp    %ecx,%ebx$/;"	l
f0100d01	obj/kern/kernel.asm	/^f0100d01:	7d 4a                	jge    f0100d4d <debuginfo_eip+0x200>$/;"	l
f0100d03	obj/kern/kernel.asm	/^f0100d03:	8d 53 01             	lea    0x1(%ebx),%edx$/;"	l
f0100d06	obj/kern/kernel.asm	/^f0100d06:	8d 1c 5b             	lea    (%ebx,%ebx,2),%ebx$/;"	l
f0100d09	obj/kern/kernel.asm	/^f0100d09:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0100d0c	obj/kern/kernel.asm	/^f0100d0c:	c7 c0 c0 20 10 f0    	mov    $0xf01020c0,%eax$/;"	l
f0100d12	obj/kern/kernel.asm	/^f0100d12:	8d 44 98 10          	lea    0x10(%eax,%ebx,4),%eax$/;"	l
f0100d16	obj/kern/kernel.asm	/^f0100d16:	eb 07                	jmp    f0100d1f <debuginfo_eip+0x1d2>$/;"	l
f0100d18	obj/kern/kernel.asm	/^f0100d18:	83 47 14 01          	addl   $0x1,0x14(%edi)$/;"	l
f0100d1c	obj/kern/kernel.asm	/^f0100d1c:	83 c2 01             	add    $0x1,%edx$/;"	l
f0100d1f	obj/kern/kernel.asm	/^f0100d1f:	39 d1                	cmp    %edx,%ecx$/;"	l
f0100d21	obj/kern/kernel.asm	/^f0100d21:	74 25                	je     f0100d48 <debuginfo_eip+0x1fb>$/;"	l
f0100d23	obj/kern/kernel.asm	/^f0100d23:	83 c0 0c             	add    $0xc,%eax$/;"	l
f0100d26	obj/kern/kernel.asm	/^f0100d26:	80 78 f4 a0          	cmpb   $0xa0,-0xc(%eax)$/;"	l
f0100d2a	obj/kern/kernel.asm	/^f0100d2a:	74 ec                	je     f0100d18 <debuginfo_eip+0x1cb>$/;"	l
f0100d2c	obj/kern/kernel.asm	/^f0100d2c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100d31	obj/kern/kernel.asm	/^f0100d31:	eb 1a                	jmp    f0100d4d <debuginfo_eip+0x200>$/;"	l
f0100d33	obj/kern/kernel.asm	/^f0100d33:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0100d38	obj/kern/kernel.asm	/^f0100d38:	eb 13                	jmp    f0100d4d <debuginfo_eip+0x200>$/;"	l
f0100d3a	obj/kern/kernel.asm	/^f0100d3a:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0100d3f	obj/kern/kernel.asm	/^f0100d3f:	eb 0c                	jmp    f0100d4d <debuginfo_eip+0x200>$/;"	l
f0100d41	obj/kern/kernel.asm	/^f0100d41:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0100d46	obj/kern/kernel.asm	/^f0100d46:	eb 05                	jmp    f0100d4d <debuginfo_eip+0x200>$/;"	l
f0100d48	obj/kern/kernel.asm	/^f0100d48:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100d4d	obj/kern/kernel.asm	/^f0100d4d:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0100d50	obj/kern/kernel.asm	/^f0100d50:	5b                   	pop    %ebx$/;"	l
f0100d51	obj/kern/kernel.asm	/^f0100d51:	5e                   	pop    %esi$/;"	l
f0100d52	obj/kern/kernel.asm	/^f0100d52:	5f                   	pop    %edi$/;"	l
f0100d53	obj/kern/kernel.asm	/^f0100d53:	5d                   	pop    %ebp$/;"	l
f0100d54	obj/kern/kernel.asm	/^f0100d54:	c3                   	ret    $/;"	l
f0100d55	obj/kern/kernel.asm	/^f0100d55 <__x86.get_pc_thunk.cx>:$/;"	l
f0100d55	obj/kern/kernel.asm	/^f0100d55:	8b 0c 24             	mov    (%esp),%ecx$/;"	l
f0100d58	obj/kern/kernel.asm	/^f0100d58:	c3                   	ret    $/;"	l
f0100d59	obj/kern/kernel.asm	/^f0100d59 <printnum>:$/;"	l
f0100d59	obj/kern/kernel.asm	/^f0100d59:	55                   	push   %ebp$/;"	l
f0100d5a	obj/kern/kernel.asm	/^f0100d5a:	89 e5                	mov    %esp,%ebp$/;"	l
f0100d5c	obj/kern/kernel.asm	/^f0100d5c:	57                   	push   %edi$/;"	l
f0100d5d	obj/kern/kernel.asm	/^f0100d5d:	56                   	push   %esi$/;"	l
f0100d5e	obj/kern/kernel.asm	/^f0100d5e:	53                   	push   %ebx$/;"	l
f0100d5f	obj/kern/kernel.asm	/^f0100d5f:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f0100d62	obj/kern/kernel.asm	/^f0100d62:	e8 ee ff ff ff       	call   f0100d55 <__x86.get_pc_thunk.cx>$/;"	l
f0100d67	obj/kern/kernel.asm	/^f0100d67:	81 c1 a1 05 01 00    	add    $0x105a1,%ecx$/;"	l
f0100d6d	obj/kern/kernel.asm	/^f0100d6d:	89 4d e4             	mov    %ecx,-0x1c(%ebp)$/;"	l
f0100d70	obj/kern/kernel.asm	/^f0100d70:	89 c7                	mov    %eax,%edi$/;"	l
f0100d72	obj/kern/kernel.asm	/^f0100d72:	89 d6                	mov    %edx,%esi$/;"	l
f0100d74	obj/kern/kernel.asm	/^f0100d74:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0100d77	obj/kern/kernel.asm	/^f0100d77:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0100d7a	obj/kern/kernel.asm	/^f0100d7a:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0100d7d	obj/kern/kernel.asm	/^f0100d7d:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
f0100d80	obj/kern/kernel.asm	/^f0100d80:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f0100d83	obj/kern/kernel.asm	/^f0100d83:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0100d88	obj/kern/kernel.asm	/^f0100d88:	89 4d d8             	mov    %ecx,-0x28(%ebp)$/;"	l
f0100d8b	obj/kern/kernel.asm	/^f0100d8b:	89 5d dc             	mov    %ebx,-0x24(%ebp)$/;"	l
f0100d8e	obj/kern/kernel.asm	/^f0100d8e:	39 d3                	cmp    %edx,%ebx$/;"	l
f0100d90	obj/kern/kernel.asm	/^f0100d90:	72 09                	jb     f0100d9b <printnum+0x42>$/;"	l
f0100d92	obj/kern/kernel.asm	/^f0100d92:	39 45 10             	cmp    %eax,0x10(%ebp)$/;"	l
f0100d95	obj/kern/kernel.asm	/^f0100d95:	0f 87 83 00 00 00    	ja     f0100e1e <printnum+0xc5>$/;"	l
f0100d9b	obj/kern/kernel.asm	/^f0100d9b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100d9e	obj/kern/kernel.asm	/^f0100d9e:	ff 75 18             	pushl  0x18(%ebp)$/;"	l
f0100da1	obj/kern/kernel.asm	/^f0100da1:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0100da4	obj/kern/kernel.asm	/^f0100da4:	8d 58 ff             	lea    -0x1(%eax),%ebx$/;"	l
f0100da7	obj/kern/kernel.asm	/^f0100da7:	53                   	push   %ebx$/;"	l
f0100da8	obj/kern/kernel.asm	/^f0100da8:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0100dab	obj/kern/kernel.asm	/^f0100dab:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100dae	obj/kern/kernel.asm	/^f0100dae:	ff 75 dc             	pushl  -0x24(%ebp)$/;"	l
f0100db1	obj/kern/kernel.asm	/^f0100db1:	ff 75 d8             	pushl  -0x28(%ebp)$/;"	l
f0100db4	obj/kern/kernel.asm	/^f0100db4:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
f0100db7	obj/kern/kernel.asm	/^f0100db7:	ff 75 d0             	pushl  -0x30(%ebp)$/;"	l
f0100dba	obj/kern/kernel.asm	/^f0100dba:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
f0100dbd	obj/kern/kernel.asm	/^f0100dbd:	e8 ee 09 00 00       	call   f01017b0 <__udivdi3>$/;"	l
f0100dc2	obj/kern/kernel.asm	/^f0100dc2:	83 c4 18             	add    $0x18,%esp$/;"	l
f0100dc5	obj/kern/kernel.asm	/^f0100dc5:	52                   	push   %edx$/;"	l
f0100dc6	obj/kern/kernel.asm	/^f0100dc6:	50                   	push   %eax$/;"	l
f0100dc7	obj/kern/kernel.asm	/^f0100dc7:	89 f2                	mov    %esi,%edx$/;"	l
f0100dc9	obj/kern/kernel.asm	/^f0100dc9:	89 f8                	mov    %edi,%eax$/;"	l
f0100dcb	obj/kern/kernel.asm	/^f0100dcb:	e8 89 ff ff ff       	call   f0100d59 <printnum>$/;"	l
f0100dd0	obj/kern/kernel.asm	/^f0100dd0:	83 c4 20             	add    $0x20,%esp$/;"	l
f0100dd3	obj/kern/kernel.asm	/^f0100dd3:	eb 13                	jmp    f0100de8 <printnum+0x8f>$/;"	l
f0100dd5	obj/kern/kernel.asm	/^f0100dd5:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100dd8	obj/kern/kernel.asm	/^f0100dd8:	56                   	push   %esi$/;"	l
f0100dd9	obj/kern/kernel.asm	/^f0100dd9:	ff 75 18             	pushl  0x18(%ebp)$/;"	l
f0100ddc	obj/kern/kernel.asm	/^f0100ddc:	ff d7                	call   *%edi$/;"	l
f0100dde	obj/kern/kernel.asm	/^f0100dde:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100de1	obj/kern/kernel.asm	/^f0100de1:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0100de4	obj/kern/kernel.asm	/^f0100de4:	85 db                	test   %ebx,%ebx$/;"	l
f0100de6	obj/kern/kernel.asm	/^f0100de6:	7f ed                	jg     f0100dd5 <printnum+0x7c>$/;"	l
f0100de8	obj/kern/kernel.asm	/^f0100de8:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100deb	obj/kern/kernel.asm	/^f0100deb:	56                   	push   %esi$/;"	l
f0100dec	obj/kern/kernel.asm	/^f0100dec:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100def	obj/kern/kernel.asm	/^f0100def:	ff 75 dc             	pushl  -0x24(%ebp)$/;"	l
f0100df2	obj/kern/kernel.asm	/^f0100df2:	ff 75 d8             	pushl  -0x28(%ebp)$/;"	l
f0100df5	obj/kern/kernel.asm	/^f0100df5:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
f0100df8	obj/kern/kernel.asm	/^f0100df8:	ff 75 d0             	pushl  -0x30(%ebp)$/;"	l
f0100dfb	obj/kern/kernel.asm	/^f0100dfb:	8b 75 e4             	mov    -0x1c(%ebp),%esi$/;"	l
f0100dfe	obj/kern/kernel.asm	/^f0100dfe:	89 f3                	mov    %esi,%ebx$/;"	l
f0100e00	obj/kern/kernel.asm	/^f0100e00:	e8 cb 0a 00 00       	call   f01018d0 <__umoddi3>$/;"	l
f0100e05	obj/kern/kernel.asm	/^f0100e05:	83 c4 14             	add    $0x14,%esp$/;"	l
f0100e08	obj/kern/kernel.asm	/^f0100e08:	0f be 84 06 c1 0b ff 	movsbl -0xf43f(%esi,%eax,1),%eax$/;"	l
f0100e0f	obj/kern/kernel.asm	/^f0100e0f:	ff $/;"	l
f0100e10	obj/kern/kernel.asm	/^f0100e10:	50                   	push   %eax$/;"	l
f0100e11	obj/kern/kernel.asm	/^f0100e11:	ff d7                	call   *%edi$/;"	l
f0100e13	obj/kern/kernel.asm	/^f0100e13:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100e16	obj/kern/kernel.asm	/^f0100e16:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0100e19	obj/kern/kernel.asm	/^f0100e19:	5b                   	pop    %ebx$/;"	l
f0100e1a	obj/kern/kernel.asm	/^f0100e1a:	5e                   	pop    %esi$/;"	l
f0100e1b	obj/kern/kernel.asm	/^f0100e1b:	5f                   	pop    %edi$/;"	l
f0100e1c	obj/kern/kernel.asm	/^f0100e1c:	5d                   	pop    %ebp$/;"	l
f0100e1d	obj/kern/kernel.asm	/^f0100e1d:	c3                   	ret    $/;"	l
f0100e1e	obj/kern/kernel.asm	/^f0100e1e:	8b 5d 14             	mov    0x14(%ebp),%ebx$/;"	l
f0100e21	obj/kern/kernel.asm	/^f0100e21:	eb be                	jmp    f0100de1 <printnum+0x88>$/;"	l
f0100e23	obj/kern/kernel.asm	/^f0100e23 <sprintputch>:$/;"	l
f0100e23	obj/kern/kernel.asm	/^f0100e23:	55                   	push   %ebp$/;"	l
f0100e24	obj/kern/kernel.asm	/^f0100e24:	89 e5                	mov    %esp,%ebp$/;"	l
f0100e26	obj/kern/kernel.asm	/^f0100e26:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0100e29	obj/kern/kernel.asm	/^f0100e29:	83 40 08 01          	addl   $0x1,0x8(%eax)$/;"	l
f0100e2d	obj/kern/kernel.asm	/^f0100e2d:	8b 10                	mov    (%eax),%edx$/;"	l
f0100e2f	obj/kern/kernel.asm	/^f0100e2f:	3b 50 04             	cmp    0x4(%eax),%edx$/;"	l
f0100e32	obj/kern/kernel.asm	/^f0100e32:	73 0a                	jae    f0100e3e <sprintputch+0x1b>$/;"	l
f0100e34	obj/kern/kernel.asm	/^f0100e34:	8d 4a 01             	lea    0x1(%edx),%ecx$/;"	l
f0100e37	obj/kern/kernel.asm	/^f0100e37:	89 08                	mov    %ecx,(%eax)$/;"	l
f0100e39	obj/kern/kernel.asm	/^f0100e39:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0100e3c	obj/kern/kernel.asm	/^f0100e3c:	88 02                	mov    %al,(%edx)$/;"	l
f0100e3e	obj/kern/kernel.asm	/^f0100e3e:	5d                   	pop    %ebp$/;"	l
f0100e3f	obj/kern/kernel.asm	/^f0100e3f:	c3                   	ret    $/;"	l
f0100e40	obj/kern/kernel.asm	/^f0100e40 <printfmt>:$/;"	l
f0100e40	obj/kern/kernel.asm	/^f0100e40:	55                   	push   %ebp$/;"	l
f0100e41	obj/kern/kernel.asm	/^f0100e41:	89 e5                	mov    %esp,%ebp$/;"	l
f0100e43	obj/kern/kernel.asm	/^f0100e43:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100e46	obj/kern/kernel.asm	/^f0100e46:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f0100e49	obj/kern/kernel.asm	/^f0100e49:	50                   	push   %eax$/;"	l
f0100e4a	obj/kern/kernel.asm	/^f0100e4a:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0100e4d	obj/kern/kernel.asm	/^f0100e4d:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0100e50	obj/kern/kernel.asm	/^f0100e50:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0100e53	obj/kern/kernel.asm	/^f0100e53:	e8 05 00 00 00       	call   f0100e5d <vprintfmt>$/;"	l
f0100e58	obj/kern/kernel.asm	/^f0100e58:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100e5b	obj/kern/kernel.asm	/^f0100e5b:	c9                   	leave  $/;"	l
f0100e5c	obj/kern/kernel.asm	/^f0100e5c:	c3                   	ret    $/;"	l
f0100e5d	obj/kern/kernel.asm	/^f0100e5d <vprintfmt>:$/;"	l
f0100e5d	obj/kern/kernel.asm	/^f0100e5d:	55                   	push   %ebp$/;"	l
f0100e5e	obj/kern/kernel.asm	/^f0100e5e:	89 e5                	mov    %esp,%ebp$/;"	l
f0100e60	obj/kern/kernel.asm	/^f0100e60:	57                   	push   %edi$/;"	l
f0100e61	obj/kern/kernel.asm	/^f0100e61:	56                   	push   %esi$/;"	l
f0100e62	obj/kern/kernel.asm	/^f0100e62:	53                   	push   %ebx$/;"	l
f0100e63	obj/kern/kernel.asm	/^f0100e63:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f0100e66	obj/kern/kernel.asm	/^f0100e66:	e8 51 f3 ff ff       	call   f01001bc <__x86.get_pc_thunk.bx>$/;"	l
f0100e6b	obj/kern/kernel.asm	/^f0100e6b:	81 c3 9d 04 01 00    	add    $0x1049d,%ebx$/;"	l
f0100e71	obj/kern/kernel.asm	/^f0100e71:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0100e74	obj/kern/kernel.asm	/^f0100e74:	8b 7d 10             	mov    0x10(%ebp),%edi$/;"	l
f0100e77	obj/kern/kernel.asm	/^f0100e77:	e9 8e 03 00 00       	jmp    f010120a <.L35+0x48>$/;"	l
f0100e7c	obj/kern/kernel.asm	/^f0100e7c:	c6 45 d4 20          	movb   $0x20,-0x2c(%ebp)$/;"	l
f0100e80	obj/kern/kernel.asm	/^f0100e80:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)$/;"	l
f0100e87	obj/kern/kernel.asm	/^f0100e87:	c7 45 d0 ff ff ff ff 	movl   $0xffffffff,-0x30(%ebp)$/;"	l
f0100e8e	obj/kern/kernel.asm	/^f0100e8e:	c7 45 e0 ff ff ff ff 	movl   $0xffffffff,-0x20(%ebp)$/;"	l
f0100e95	obj/kern/kernel.asm	/^f0100e95:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f0100e9a	obj/kern/kernel.asm	/^f0100e9a:	89 4d cc             	mov    %ecx,-0x34(%ebp)$/;"	l
f0100e9d	obj/kern/kernel.asm	/^f0100e9d:	8d 47 01             	lea    0x1(%edi),%eax$/;"	l
f0100ea0	obj/kern/kernel.asm	/^f0100ea0:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0100ea3	obj/kern/kernel.asm	/^f0100ea3:	0f b6 17             	movzbl (%edi),%edx$/;"	l
f0100ea6	obj/kern/kernel.asm	/^f0100ea6:	8d 42 dd             	lea    -0x23(%edx),%eax$/;"	l
f0100ea9	obj/kern/kernel.asm	/^f0100ea9:	3c 55                	cmp    $0x55,%al$/;"	l
f0100eab	obj/kern/kernel.asm	/^f0100eab:	0f 87 e1 03 00 00    	ja     f0101292 <.L22>$/;"	l
f0100eb1	obj/kern/kernel.asm	/^f0100eb1:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0100eb4	obj/kern/kernel.asm	/^f0100eb4:	89 d9                	mov    %ebx,%ecx$/;"	l
f0100eb6	obj/kern/kernel.asm	/^f0100eb6:	03 8c 83 50 0c ff ff 	add    -0xf3b0(%ebx,%eax,4),%ecx$/;"	l
f0100ebd	obj/kern/kernel.asm	/^f0100ebd:	ff e1                	jmp    *%ecx$/;"	l
f0100ebf	obj/kern/kernel.asm	/^f0100ebf <.L67>:$/;"	l
f0100ebf	obj/kern/kernel.asm	/^f0100ebf:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0100ec2	obj/kern/kernel.asm	/^f0100ec2:	c6 45 d4 2d          	movb   $0x2d,-0x2c(%ebp)$/;"	l
f0100ec6	obj/kern/kernel.asm	/^f0100ec6:	eb d5                	jmp    f0100e9d <vprintfmt+0x40>$/;"	l
f0100ec8	obj/kern/kernel.asm	/^f0100ec8 <.L28>:$/;"	l
f0100ec8	obj/kern/kernel.asm	/^f0100ec8:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0100ecb	obj/kern/kernel.asm	/^f0100ecb:	c6 45 d4 30          	movb   $0x30,-0x2c(%ebp)$/;"	l
f0100ecf	obj/kern/kernel.asm	/^f0100ecf:	eb cc                	jmp    f0100e9d <vprintfmt+0x40>$/;"	l
f0100ed1	obj/kern/kernel.asm	/^f0100ed1 <.L29>:$/;"	l
f0100ed1	obj/kern/kernel.asm	/^f0100ed1:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f0100ed4	obj/kern/kernel.asm	/^f0100ed4:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0100ed7	obj/kern/kernel.asm	/^f0100ed7:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100edc	obj/kern/kernel.asm	/^f0100edc:	8d 04 80             	lea    (%eax,%eax,4),%eax$/;"	l
f0100edf	obj/kern/kernel.asm	/^f0100edf:	8d 44 42 d0          	lea    -0x30(%edx,%eax,2),%eax$/;"	l
f0100ee3	obj/kern/kernel.asm	/^f0100ee3:	0f be 17             	movsbl (%edi),%edx$/;"	l
f0100ee6	obj/kern/kernel.asm	/^f0100ee6:	8d 4a d0             	lea    -0x30(%edx),%ecx$/;"	l
f0100ee9	obj/kern/kernel.asm	/^f0100ee9:	83 f9 09             	cmp    $0x9,%ecx$/;"	l
f0100eec	obj/kern/kernel.asm	/^f0100eec:	77 55                	ja     f0100f43 <.L23+0xf>$/;"	l
f0100eee	obj/kern/kernel.asm	/^f0100eee:	83 c7 01             	add    $0x1,%edi$/;"	l
f0100ef1	obj/kern/kernel.asm	/^f0100ef1:	eb e9                	jmp    f0100edc <.L29+0xb>$/;"	l
f0100ef3	obj/kern/kernel.asm	/^f0100ef3 <.L26>:$/;"	l
f0100ef3	obj/kern/kernel.asm	/^f0100ef3:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0100ef6	obj/kern/kernel.asm	/^f0100ef6:	8b 00                	mov    (%eax),%eax$/;"	l
f0100ef8	obj/kern/kernel.asm	/^f0100ef8:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0100efb	obj/kern/kernel.asm	/^f0100efb:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0100efe	obj/kern/kernel.asm	/^f0100efe:	8d 40 04             	lea    0x4(%eax),%eax$/;"	l
f0100f01	obj/kern/kernel.asm	/^f0100f01:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f0100f04	obj/kern/kernel.asm	/^f0100f04:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0100f07	obj/kern/kernel.asm	/^f0100f07:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
f0100f0b	obj/kern/kernel.asm	/^f0100f0b:	79 90                	jns    f0100e9d <vprintfmt+0x40>$/;"	l
f0100f0d	obj/kern/kernel.asm	/^f0100f0d:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f0100f10	obj/kern/kernel.asm	/^f0100f10:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f0100f13	obj/kern/kernel.asm	/^f0100f13:	c7 45 d0 ff ff ff ff 	movl   $0xffffffff,-0x30(%ebp)$/;"	l
f0100f1a	obj/kern/kernel.asm	/^f0100f1a:	eb 81                	jmp    f0100e9d <vprintfmt+0x40>$/;"	l
f0100f1c	obj/kern/kernel.asm	/^f0100f1c <.L27>:$/;"	l
f0100f1c	obj/kern/kernel.asm	/^f0100f1c:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0100f1f	obj/kern/kernel.asm	/^f0100f1f:	85 c0                	test   %eax,%eax$/;"	l
f0100f21	obj/kern/kernel.asm	/^f0100f21:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0100f26	obj/kern/kernel.asm	/^f0100f26:	0f 49 d0             	cmovns %eax,%edx$/;"	l
f0100f29	obj/kern/kernel.asm	/^f0100f29:	89 55 e0             	mov    %edx,-0x20(%ebp)$/;"	l
f0100f2c	obj/kern/kernel.asm	/^f0100f2c:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0100f2f	obj/kern/kernel.asm	/^f0100f2f:	e9 69 ff ff ff       	jmp    f0100e9d <vprintfmt+0x40>$/;"	l
f0100f34	obj/kern/kernel.asm	/^f0100f34 <.L23>:$/;"	l
f0100f34	obj/kern/kernel.asm	/^f0100f34:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0100f37	obj/kern/kernel.asm	/^f0100f37:	c7 45 d8 01 00 00 00 	movl   $0x1,-0x28(%ebp)$/;"	l
f0100f3e	obj/kern/kernel.asm	/^f0100f3e:	e9 5a ff ff ff       	jmp    f0100e9d <vprintfmt+0x40>$/;"	l
f0100f43	obj/kern/kernel.asm	/^f0100f43:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0100f46	obj/kern/kernel.asm	/^f0100f46:	eb bf                	jmp    f0100f07 <.L26+0x14>$/;"	l
f0100f48	obj/kern/kernel.asm	/^f0100f48 <.L33>:$/;"	l
f0100f48	obj/kern/kernel.asm	/^f0100f48:	83 45 cc 01          	addl   $0x1,-0x34(%ebp)$/;"	l
f0100f4c	obj/kern/kernel.asm	/^f0100f4c:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0100f4f	obj/kern/kernel.asm	/^f0100f4f:	e9 49 ff ff ff       	jmp    f0100e9d <vprintfmt+0x40>$/;"	l
f0100f54	obj/kern/kernel.asm	/^f0100f54 <.L30>:$/;"	l
f0100f54	obj/kern/kernel.asm	/^f0100f54:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0100f57	obj/kern/kernel.asm	/^f0100f57:	8d 78 04             	lea    0x4(%eax),%edi$/;"	l
f0100f5a	obj/kern/kernel.asm	/^f0100f5a:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100f5d	obj/kern/kernel.asm	/^f0100f5d:	56                   	push   %esi$/;"	l
f0100f5e	obj/kern/kernel.asm	/^f0100f5e:	ff 30                	pushl  (%eax)$/;"	l
f0100f60	obj/kern/kernel.asm	/^f0100f60:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0100f63	obj/kern/kernel.asm	/^f0100f63:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100f66	obj/kern/kernel.asm	/^f0100f66:	89 7d 14             	mov    %edi,0x14(%ebp)$/;"	l
f0100f69	obj/kern/kernel.asm	/^f0100f69:	e9 99 02 00 00       	jmp    f0101207 <.L35+0x45>$/;"	l
f0100f6e	obj/kern/kernel.asm	/^f0100f6e <.L32>:$/;"	l
f0100f6e	obj/kern/kernel.asm	/^f0100f6e:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0100f71	obj/kern/kernel.asm	/^f0100f71:	8d 78 04             	lea    0x4(%eax),%edi$/;"	l
f0100f74	obj/kern/kernel.asm	/^f0100f74:	8b 00                	mov    (%eax),%eax$/;"	l
f0100f76	obj/kern/kernel.asm	/^f0100f76:	99                   	cltd   $/;"	l
f0100f77	obj/kern/kernel.asm	/^f0100f77:	31 d0                	xor    %edx,%eax$/;"	l
f0100f79	obj/kern/kernel.asm	/^f0100f79:	29 d0                	sub    %edx,%eax$/;"	l
f0100f7b	obj/kern/kernel.asm	/^f0100f7b:	83 f8 06             	cmp    $0x6,%eax$/;"	l
f0100f7e	obj/kern/kernel.asm	/^f0100f7e:	7f 27                	jg     f0100fa7 <.L32+0x39>$/;"	l
f0100f80	obj/kern/kernel.asm	/^f0100f80:	8b 94 83 20 1d 00 00 	mov    0x1d20(%ebx,%eax,4),%edx$/;"	l
f0100f87	obj/kern/kernel.asm	/^f0100f87:	85 d2                	test   %edx,%edx$/;"	l
f0100f89	obj/kern/kernel.asm	/^f0100f89:	74 1c                	je     f0100fa7 <.L32+0x39>$/;"	l
f0100f8b	obj/kern/kernel.asm	/^f0100f8b:	52                   	push   %edx$/;"	l
f0100f8c	obj/kern/kernel.asm	/^f0100f8c:	8d 83 e2 0b ff ff    	lea    -0xf41e(%ebx),%eax$/;"	l
f0100f92	obj/kern/kernel.asm	/^f0100f92:	50                   	push   %eax$/;"	l
f0100f93	obj/kern/kernel.asm	/^f0100f93:	56                   	push   %esi$/;"	l
f0100f94	obj/kern/kernel.asm	/^f0100f94:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0100f97	obj/kern/kernel.asm	/^f0100f97:	e8 a4 fe ff ff       	call   f0100e40 <printfmt>$/;"	l
f0100f9c	obj/kern/kernel.asm	/^f0100f9c:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100f9f	obj/kern/kernel.asm	/^f0100f9f:	89 7d 14             	mov    %edi,0x14(%ebp)$/;"	l
f0100fa2	obj/kern/kernel.asm	/^f0100fa2:	e9 60 02 00 00       	jmp    f0101207 <.L35+0x45>$/;"	l
f0100fa7	obj/kern/kernel.asm	/^f0100fa7:	50                   	push   %eax$/;"	l
f0100fa8	obj/kern/kernel.asm	/^f0100fa8:	8d 83 d9 0b ff ff    	lea    -0xf427(%ebx),%eax$/;"	l
f0100fae	obj/kern/kernel.asm	/^f0100fae:	50                   	push   %eax$/;"	l
f0100faf	obj/kern/kernel.asm	/^f0100faf:	56                   	push   %esi$/;"	l
f0100fb0	obj/kern/kernel.asm	/^f0100fb0:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0100fb3	obj/kern/kernel.asm	/^f0100fb3:	e8 88 fe ff ff       	call   f0100e40 <printfmt>$/;"	l
f0100fb8	obj/kern/kernel.asm	/^f0100fb8:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100fbb	obj/kern/kernel.asm	/^f0100fbb:	89 7d 14             	mov    %edi,0x14(%ebp)$/;"	l
f0100fbe	obj/kern/kernel.asm	/^f0100fbe:	e9 44 02 00 00       	jmp    f0101207 <.L35+0x45>$/;"	l
f0100fc3	obj/kern/kernel.asm	/^f0100fc3 <.L36>:$/;"	l
f0100fc3	obj/kern/kernel.asm	/^f0100fc3:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0100fc6	obj/kern/kernel.asm	/^f0100fc6:	83 c0 04             	add    $0x4,%eax$/;"	l
f0100fc9	obj/kern/kernel.asm	/^f0100fc9:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f0100fcc	obj/kern/kernel.asm	/^f0100fcc:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0100fcf	obj/kern/kernel.asm	/^f0100fcf:	8b 38                	mov    (%eax),%edi$/;"	l
f0100fd1	obj/kern/kernel.asm	/^f0100fd1:	85 ff                	test   %edi,%edi$/;"	l
f0100fd3	obj/kern/kernel.asm	/^f0100fd3:	8d 83 d2 0b ff ff    	lea    -0xf42e(%ebx),%eax$/;"	l
f0100fd9	obj/kern/kernel.asm	/^f0100fd9:	0f 44 f8             	cmove  %eax,%edi$/;"	l
f0100fdc	obj/kern/kernel.asm	/^f0100fdc:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
f0100fe0	obj/kern/kernel.asm	/^f0100fe0:	0f 8e b5 00 00 00    	jle    f010109b <.L36+0xd8>$/;"	l
f0100fe6	obj/kern/kernel.asm	/^f0100fe6:	80 7d d4 2d          	cmpb   $0x2d,-0x2c(%ebp)$/;"	l
f0100fea	obj/kern/kernel.asm	/^f0100fea:	75 08                	jne    f0100ff4 <.L36+0x31>$/;"	l
f0100fec	obj/kern/kernel.asm	/^f0100fec:	89 75 0c             	mov    %esi,0xc(%ebp)$/;"	l
f0100fef	obj/kern/kernel.asm	/^f0100fef:	8b 75 d0             	mov    -0x30(%ebp),%esi$/;"	l
f0100ff2	obj/kern/kernel.asm	/^f0100ff2:	eb 6d                	jmp    f0101061 <.L36+0x9e>$/;"	l
f0100ff4	obj/kern/kernel.asm	/^f0100ff4:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100ff7	obj/kern/kernel.asm	/^f0100ff7:	ff 75 d0             	pushl  -0x30(%ebp)$/;"	l
f0100ffa	obj/kern/kernel.asm	/^f0100ffa:	57                   	push   %edi$/;"	l
f0100ffb	obj/kern/kernel.asm	/^f0100ffb:	e8 49 04 00 00       	call   f0101449 <strnlen>$/;"	l
f0101000	obj/kern/kernel.asm	/^f0101000:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
f0101003	obj/kern/kernel.asm	/^f0101003:	29 c2                	sub    %eax,%edx$/;"	l
f0101005	obj/kern/kernel.asm	/^f0101005:	89 55 c8             	mov    %edx,-0x38(%ebp)$/;"	l
f0101008	obj/kern/kernel.asm	/^f0101008:	83 c4 10             	add    $0x10,%esp$/;"	l
f010100b	obj/kern/kernel.asm	/^f010100b:	0f be 45 d4          	movsbl -0x2c(%ebp),%eax$/;"	l
f010100f	obj/kern/kernel.asm	/^f010100f:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f0101012	obj/kern/kernel.asm	/^f0101012:	89 7d d4             	mov    %edi,-0x2c(%ebp)$/;"	l
f0101015	obj/kern/kernel.asm	/^f0101015:	89 d7                	mov    %edx,%edi$/;"	l
f0101017	obj/kern/kernel.asm	/^f0101017:	eb 10                	jmp    f0101029 <.L36+0x66>$/;"	l
f0101019	obj/kern/kernel.asm	/^f0101019:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010101c	obj/kern/kernel.asm	/^f010101c:	56                   	push   %esi$/;"	l
f010101d	obj/kern/kernel.asm	/^f010101d:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
f0101020	obj/kern/kernel.asm	/^f0101020:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0101023	obj/kern/kernel.asm	/^f0101023:	83 ef 01             	sub    $0x1,%edi$/;"	l
f0101026	obj/kern/kernel.asm	/^f0101026:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101029	obj/kern/kernel.asm	/^f0101029:	85 ff                	test   %edi,%edi$/;"	l
f010102b	obj/kern/kernel.asm	/^f010102b:	7f ec                	jg     f0101019 <.L36+0x56>$/;"	l
f010102d	obj/kern/kernel.asm	/^f010102d:	8b 7d d4             	mov    -0x2c(%ebp),%edi$/;"	l
f0101030	obj/kern/kernel.asm	/^f0101030:	8b 55 c8             	mov    -0x38(%ebp),%edx$/;"	l
f0101033	obj/kern/kernel.asm	/^f0101033:	85 d2                	test   %edx,%edx$/;"	l
f0101035	obj/kern/kernel.asm	/^f0101035:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010103a	obj/kern/kernel.asm	/^f010103a:	0f 49 c2             	cmovns %edx,%eax$/;"	l
f010103d	obj/kern/kernel.asm	/^f010103d:	29 c2                	sub    %eax,%edx$/;"	l
f010103f	obj/kern/kernel.asm	/^f010103f:	89 55 e0             	mov    %edx,-0x20(%ebp)$/;"	l
f0101042	obj/kern/kernel.asm	/^f0101042:	89 75 0c             	mov    %esi,0xc(%ebp)$/;"	l
f0101045	obj/kern/kernel.asm	/^f0101045:	8b 75 d0             	mov    -0x30(%ebp),%esi$/;"	l
f0101048	obj/kern/kernel.asm	/^f0101048:	eb 17                	jmp    f0101061 <.L36+0x9e>$/;"	l
f010104a	obj/kern/kernel.asm	/^f010104a:	83 7d d8 00          	cmpl   $0x0,-0x28(%ebp)$/;"	l
f010104e	obj/kern/kernel.asm	/^f010104e:	75 30                	jne    f0101080 <.L36+0xbd>$/;"	l
f0101050	obj/kern/kernel.asm	/^f0101050:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101053	obj/kern/kernel.asm	/^f0101053:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0101056	obj/kern/kernel.asm	/^f0101056:	50                   	push   %eax$/;"	l
f0101057	obj/kern/kernel.asm	/^f0101057:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f010105a	obj/kern/kernel.asm	/^f010105a:	83 c4 10             	add    $0x10,%esp$/;"	l
f010105d	obj/kern/kernel.asm	/^f010105d:	83 6d e0 01          	subl   $0x1,-0x20(%ebp)$/;"	l
f0101061	obj/kern/kernel.asm	/^f0101061:	83 c7 01             	add    $0x1,%edi$/;"	l
f0101064	obj/kern/kernel.asm	/^f0101064:	0f b6 57 ff          	movzbl -0x1(%edi),%edx$/;"	l
f0101068	obj/kern/kernel.asm	/^f0101068:	0f be c2             	movsbl %dl,%eax$/;"	l
f010106b	obj/kern/kernel.asm	/^f010106b:	85 c0                	test   %eax,%eax$/;"	l
f010106d	obj/kern/kernel.asm	/^f010106d:	74 52                	je     f01010c1 <.L36+0xfe>$/;"	l
f010106f	obj/kern/kernel.asm	/^f010106f:	85 f6                	test   %esi,%esi$/;"	l
f0101071	obj/kern/kernel.asm	/^f0101071:	78 d7                	js     f010104a <.L36+0x87>$/;"	l
f0101073	obj/kern/kernel.asm	/^f0101073:	83 ee 01             	sub    $0x1,%esi$/;"	l
f0101076	obj/kern/kernel.asm	/^f0101076:	79 d2                	jns    f010104a <.L36+0x87>$/;"	l
f0101078	obj/kern/kernel.asm	/^f0101078:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f010107b	obj/kern/kernel.asm	/^f010107b:	8b 7d e0             	mov    -0x20(%ebp),%edi$/;"	l
f010107e	obj/kern/kernel.asm	/^f010107e:	eb 32                	jmp    f01010b2 <.L36+0xef>$/;"	l
f0101080	obj/kern/kernel.asm	/^f0101080:	0f be d2             	movsbl %dl,%edx$/;"	l
f0101083	obj/kern/kernel.asm	/^f0101083:	83 ea 20             	sub    $0x20,%edx$/;"	l
f0101086	obj/kern/kernel.asm	/^f0101086:	83 fa 5e             	cmp    $0x5e,%edx$/;"	l
f0101089	obj/kern/kernel.asm	/^f0101089:	76 c5                	jbe    f0101050 <.L36+0x8d>$/;"	l
f010108b	obj/kern/kernel.asm	/^f010108b:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010108e	obj/kern/kernel.asm	/^f010108e:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0101091	obj/kern/kernel.asm	/^f0101091:	6a 3f                	push   $0x3f$/;"	l
f0101093	obj/kern/kernel.asm	/^f0101093:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0101096	obj/kern/kernel.asm	/^f0101096:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101099	obj/kern/kernel.asm	/^f0101099:	eb c2                	jmp    f010105d <.L36+0x9a>$/;"	l
f010109b	obj/kern/kernel.asm	/^f010109b:	89 75 0c             	mov    %esi,0xc(%ebp)$/;"	l
f010109e	obj/kern/kernel.asm	/^f010109e:	8b 75 d0             	mov    -0x30(%ebp),%esi$/;"	l
f01010a1	obj/kern/kernel.asm	/^f01010a1:	eb be                	jmp    f0101061 <.L36+0x9e>$/;"	l
f01010a3	obj/kern/kernel.asm	/^f01010a3:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01010a6	obj/kern/kernel.asm	/^f01010a6:	56                   	push   %esi$/;"	l
f01010a7	obj/kern/kernel.asm	/^f01010a7:	6a 20                	push   $0x20$/;"	l
f01010a9	obj/kern/kernel.asm	/^f01010a9:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f01010ac	obj/kern/kernel.asm	/^f01010ac:	83 ef 01             	sub    $0x1,%edi$/;"	l
f01010af	obj/kern/kernel.asm	/^f01010af:	83 c4 10             	add    $0x10,%esp$/;"	l
f01010b2	obj/kern/kernel.asm	/^f01010b2:	85 ff                	test   %edi,%edi$/;"	l
f01010b4	obj/kern/kernel.asm	/^f01010b4:	7f ed                	jg     f01010a3 <.L36+0xe0>$/;"	l
f01010b6	obj/kern/kernel.asm	/^f01010b6:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
f01010b9	obj/kern/kernel.asm	/^f01010b9:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f01010bc	obj/kern/kernel.asm	/^f01010bc:	e9 46 01 00 00       	jmp    f0101207 <.L35+0x45>$/;"	l
f01010c1	obj/kern/kernel.asm	/^f01010c1:	8b 7d e0             	mov    -0x20(%ebp),%edi$/;"	l
f01010c4	obj/kern/kernel.asm	/^f01010c4:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f01010c7	obj/kern/kernel.asm	/^f01010c7:	eb e9                	jmp    f01010b2 <.L36+0xef>$/;"	l
f01010c9	obj/kern/kernel.asm	/^f01010c9 <.L31>:$/;"	l
f01010c9	obj/kern/kernel.asm	/^f01010c9:	8b 4d cc             	mov    -0x34(%ebp),%ecx$/;"	l
f01010cc	obj/kern/kernel.asm	/^f01010cc:	83 f9 01             	cmp    $0x1,%ecx$/;"	l
f01010cf	obj/kern/kernel.asm	/^f01010cf:	7e 40                	jle    f0101111 <.L31+0x48>$/;"	l
f01010d1	obj/kern/kernel.asm	/^f01010d1:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01010d4	obj/kern/kernel.asm	/^f01010d4:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
f01010d7	obj/kern/kernel.asm	/^f01010d7:	8b 00                	mov    (%eax),%eax$/;"	l
f01010d9	obj/kern/kernel.asm	/^f01010d9:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f01010dc	obj/kern/kernel.asm	/^f01010dc:	89 55 dc             	mov    %edx,-0x24(%ebp)$/;"	l
f01010df	obj/kern/kernel.asm	/^f01010df:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01010e2	obj/kern/kernel.asm	/^f01010e2:	8d 40 08             	lea    0x8(%eax),%eax$/;"	l
f01010e5	obj/kern/kernel.asm	/^f01010e5:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f01010e8	obj/kern/kernel.asm	/^f01010e8:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
f01010ec	obj/kern/kernel.asm	/^f01010ec:	79 55                	jns    f0101143 <.L31+0x7a>$/;"	l
f01010ee	obj/kern/kernel.asm	/^f01010ee:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01010f1	obj/kern/kernel.asm	/^f01010f1:	56                   	push   %esi$/;"	l
f01010f2	obj/kern/kernel.asm	/^f01010f2:	6a 2d                	push   $0x2d$/;"	l
f01010f4	obj/kern/kernel.asm	/^f01010f4:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f01010f7	obj/kern/kernel.asm	/^f01010f7:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f01010fa	obj/kern/kernel.asm	/^f01010fa:	8b 4d dc             	mov    -0x24(%ebp),%ecx$/;"	l
f01010fd	obj/kern/kernel.asm	/^f01010fd:	f7 da                	neg    %edx$/;"	l
f01010ff	obj/kern/kernel.asm	/^f01010ff:	83 d1 00             	adc    $0x0,%ecx$/;"	l
f0101102	obj/kern/kernel.asm	/^f0101102:	f7 d9                	neg    %ecx$/;"	l
f0101104	obj/kern/kernel.asm	/^f0101104:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101107	obj/kern/kernel.asm	/^f0101107:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f010110c	obj/kern/kernel.asm	/^f010110c:	e9 db 00 00 00       	jmp    f01011ec <.L35+0x2a>$/;"	l
f0101111	obj/kern/kernel.asm	/^f0101111:	85 c9                	test   %ecx,%ecx$/;"	l
f0101113	obj/kern/kernel.asm	/^f0101113:	75 17                	jne    f010112c <.L31+0x63>$/;"	l
f0101115	obj/kern/kernel.asm	/^f0101115:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0101118	obj/kern/kernel.asm	/^f0101118:	8b 00                	mov    (%eax),%eax$/;"	l
f010111a	obj/kern/kernel.asm	/^f010111a:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f010111d	obj/kern/kernel.asm	/^f010111d:	99                   	cltd   $/;"	l
f010111e	obj/kern/kernel.asm	/^f010111e:	89 55 dc             	mov    %edx,-0x24(%ebp)$/;"	l
f0101121	obj/kern/kernel.asm	/^f0101121:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0101124	obj/kern/kernel.asm	/^f0101124:	8d 40 04             	lea    0x4(%eax),%eax$/;"	l
f0101127	obj/kern/kernel.asm	/^f0101127:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f010112a	obj/kern/kernel.asm	/^f010112a:	eb bc                	jmp    f01010e8 <.L31+0x1f>$/;"	l
f010112c	obj/kern/kernel.asm	/^f010112c:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010112f	obj/kern/kernel.asm	/^f010112f:	8b 00                	mov    (%eax),%eax$/;"	l
f0101131	obj/kern/kernel.asm	/^f0101131:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0101134	obj/kern/kernel.asm	/^f0101134:	99                   	cltd   $/;"	l
f0101135	obj/kern/kernel.asm	/^f0101135:	89 55 dc             	mov    %edx,-0x24(%ebp)$/;"	l
f0101138	obj/kern/kernel.asm	/^f0101138:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010113b	obj/kern/kernel.asm	/^f010113b:	8d 40 04             	lea    0x4(%eax),%eax$/;"	l
f010113e	obj/kern/kernel.asm	/^f010113e:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f0101141	obj/kern/kernel.asm	/^f0101141:	eb a5                	jmp    f01010e8 <.L31+0x1f>$/;"	l
f0101143	obj/kern/kernel.asm	/^f0101143:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f0101146	obj/kern/kernel.asm	/^f0101146:	8b 4d dc             	mov    -0x24(%ebp),%ecx$/;"	l
f0101149	obj/kern/kernel.asm	/^f0101149:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f010114e	obj/kern/kernel.asm	/^f010114e:	e9 99 00 00 00       	jmp    f01011ec <.L35+0x2a>$/;"	l
f0101153	obj/kern/kernel.asm	/^f0101153 <.L37>:$/;"	l
f0101153	obj/kern/kernel.asm	/^f0101153:	8b 4d cc             	mov    -0x34(%ebp),%ecx$/;"	l
f0101156	obj/kern/kernel.asm	/^f0101156:	83 f9 01             	cmp    $0x1,%ecx$/;"	l
f0101159	obj/kern/kernel.asm	/^f0101159:	7e 15                	jle    f0101170 <.L37+0x1d>$/;"	l
f010115b	obj/kern/kernel.asm	/^f010115b:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010115e	obj/kern/kernel.asm	/^f010115e:	8b 10                	mov    (%eax),%edx$/;"	l
f0101160	obj/kern/kernel.asm	/^f0101160:	8b 48 04             	mov    0x4(%eax),%ecx$/;"	l
f0101163	obj/kern/kernel.asm	/^f0101163:	8d 40 08             	lea    0x8(%eax),%eax$/;"	l
f0101166	obj/kern/kernel.asm	/^f0101166:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f0101169	obj/kern/kernel.asm	/^f0101169:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f010116e	obj/kern/kernel.asm	/^f010116e:	eb 7c                	jmp    f01011ec <.L35+0x2a>$/;"	l
f0101170	obj/kern/kernel.asm	/^f0101170:	85 c9                	test   %ecx,%ecx$/;"	l
f0101172	obj/kern/kernel.asm	/^f0101172:	75 17                	jne    f010118b <.L37+0x38>$/;"	l
f0101174	obj/kern/kernel.asm	/^f0101174:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0101177	obj/kern/kernel.asm	/^f0101177:	8b 10                	mov    (%eax),%edx$/;"	l
f0101179	obj/kern/kernel.asm	/^f0101179:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f010117e	obj/kern/kernel.asm	/^f010117e:	8d 40 04             	lea    0x4(%eax),%eax$/;"	l
f0101181	obj/kern/kernel.asm	/^f0101181:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f0101184	obj/kern/kernel.asm	/^f0101184:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f0101189	obj/kern/kernel.asm	/^f0101189:	eb 61                	jmp    f01011ec <.L35+0x2a>$/;"	l
f010118b	obj/kern/kernel.asm	/^f010118b:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010118e	obj/kern/kernel.asm	/^f010118e:	8b 10                	mov    (%eax),%edx$/;"	l
f0101190	obj/kern/kernel.asm	/^f0101190:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f0101195	obj/kern/kernel.asm	/^f0101195:	8d 40 04             	lea    0x4(%eax),%eax$/;"	l
f0101198	obj/kern/kernel.asm	/^f0101198:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f010119b	obj/kern/kernel.asm	/^f010119b:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f01011a0	obj/kern/kernel.asm	/^f01011a0:	eb 4a                	jmp    f01011ec <.L35+0x2a>$/;"	l
f01011a2	obj/kern/kernel.asm	/^f01011a2 <.L34>:$/;"	l
f01011a2	obj/kern/kernel.asm	/^f01011a2:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01011a5	obj/kern/kernel.asm	/^f01011a5:	56                   	push   %esi$/;"	l
f01011a6	obj/kern/kernel.asm	/^f01011a6:	6a 58                	push   $0x58$/;"	l
f01011a8	obj/kern/kernel.asm	/^f01011a8:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f01011ab	obj/kern/kernel.asm	/^f01011ab:	83 c4 08             	add    $0x8,%esp$/;"	l
f01011ae	obj/kern/kernel.asm	/^f01011ae:	56                   	push   %esi$/;"	l
f01011af	obj/kern/kernel.asm	/^f01011af:	6a 58                	push   $0x58$/;"	l
f01011b1	obj/kern/kernel.asm	/^f01011b1:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f01011b4	obj/kern/kernel.asm	/^f01011b4:	83 c4 08             	add    $0x8,%esp$/;"	l
f01011b7	obj/kern/kernel.asm	/^f01011b7:	56                   	push   %esi$/;"	l
f01011b8	obj/kern/kernel.asm	/^f01011b8:	6a 58                	push   $0x58$/;"	l
f01011ba	obj/kern/kernel.asm	/^f01011ba:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f01011bd	obj/kern/kernel.asm	/^f01011bd:	83 c4 10             	add    $0x10,%esp$/;"	l
f01011c0	obj/kern/kernel.asm	/^f01011c0:	eb 45                	jmp    f0101207 <.L35+0x45>$/;"	l
f01011c2	obj/kern/kernel.asm	/^f01011c2 <.L35>:$/;"	l
f01011c2	obj/kern/kernel.asm	/^f01011c2:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01011c5	obj/kern/kernel.asm	/^f01011c5:	56                   	push   %esi$/;"	l
f01011c6	obj/kern/kernel.asm	/^f01011c6:	6a 30                	push   $0x30$/;"	l
f01011c8	obj/kern/kernel.asm	/^f01011c8:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f01011cb	obj/kern/kernel.asm	/^f01011cb:	83 c4 08             	add    $0x8,%esp$/;"	l
f01011ce	obj/kern/kernel.asm	/^f01011ce:	56                   	push   %esi$/;"	l
f01011cf	obj/kern/kernel.asm	/^f01011cf:	6a 78                	push   $0x78$/;"	l
f01011d1	obj/kern/kernel.asm	/^f01011d1:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f01011d4	obj/kern/kernel.asm	/^f01011d4:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01011d7	obj/kern/kernel.asm	/^f01011d7:	8b 10                	mov    (%eax),%edx$/;"	l
f01011d9	obj/kern/kernel.asm	/^f01011d9:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f01011de	obj/kern/kernel.asm	/^f01011de:	83 c4 10             	add    $0x10,%esp$/;"	l
f01011e1	obj/kern/kernel.asm	/^f01011e1:	8d 40 04             	lea    0x4(%eax),%eax$/;"	l
f01011e4	obj/kern/kernel.asm	/^f01011e4:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f01011e7	obj/kern/kernel.asm	/^f01011e7:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
f01011ec	obj/kern/kernel.asm	/^f01011ec:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01011ef	obj/kern/kernel.asm	/^f01011ef:	0f be 7d d4          	movsbl -0x2c(%ebp),%edi$/;"	l
f01011f3	obj/kern/kernel.asm	/^f01011f3:	57                   	push   %edi$/;"	l
f01011f4	obj/kern/kernel.asm	/^f01011f4:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
f01011f7	obj/kern/kernel.asm	/^f01011f7:	50                   	push   %eax$/;"	l
f01011f8	obj/kern/kernel.asm	/^f01011f8:	51                   	push   %ecx$/;"	l
f01011f9	obj/kern/kernel.asm	/^f01011f9:	52                   	push   %edx$/;"	l
f01011fa	obj/kern/kernel.asm	/^f01011fa:	89 f2                	mov    %esi,%edx$/;"	l
f01011fc	obj/kern/kernel.asm	/^f01011fc:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01011ff	obj/kern/kernel.asm	/^f01011ff:	e8 55 fb ff ff       	call   f0100d59 <printnum>$/;"	l
f0101204	obj/kern/kernel.asm	/^f0101204:	83 c4 20             	add    $0x20,%esp$/;"	l
f0101207	obj/kern/kernel.asm	/^f0101207:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f010120a	obj/kern/kernel.asm	/^f010120a:	83 c7 01             	add    $0x1,%edi$/;"	l
f010120d	obj/kern/kernel.asm	/^f010120d:	0f b6 47 ff          	movzbl -0x1(%edi),%eax$/;"	l
f0101211	obj/kern/kernel.asm	/^f0101211:	83 f8 25             	cmp    $0x25,%eax$/;"	l
f0101214	obj/kern/kernel.asm	/^f0101214:	0f 84 62 fc ff ff    	je     f0100e7c <vprintfmt+0x1f>$/;"	l
f010121a	obj/kern/kernel.asm	/^f010121a:	85 c0                	test   %eax,%eax$/;"	l
f010121c	obj/kern/kernel.asm	/^f010121c:	0f 84 91 00 00 00    	je     f01012b3 <.L22+0x21>$/;"	l
f0101222	obj/kern/kernel.asm	/^f0101222:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101225	obj/kern/kernel.asm	/^f0101225:	56                   	push   %esi$/;"	l
f0101226	obj/kern/kernel.asm	/^f0101226:	50                   	push   %eax$/;"	l
f0101227	obj/kern/kernel.asm	/^f0101227:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f010122a	obj/kern/kernel.asm	/^f010122a:	83 c4 10             	add    $0x10,%esp$/;"	l
f010122d	obj/kern/kernel.asm	/^f010122d:	eb db                	jmp    f010120a <.L35+0x48>$/;"	l
f010122f	obj/kern/kernel.asm	/^f010122f <.L38>:$/;"	l
f010122f	obj/kern/kernel.asm	/^f010122f:	8b 4d cc             	mov    -0x34(%ebp),%ecx$/;"	l
f0101232	obj/kern/kernel.asm	/^f0101232:	83 f9 01             	cmp    $0x1,%ecx$/;"	l
f0101235	obj/kern/kernel.asm	/^f0101235:	7e 15                	jle    f010124c <.L38+0x1d>$/;"	l
f0101237	obj/kern/kernel.asm	/^f0101237:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010123a	obj/kern/kernel.asm	/^f010123a:	8b 10                	mov    (%eax),%edx$/;"	l
f010123c	obj/kern/kernel.asm	/^f010123c:	8b 48 04             	mov    0x4(%eax),%ecx$/;"	l
f010123f	obj/kern/kernel.asm	/^f010123f:	8d 40 08             	lea    0x8(%eax),%eax$/;"	l
f0101242	obj/kern/kernel.asm	/^f0101242:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f0101245	obj/kern/kernel.asm	/^f0101245:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
f010124a	obj/kern/kernel.asm	/^f010124a:	eb a0                	jmp    f01011ec <.L35+0x2a>$/;"	l
f010124c	obj/kern/kernel.asm	/^f010124c:	85 c9                	test   %ecx,%ecx$/;"	l
f010124e	obj/kern/kernel.asm	/^f010124e:	75 17                	jne    f0101267 <.L38+0x38>$/;"	l
f0101250	obj/kern/kernel.asm	/^f0101250:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0101253	obj/kern/kernel.asm	/^f0101253:	8b 10                	mov    (%eax),%edx$/;"	l
f0101255	obj/kern/kernel.asm	/^f0101255:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f010125a	obj/kern/kernel.asm	/^f010125a:	8d 40 04             	lea    0x4(%eax),%eax$/;"	l
f010125d	obj/kern/kernel.asm	/^f010125d:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f0101260	obj/kern/kernel.asm	/^f0101260:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
f0101265	obj/kern/kernel.asm	/^f0101265:	eb 85                	jmp    f01011ec <.L35+0x2a>$/;"	l
f0101267	obj/kern/kernel.asm	/^f0101267:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010126a	obj/kern/kernel.asm	/^f010126a:	8b 10                	mov    (%eax),%edx$/;"	l
f010126c	obj/kern/kernel.asm	/^f010126c:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f0101271	obj/kern/kernel.asm	/^f0101271:	8d 40 04             	lea    0x4(%eax),%eax$/;"	l
f0101274	obj/kern/kernel.asm	/^f0101274:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f0101277	obj/kern/kernel.asm	/^f0101277:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
f010127c	obj/kern/kernel.asm	/^f010127c:	e9 6b ff ff ff       	jmp    f01011ec <.L35+0x2a>$/;"	l
f0101281	obj/kern/kernel.asm	/^f0101281 <.L25>:$/;"	l
f0101281	obj/kern/kernel.asm	/^f0101281:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101284	obj/kern/kernel.asm	/^f0101284:	56                   	push   %esi$/;"	l
f0101285	obj/kern/kernel.asm	/^f0101285:	6a 25                	push   $0x25$/;"	l
f0101287	obj/kern/kernel.asm	/^f0101287:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f010128a	obj/kern/kernel.asm	/^f010128a:	83 c4 10             	add    $0x10,%esp$/;"	l
f010128d	obj/kern/kernel.asm	/^f010128d:	e9 75 ff ff ff       	jmp    f0101207 <.L35+0x45>$/;"	l
f0101292	obj/kern/kernel.asm	/^f0101292 <.L22>:$/;"	l
f0101292	obj/kern/kernel.asm	/^f0101292:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101295	obj/kern/kernel.asm	/^f0101295:	56                   	push   %esi$/;"	l
f0101296	obj/kern/kernel.asm	/^f0101296:	6a 25                	push   $0x25$/;"	l
f0101298	obj/kern/kernel.asm	/^f0101298:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f010129b	obj/kern/kernel.asm	/^f010129b:	83 c4 10             	add    $0x10,%esp$/;"	l
f010129e	obj/kern/kernel.asm	/^f010129e:	89 f8                	mov    %edi,%eax$/;"	l
f01012a0	obj/kern/kernel.asm	/^f01012a0:	eb 03                	jmp    f01012a5 <.L22+0x13>$/;"	l
f01012a2	obj/kern/kernel.asm	/^f01012a2:	83 e8 01             	sub    $0x1,%eax$/;"	l
f01012a5	obj/kern/kernel.asm	/^f01012a5:	80 78 ff 25          	cmpb   $0x25,-0x1(%eax)$/;"	l
f01012a9	obj/kern/kernel.asm	/^f01012a9:	75 f7                	jne    f01012a2 <.L22+0x10>$/;"	l
f01012ab	obj/kern/kernel.asm	/^f01012ab:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f01012ae	obj/kern/kernel.asm	/^f01012ae:	e9 54 ff ff ff       	jmp    f0101207 <.L35+0x45>$/;"	l
f01012b3	obj/kern/kernel.asm	/^f01012b3:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f01012b6	obj/kern/kernel.asm	/^f01012b6:	5b                   	pop    %ebx$/;"	l
f01012b7	obj/kern/kernel.asm	/^f01012b7:	5e                   	pop    %esi$/;"	l
f01012b8	obj/kern/kernel.asm	/^f01012b8:	5f                   	pop    %edi$/;"	l
f01012b9	obj/kern/kernel.asm	/^f01012b9:	5d                   	pop    %ebp$/;"	l
f01012ba	obj/kern/kernel.asm	/^f01012ba:	c3                   	ret    $/;"	l
f01012bb	obj/kern/kernel.asm	/^f01012bb <vsnprintf>:$/;"	l
f01012bb	obj/kern/kernel.asm	/^f01012bb:	55                   	push   %ebp$/;"	l
f01012bc	obj/kern/kernel.asm	/^f01012bc:	89 e5                	mov    %esp,%ebp$/;"	l
f01012be	obj/kern/kernel.asm	/^f01012be:	53                   	push   %ebx$/;"	l
f01012bf	obj/kern/kernel.asm	/^f01012bf:	83 ec 14             	sub    $0x14,%esp$/;"	l
f01012c2	obj/kern/kernel.asm	/^f01012c2:	e8 f5 ee ff ff       	call   f01001bc <__x86.get_pc_thunk.bx>$/;"	l
f01012c7	obj/kern/kernel.asm	/^f01012c7:	81 c3 41 00 01 00    	add    $0x10041,%ebx$/;"	l
f01012cd	obj/kern/kernel.asm	/^f01012cd:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01012d0	obj/kern/kernel.asm	/^f01012d0:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f01012d3	obj/kern/kernel.asm	/^f01012d3:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f01012d6	obj/kern/kernel.asm	/^f01012d6:	8d 4c 10 ff          	lea    -0x1(%eax,%edx,1),%ecx$/;"	l
f01012da	obj/kern/kernel.asm	/^f01012da:	89 4d f0             	mov    %ecx,-0x10(%ebp)$/;"	l
f01012dd	obj/kern/kernel.asm	/^f01012dd:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f01012e4	obj/kern/kernel.asm	/^f01012e4:	85 c0                	test   %eax,%eax$/;"	l
f01012e6	obj/kern/kernel.asm	/^f01012e6:	74 2b                	je     f0101313 <vsnprintf+0x58>$/;"	l
f01012e8	obj/kern/kernel.asm	/^f01012e8:	85 d2                	test   %edx,%edx$/;"	l
f01012ea	obj/kern/kernel.asm	/^f01012ea:	7e 27                	jle    f0101313 <vsnprintf+0x58>$/;"	l
f01012ec	obj/kern/kernel.asm	/^f01012ec:	ff 75 14             	pushl  0x14(%ebp)$/;"	l
f01012ef	obj/kern/kernel.asm	/^f01012ef:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f01012f2	obj/kern/kernel.asm	/^f01012f2:	8d 45 ec             	lea    -0x14(%ebp),%eax$/;"	l
f01012f5	obj/kern/kernel.asm	/^f01012f5:	50                   	push   %eax$/;"	l
f01012f6	obj/kern/kernel.asm	/^f01012f6:	8d 83 1b fb fe ff    	lea    -0x104e5(%ebx),%eax$/;"	l
f01012fc	obj/kern/kernel.asm	/^f01012fc:	50                   	push   %eax$/;"	l
f01012fd	obj/kern/kernel.asm	/^f01012fd:	e8 5b fb ff ff       	call   f0100e5d <vprintfmt>$/;"	l
f0101302	obj/kern/kernel.asm	/^f0101302:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0101305	obj/kern/kernel.asm	/^f0101305:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
f0101308	obj/kern/kernel.asm	/^f0101308:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f010130b	obj/kern/kernel.asm	/^f010130b:	83 c4 10             	add    $0x10,%esp$/;"	l
f010130e	obj/kern/kernel.asm	/^f010130e:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f0101311	obj/kern/kernel.asm	/^f0101311:	c9                   	leave  $/;"	l
f0101312	obj/kern/kernel.asm	/^f0101312:	c3                   	ret    $/;"	l
f0101313	obj/kern/kernel.asm	/^f0101313:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0101318	obj/kern/kernel.asm	/^f0101318:	eb f4                	jmp    f010130e <vsnprintf+0x53>$/;"	l
f010131a	obj/kern/kernel.asm	/^f010131a <snprintf>:$/;"	l
f010131a	obj/kern/kernel.asm	/^f010131a:	55                   	push   %ebp$/;"	l
f010131b	obj/kern/kernel.asm	/^f010131b:	89 e5                	mov    %esp,%ebp$/;"	l
f010131d	obj/kern/kernel.asm	/^f010131d:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101320	obj/kern/kernel.asm	/^f0101320:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f0101323	obj/kern/kernel.asm	/^f0101323:	50                   	push   %eax$/;"	l
f0101324	obj/kern/kernel.asm	/^f0101324:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0101327	obj/kern/kernel.asm	/^f0101327:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f010132a	obj/kern/kernel.asm	/^f010132a:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f010132d	obj/kern/kernel.asm	/^f010132d:	e8 89 ff ff ff       	call   f01012bb <vsnprintf>$/;"	l
f0101332	obj/kern/kernel.asm	/^f0101332:	c9                   	leave  $/;"	l
f0101333	obj/kern/kernel.asm	/^f0101333:	c3                   	ret    $/;"	l
f0101334	obj/kern/kernel.asm	/^f0101334 <readline>:$/;"	l
f0101334	obj/kern/kernel.asm	/^f0101334:	55                   	push   %ebp$/;"	l
f0101335	obj/kern/kernel.asm	/^f0101335:	89 e5                	mov    %esp,%ebp$/;"	l
f0101337	obj/kern/kernel.asm	/^f0101337:	57                   	push   %edi$/;"	l
f0101338	obj/kern/kernel.asm	/^f0101338:	56                   	push   %esi$/;"	l
f0101339	obj/kern/kernel.asm	/^f0101339:	53                   	push   %ebx$/;"	l
f010133a	obj/kern/kernel.asm	/^f010133a:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f010133d	obj/kern/kernel.asm	/^f010133d:	e8 7a ee ff ff       	call   f01001bc <__x86.get_pc_thunk.bx>$/;"	l
f0101342	obj/kern/kernel.asm	/^f0101342:	81 c3 c6 ff 00 00    	add    $0xffc6,%ebx$/;"	l
f0101348	obj/kern/kernel.asm	/^f0101348:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010134b	obj/kern/kernel.asm	/^f010134b:	85 c0                	test   %eax,%eax$/;"	l
f010134d	obj/kern/kernel.asm	/^f010134d:	74 13                	je     f0101362 <readline+0x2e>$/;"	l
f010134f	obj/kern/kernel.asm	/^f010134f:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101352	obj/kern/kernel.asm	/^f0101352:	50                   	push   %eax$/;"	l
f0101353	obj/kern/kernel.asm	/^f0101353:	8d 83 e2 0b ff ff    	lea    -0xf41e(%ebx),%eax$/;"	l
f0101359	obj/kern/kernel.asm	/^f0101359:	50                   	push   %eax$/;"	l
f010135a	obj/kern/kernel.asm	/^f010135a:	e8 ea f6 ff ff       	call   f0100a49 <cprintf>$/;"	l
f010135f	obj/kern/kernel.asm	/^f010135f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101362	obj/kern/kernel.asm	/^f0101362:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101365	obj/kern/kernel.asm	/^f0101365:	6a 00                	push   $0x0$/;"	l
f0101367	obj/kern/kernel.asm	/^f0101367:	e8 e8 f3 ff ff       	call   f0100754 <iscons>$/;"	l
f010136c	obj/kern/kernel.asm	/^f010136c:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f010136f	obj/kern/kernel.asm	/^f010136f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101372	obj/kern/kernel.asm	/^f0101372:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f0101377	obj/kern/kernel.asm	/^f0101377:	eb 46                	jmp    f01013bf <readline+0x8b>$/;"	l
f0101379	obj/kern/kernel.asm	/^f0101379:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010137c	obj/kern/kernel.asm	/^f010137c:	50                   	push   %eax$/;"	l
f010137d	obj/kern/kernel.asm	/^f010137d:	8d 83 a8 0d ff ff    	lea    -0xf258(%ebx),%eax$/;"	l
f0101383	obj/kern/kernel.asm	/^f0101383:	50                   	push   %eax$/;"	l
f0101384	obj/kern/kernel.asm	/^f0101384:	e8 c0 f6 ff ff       	call   f0100a49 <cprintf>$/;"	l
f0101389	obj/kern/kernel.asm	/^f0101389:	83 c4 10             	add    $0x10,%esp$/;"	l
f010138c	obj/kern/kernel.asm	/^f010138c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101391	obj/kern/kernel.asm	/^f0101391:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0101394	obj/kern/kernel.asm	/^f0101394:	5b                   	pop    %ebx$/;"	l
f0101395	obj/kern/kernel.asm	/^f0101395:	5e                   	pop    %esi$/;"	l
f0101396	obj/kern/kernel.asm	/^f0101396:	5f                   	pop    %edi$/;"	l
f0101397	obj/kern/kernel.asm	/^f0101397:	5d                   	pop    %ebp$/;"	l
f0101398	obj/kern/kernel.asm	/^f0101398:	c3                   	ret    $/;"	l
f0101399	obj/kern/kernel.asm	/^f0101399:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
f010139d	obj/kern/kernel.asm	/^f010139d:	75 05                	jne    f01013a4 <readline+0x70>$/;"	l
f010139f	obj/kern/kernel.asm	/^f010139f:	83 ef 01             	sub    $0x1,%edi$/;"	l
f01013a2	obj/kern/kernel.asm	/^f01013a2:	eb 1b                	jmp    f01013bf <readline+0x8b>$/;"	l
f01013a4	obj/kern/kernel.asm	/^f01013a4:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01013a7	obj/kern/kernel.asm	/^f01013a7:	6a 08                	push   $0x8$/;"	l
f01013a9	obj/kern/kernel.asm	/^f01013a9:	e8 85 f3 ff ff       	call   f0100733 <cputchar>$/;"	l
f01013ae	obj/kern/kernel.asm	/^f01013ae:	83 c4 10             	add    $0x10,%esp$/;"	l
f01013b1	obj/kern/kernel.asm	/^f01013b1:	eb ec                	jmp    f010139f <readline+0x6b>$/;"	l
f01013b3	obj/kern/kernel.asm	/^f01013b3:	89 f0                	mov    %esi,%eax$/;"	l
f01013b5	obj/kern/kernel.asm	/^f01013b5:	88 84 3b 98 1f 00 00 	mov    %al,0x1f98(%ebx,%edi,1)$/;"	l
f01013bc	obj/kern/kernel.asm	/^f01013bc:	8d 7f 01             	lea    0x1(%edi),%edi$/;"	l
f01013bf	obj/kern/kernel.asm	/^f01013bf:	e8 7f f3 ff ff       	call   f0100743 <getchar>$/;"	l
f01013c4	obj/kern/kernel.asm	/^f01013c4:	89 c6                	mov    %eax,%esi$/;"	l
f01013c6	obj/kern/kernel.asm	/^f01013c6:	85 c0                	test   %eax,%eax$/;"	l
f01013c8	obj/kern/kernel.asm	/^f01013c8:	78 af                	js     f0101379 <readline+0x45>$/;"	l
f01013ca	obj/kern/kernel.asm	/^f01013ca:	83 f8 08             	cmp    $0x8,%eax$/;"	l
f01013cd	obj/kern/kernel.asm	/^f01013cd:	0f 94 c2             	sete   %dl$/;"	l
f01013d0	obj/kern/kernel.asm	/^f01013d0:	83 f8 7f             	cmp    $0x7f,%eax$/;"	l
f01013d3	obj/kern/kernel.asm	/^f01013d3:	0f 94 c0             	sete   %al$/;"	l
f01013d6	obj/kern/kernel.asm	/^f01013d6:	08 c2                	or     %al,%dl$/;"	l
f01013d8	obj/kern/kernel.asm	/^f01013d8:	74 04                	je     f01013de <readline+0xaa>$/;"	l
f01013da	obj/kern/kernel.asm	/^f01013da:	85 ff                	test   %edi,%edi$/;"	l
f01013dc	obj/kern/kernel.asm	/^f01013dc:	7f bb                	jg     f0101399 <readline+0x65>$/;"	l
f01013de	obj/kern/kernel.asm	/^f01013de:	83 fe 1f             	cmp    $0x1f,%esi$/;"	l
f01013e1	obj/kern/kernel.asm	/^f01013e1:	7e 1c                	jle    f01013ff <readline+0xcb>$/;"	l
f01013e3	obj/kern/kernel.asm	/^f01013e3:	81 ff fe 03 00 00    	cmp    $0x3fe,%edi$/;"	l
f01013e9	obj/kern/kernel.asm	/^f01013e9:	7f 14                	jg     f01013ff <readline+0xcb>$/;"	l
f01013eb	obj/kern/kernel.asm	/^f01013eb:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
f01013ef	obj/kern/kernel.asm	/^f01013ef:	74 c2                	je     f01013b3 <readline+0x7f>$/;"	l
f01013f1	obj/kern/kernel.asm	/^f01013f1:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01013f4	obj/kern/kernel.asm	/^f01013f4:	56                   	push   %esi$/;"	l
f01013f5	obj/kern/kernel.asm	/^f01013f5:	e8 39 f3 ff ff       	call   f0100733 <cputchar>$/;"	l
f01013fa	obj/kern/kernel.asm	/^f01013fa:	83 c4 10             	add    $0x10,%esp$/;"	l
f01013fd	obj/kern/kernel.asm	/^f01013fd:	eb b4                	jmp    f01013b3 <readline+0x7f>$/;"	l
f01013ff	obj/kern/kernel.asm	/^f01013ff:	83 fe 0a             	cmp    $0xa,%esi$/;"	l
f0101402	obj/kern/kernel.asm	/^f0101402:	74 05                	je     f0101409 <readline+0xd5>$/;"	l
f0101404	obj/kern/kernel.asm	/^f0101404:	83 fe 0d             	cmp    $0xd,%esi$/;"	l
f0101407	obj/kern/kernel.asm	/^f0101407:	75 b6                	jne    f01013bf <readline+0x8b>$/;"	l
f0101409	obj/kern/kernel.asm	/^f0101409:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
f010140d	obj/kern/kernel.asm	/^f010140d:	75 13                	jne    f0101422 <readline+0xee>$/;"	l
f010140f	obj/kern/kernel.asm	/^f010140f:	c6 84 3b 98 1f 00 00 	movb   $0x0,0x1f98(%ebx,%edi,1)$/;"	l
f0101416	obj/kern/kernel.asm	/^f0101416:	00 $/;"	l
f0101417	obj/kern/kernel.asm	/^f0101417:	8d 83 98 1f 00 00    	lea    0x1f98(%ebx),%eax$/;"	l
f010141d	obj/kern/kernel.asm	/^f010141d:	e9 6f ff ff ff       	jmp    f0101391 <readline+0x5d>$/;"	l
f0101422	obj/kern/kernel.asm	/^f0101422:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101425	obj/kern/kernel.asm	/^f0101425:	6a 0a                	push   $0xa$/;"	l
f0101427	obj/kern/kernel.asm	/^f0101427:	e8 07 f3 ff ff       	call   f0100733 <cputchar>$/;"	l
f010142c	obj/kern/kernel.asm	/^f010142c:	83 c4 10             	add    $0x10,%esp$/;"	l
f010142f	obj/kern/kernel.asm	/^f010142f:	eb de                	jmp    f010140f <readline+0xdb>$/;"	l
f0101431	obj/kern/kernel.asm	/^f0101431 <strlen>:$/;"	l
f0101431	obj/kern/kernel.asm	/^f0101431:	55                   	push   %ebp$/;"	l
f0101432	obj/kern/kernel.asm	/^f0101432:	89 e5                	mov    %esp,%ebp$/;"	l
f0101434	obj/kern/kernel.asm	/^f0101434:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0101437	obj/kern/kernel.asm	/^f0101437:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010143c	obj/kern/kernel.asm	/^f010143c:	eb 03                	jmp    f0101441 <strlen+0x10>$/;"	l
f010143e	obj/kern/kernel.asm	/^f010143e:	83 c0 01             	add    $0x1,%eax$/;"	l
f0101441	obj/kern/kernel.asm	/^f0101441:	80 3c 02 00          	cmpb   $0x0,(%edx,%eax,1)$/;"	l
f0101445	obj/kern/kernel.asm	/^f0101445:	75 f7                	jne    f010143e <strlen+0xd>$/;"	l
f0101447	obj/kern/kernel.asm	/^f0101447:	5d                   	pop    %ebp$/;"	l
f0101448	obj/kern/kernel.asm	/^f0101448:	c3                   	ret    $/;"	l
f0101449	obj/kern/kernel.asm	/^f0101449 <strnlen>:$/;"	l
f0101449	obj/kern/kernel.asm	/^f0101449:	55                   	push   %ebp$/;"	l
f010144a	obj/kern/kernel.asm	/^f010144a:	89 e5                	mov    %esp,%ebp$/;"	l
f010144c	obj/kern/kernel.asm	/^f010144c:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f010144f	obj/kern/kernel.asm	/^f010144f:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0101452	obj/kern/kernel.asm	/^f0101452:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101457	obj/kern/kernel.asm	/^f0101457:	eb 03                	jmp    f010145c <strnlen+0x13>$/;"	l
f0101459	obj/kern/kernel.asm	/^f0101459:	83 c0 01             	add    $0x1,%eax$/;"	l
f010145c	obj/kern/kernel.asm	/^f010145c:	39 d0                	cmp    %edx,%eax$/;"	l
f010145e	obj/kern/kernel.asm	/^f010145e:	74 06                	je     f0101466 <strnlen+0x1d>$/;"	l
f0101460	obj/kern/kernel.asm	/^f0101460:	80 3c 01 00          	cmpb   $0x0,(%ecx,%eax,1)$/;"	l
f0101464	obj/kern/kernel.asm	/^f0101464:	75 f3                	jne    f0101459 <strnlen+0x10>$/;"	l
f0101466	obj/kern/kernel.asm	/^f0101466:	5d                   	pop    %ebp$/;"	l
f0101467	obj/kern/kernel.asm	/^f0101467:	c3                   	ret    $/;"	l
f0101468	obj/kern/kernel.asm	/^f0101468 <strcpy>:$/;"	l
f0101468	obj/kern/kernel.asm	/^f0101468:	55                   	push   %ebp$/;"	l
f0101469	obj/kern/kernel.asm	/^f0101469:	89 e5                	mov    %esp,%ebp$/;"	l
f010146b	obj/kern/kernel.asm	/^f010146b:	53                   	push   %ebx$/;"	l
f010146c	obj/kern/kernel.asm	/^f010146c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010146f	obj/kern/kernel.asm	/^f010146f:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0101472	obj/kern/kernel.asm	/^f0101472:	89 c2                	mov    %eax,%edx$/;"	l
f0101474	obj/kern/kernel.asm	/^f0101474:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0101477	obj/kern/kernel.asm	/^f0101477:	83 c2 01             	add    $0x1,%edx$/;"	l
f010147a	obj/kern/kernel.asm	/^f010147a:	0f b6 59 ff          	movzbl -0x1(%ecx),%ebx$/;"	l
f010147e	obj/kern/kernel.asm	/^f010147e:	88 5a ff             	mov    %bl,-0x1(%edx)$/;"	l
f0101481	obj/kern/kernel.asm	/^f0101481:	84 db                	test   %bl,%bl$/;"	l
f0101483	obj/kern/kernel.asm	/^f0101483:	75 ef                	jne    f0101474 <strcpy+0xc>$/;"	l
f0101485	obj/kern/kernel.asm	/^f0101485:	5b                   	pop    %ebx$/;"	l
f0101486	obj/kern/kernel.asm	/^f0101486:	5d                   	pop    %ebp$/;"	l
f0101487	obj/kern/kernel.asm	/^f0101487:	c3                   	ret    $/;"	l
f0101488	obj/kern/kernel.asm	/^f0101488 <strcat>:$/;"	l
f0101488	obj/kern/kernel.asm	/^f0101488:	55                   	push   %ebp$/;"	l
f0101489	obj/kern/kernel.asm	/^f0101489:	89 e5                	mov    %esp,%ebp$/;"	l
f010148b	obj/kern/kernel.asm	/^f010148b:	53                   	push   %ebx$/;"	l
f010148c	obj/kern/kernel.asm	/^f010148c:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f010148f	obj/kern/kernel.asm	/^f010148f:	53                   	push   %ebx$/;"	l
f0101490	obj/kern/kernel.asm	/^f0101490:	e8 9c ff ff ff       	call   f0101431 <strlen>$/;"	l
f0101495	obj/kern/kernel.asm	/^f0101495:	83 c4 04             	add    $0x4,%esp$/;"	l
f0101498	obj/kern/kernel.asm	/^f0101498:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f010149b	obj/kern/kernel.asm	/^f010149b:	01 d8                	add    %ebx,%eax$/;"	l
f010149d	obj/kern/kernel.asm	/^f010149d:	50                   	push   %eax$/;"	l
f010149e	obj/kern/kernel.asm	/^f010149e:	e8 c5 ff ff ff       	call   f0101468 <strcpy>$/;"	l
f01014a3	obj/kern/kernel.asm	/^f01014a3:	89 d8                	mov    %ebx,%eax$/;"	l
f01014a5	obj/kern/kernel.asm	/^f01014a5:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f01014a8	obj/kern/kernel.asm	/^f01014a8:	c9                   	leave  $/;"	l
f01014a9	obj/kern/kernel.asm	/^f01014a9:	c3                   	ret    $/;"	l
f01014aa	obj/kern/kernel.asm	/^f01014aa <strncpy>:$/;"	l
f01014aa	obj/kern/kernel.asm	/^f01014aa:	55                   	push   %ebp$/;"	l
f01014ab	obj/kern/kernel.asm	/^f01014ab:	89 e5                	mov    %esp,%ebp$/;"	l
f01014ad	obj/kern/kernel.asm	/^f01014ad:	56                   	push   %esi$/;"	l
f01014ae	obj/kern/kernel.asm	/^f01014ae:	53                   	push   %ebx$/;"	l
f01014af	obj/kern/kernel.asm	/^f01014af:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f01014b2	obj/kern/kernel.asm	/^f01014b2:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f01014b5	obj/kern/kernel.asm	/^f01014b5:	89 f3                	mov    %esi,%ebx$/;"	l
f01014b7	obj/kern/kernel.asm	/^f01014b7:	03 5d 10             	add    0x10(%ebp),%ebx$/;"	l
f01014ba	obj/kern/kernel.asm	/^f01014ba:	89 f2                	mov    %esi,%edx$/;"	l
f01014bc	obj/kern/kernel.asm	/^f01014bc:	eb 0f                	jmp    f01014cd <strncpy+0x23>$/;"	l
f01014be	obj/kern/kernel.asm	/^f01014be:	83 c2 01             	add    $0x1,%edx$/;"	l
f01014c1	obj/kern/kernel.asm	/^f01014c1:	0f b6 01             	movzbl (%ecx),%eax$/;"	l
f01014c4	obj/kern/kernel.asm	/^f01014c4:	88 42 ff             	mov    %al,-0x1(%edx)$/;"	l
f01014c7	obj/kern/kernel.asm	/^f01014c7:	80 39 01             	cmpb   $0x1,(%ecx)$/;"	l
f01014ca	obj/kern/kernel.asm	/^f01014ca:	83 d9 ff             	sbb    $0xffffffff,%ecx$/;"	l
f01014cd	obj/kern/kernel.asm	/^f01014cd:	39 da                	cmp    %ebx,%edx$/;"	l
f01014cf	obj/kern/kernel.asm	/^f01014cf:	75 ed                	jne    f01014be <strncpy+0x14>$/;"	l
f01014d1	obj/kern/kernel.asm	/^f01014d1:	89 f0                	mov    %esi,%eax$/;"	l
f01014d3	obj/kern/kernel.asm	/^f01014d3:	5b                   	pop    %ebx$/;"	l
f01014d4	obj/kern/kernel.asm	/^f01014d4:	5e                   	pop    %esi$/;"	l
f01014d5	obj/kern/kernel.asm	/^f01014d5:	5d                   	pop    %ebp$/;"	l
f01014d6	obj/kern/kernel.asm	/^f01014d6:	c3                   	ret    $/;"	l
f01014d7	obj/kern/kernel.asm	/^f01014d7 <strlcpy>:$/;"	l
f01014d7	obj/kern/kernel.asm	/^f01014d7:	55                   	push   %ebp$/;"	l
f01014d8	obj/kern/kernel.asm	/^f01014d8:	89 e5                	mov    %esp,%ebp$/;"	l
f01014da	obj/kern/kernel.asm	/^f01014da:	56                   	push   %esi$/;"	l
f01014db	obj/kern/kernel.asm	/^f01014db:	53                   	push   %ebx$/;"	l
f01014dc	obj/kern/kernel.asm	/^f01014dc:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f01014df	obj/kern/kernel.asm	/^f01014df:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f01014e2	obj/kern/kernel.asm	/^f01014e2:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f01014e5	obj/kern/kernel.asm	/^f01014e5:	89 f0                	mov    %esi,%eax$/;"	l
f01014e7	obj/kern/kernel.asm	/^f01014e7:	8d 5c 0e ff          	lea    -0x1(%esi,%ecx,1),%ebx$/;"	l
f01014eb	obj/kern/kernel.asm	/^f01014eb:	85 c9                	test   %ecx,%ecx$/;"	l
f01014ed	obj/kern/kernel.asm	/^f01014ed:	75 0b                	jne    f01014fa <strlcpy+0x23>$/;"	l
f01014ef	obj/kern/kernel.asm	/^f01014ef:	eb 17                	jmp    f0101508 <strlcpy+0x31>$/;"	l
f01014f1	obj/kern/kernel.asm	/^f01014f1:	83 c2 01             	add    $0x1,%edx$/;"	l
f01014f4	obj/kern/kernel.asm	/^f01014f4:	83 c0 01             	add    $0x1,%eax$/;"	l
f01014f7	obj/kern/kernel.asm	/^f01014f7:	88 48 ff             	mov    %cl,-0x1(%eax)$/;"	l
f01014fa	obj/kern/kernel.asm	/^f01014fa:	39 d8                	cmp    %ebx,%eax$/;"	l
f01014fc	obj/kern/kernel.asm	/^f01014fc:	74 07                	je     f0101505 <strlcpy+0x2e>$/;"	l
f01014fe	obj/kern/kernel.asm	/^f01014fe:	0f b6 0a             	movzbl (%edx),%ecx$/;"	l
f0101501	obj/kern/kernel.asm	/^f0101501:	84 c9                	test   %cl,%cl$/;"	l
f0101503	obj/kern/kernel.asm	/^f0101503:	75 ec                	jne    f01014f1 <strlcpy+0x1a>$/;"	l
f0101505	obj/kern/kernel.asm	/^f0101505:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
f0101508	obj/kern/kernel.asm	/^f0101508:	29 f0                	sub    %esi,%eax$/;"	l
f010150a	obj/kern/kernel.asm	/^f010150a:	5b                   	pop    %ebx$/;"	l
f010150b	obj/kern/kernel.asm	/^f010150b:	5e                   	pop    %esi$/;"	l
f010150c	obj/kern/kernel.asm	/^f010150c:	5d                   	pop    %ebp$/;"	l
f010150d	obj/kern/kernel.asm	/^f010150d:	c3                   	ret    $/;"	l
f010150e	obj/kern/kernel.asm	/^f010150e <strcmp>:$/;"	l
f010150e	obj/kern/kernel.asm	/^f010150e:	55                   	push   %ebp$/;"	l
f010150f	obj/kern/kernel.asm	/^f010150f:	89 e5                	mov    %esp,%ebp$/;"	l
f0101511	obj/kern/kernel.asm	/^f0101511:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f0101514	obj/kern/kernel.asm	/^f0101514:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0101517	obj/kern/kernel.asm	/^f0101517:	eb 06                	jmp    f010151f <strcmp+0x11>$/;"	l
f0101519	obj/kern/kernel.asm	/^f0101519:	83 c1 01             	add    $0x1,%ecx$/;"	l
f010151c	obj/kern/kernel.asm	/^f010151c:	83 c2 01             	add    $0x1,%edx$/;"	l
f010151f	obj/kern/kernel.asm	/^f010151f:	0f b6 01             	movzbl (%ecx),%eax$/;"	l
f0101522	obj/kern/kernel.asm	/^f0101522:	84 c0                	test   %al,%al$/;"	l
f0101524	obj/kern/kernel.asm	/^f0101524:	74 04                	je     f010152a <strcmp+0x1c>$/;"	l
f0101526	obj/kern/kernel.asm	/^f0101526:	3a 02                	cmp    (%edx),%al$/;"	l
f0101528	obj/kern/kernel.asm	/^f0101528:	74 ef                	je     f0101519 <strcmp+0xb>$/;"	l
f010152a	obj/kern/kernel.asm	/^f010152a:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010152d	obj/kern/kernel.asm	/^f010152d:	0f b6 12             	movzbl (%edx),%edx$/;"	l
f0101530	obj/kern/kernel.asm	/^f0101530:	29 d0                	sub    %edx,%eax$/;"	l
f0101532	obj/kern/kernel.asm	/^f0101532:	5d                   	pop    %ebp$/;"	l
f0101533	obj/kern/kernel.asm	/^f0101533:	c3                   	ret    $/;"	l
f0101534	obj/kern/kernel.asm	/^f0101534 <strncmp>:$/;"	l
f0101534	obj/kern/kernel.asm	/^f0101534:	55                   	push   %ebp$/;"	l
f0101535	obj/kern/kernel.asm	/^f0101535:	89 e5                	mov    %esp,%ebp$/;"	l
f0101537	obj/kern/kernel.asm	/^f0101537:	53                   	push   %ebx$/;"	l
f0101538	obj/kern/kernel.asm	/^f0101538:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010153b	obj/kern/kernel.asm	/^f010153b:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f010153e	obj/kern/kernel.asm	/^f010153e:	89 c3                	mov    %eax,%ebx$/;"	l
f0101540	obj/kern/kernel.asm	/^f0101540:	03 5d 10             	add    0x10(%ebp),%ebx$/;"	l
f0101543	obj/kern/kernel.asm	/^f0101543:	eb 06                	jmp    f010154b <strncmp+0x17>$/;"	l
f0101545	obj/kern/kernel.asm	/^f0101545:	83 c0 01             	add    $0x1,%eax$/;"	l
f0101548	obj/kern/kernel.asm	/^f0101548:	83 c2 01             	add    $0x1,%edx$/;"	l
f010154b	obj/kern/kernel.asm	/^f010154b:	39 d8                	cmp    %ebx,%eax$/;"	l
f010154d	obj/kern/kernel.asm	/^f010154d:	74 16                	je     f0101565 <strncmp+0x31>$/;"	l
f010154f	obj/kern/kernel.asm	/^f010154f:	0f b6 08             	movzbl (%eax),%ecx$/;"	l
f0101552	obj/kern/kernel.asm	/^f0101552:	84 c9                	test   %cl,%cl$/;"	l
f0101554	obj/kern/kernel.asm	/^f0101554:	74 04                	je     f010155a <strncmp+0x26>$/;"	l
f0101556	obj/kern/kernel.asm	/^f0101556:	3a 0a                	cmp    (%edx),%cl$/;"	l
f0101558	obj/kern/kernel.asm	/^f0101558:	74 eb                	je     f0101545 <strncmp+0x11>$/;"	l
f010155a	obj/kern/kernel.asm	/^f010155a:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f010155d	obj/kern/kernel.asm	/^f010155d:	0f b6 12             	movzbl (%edx),%edx$/;"	l
f0101560	obj/kern/kernel.asm	/^f0101560:	29 d0                	sub    %edx,%eax$/;"	l
f0101562	obj/kern/kernel.asm	/^f0101562:	5b                   	pop    %ebx$/;"	l
f0101563	obj/kern/kernel.asm	/^f0101563:	5d                   	pop    %ebp$/;"	l
f0101564	obj/kern/kernel.asm	/^f0101564:	c3                   	ret    $/;"	l
f0101565	obj/kern/kernel.asm	/^f0101565:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010156a	obj/kern/kernel.asm	/^f010156a:	eb f6                	jmp    f0101562 <strncmp+0x2e>$/;"	l
f010156c	obj/kern/kernel.asm	/^f010156c <strchr>:$/;"	l
f010156c	obj/kern/kernel.asm	/^f010156c:	55                   	push   %ebp$/;"	l
f010156d	obj/kern/kernel.asm	/^f010156d:	89 e5                	mov    %esp,%ebp$/;"	l
f010156f	obj/kern/kernel.asm	/^f010156f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101572	obj/kern/kernel.asm	/^f0101572:	0f b6 4d 0c          	movzbl 0xc(%ebp),%ecx$/;"	l
f0101576	obj/kern/kernel.asm	/^f0101576:	0f b6 10             	movzbl (%eax),%edx$/;"	l
f0101579	obj/kern/kernel.asm	/^f0101579:	84 d2                	test   %dl,%dl$/;"	l
f010157b	obj/kern/kernel.asm	/^f010157b:	74 09                	je     f0101586 <strchr+0x1a>$/;"	l
f010157d	obj/kern/kernel.asm	/^f010157d:	38 ca                	cmp    %cl,%dl$/;"	l
f010157f	obj/kern/kernel.asm	/^f010157f:	74 0a                	je     f010158b <strchr+0x1f>$/;"	l
f0101581	obj/kern/kernel.asm	/^f0101581:	83 c0 01             	add    $0x1,%eax$/;"	l
f0101584	obj/kern/kernel.asm	/^f0101584:	eb f0                	jmp    f0101576 <strchr+0xa>$/;"	l
f0101586	obj/kern/kernel.asm	/^f0101586:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010158b	obj/kern/kernel.asm	/^f010158b:	5d                   	pop    %ebp$/;"	l
f010158c	obj/kern/kernel.asm	/^f010158c:	c3                   	ret    $/;"	l
f010158d	obj/kern/kernel.asm	/^f010158d <strfind>:$/;"	l
f010158d	obj/kern/kernel.asm	/^f010158d:	55                   	push   %ebp$/;"	l
f010158e	obj/kern/kernel.asm	/^f010158e:	89 e5                	mov    %esp,%ebp$/;"	l
f0101590	obj/kern/kernel.asm	/^f0101590:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101593	obj/kern/kernel.asm	/^f0101593:	0f b6 4d 0c          	movzbl 0xc(%ebp),%ecx$/;"	l
f0101597	obj/kern/kernel.asm	/^f0101597:	eb 03                	jmp    f010159c <strfind+0xf>$/;"	l
f0101599	obj/kern/kernel.asm	/^f0101599:	83 c0 01             	add    $0x1,%eax$/;"	l
f010159c	obj/kern/kernel.asm	/^f010159c:	0f b6 10             	movzbl (%eax),%edx$/;"	l
f010159f	obj/kern/kernel.asm	/^f010159f:	38 ca                	cmp    %cl,%dl$/;"	l
f01015a1	obj/kern/kernel.asm	/^f01015a1:	74 04                	je     f01015a7 <strfind+0x1a>$/;"	l
f01015a3	obj/kern/kernel.asm	/^f01015a3:	84 d2                	test   %dl,%dl$/;"	l
f01015a5	obj/kern/kernel.asm	/^f01015a5:	75 f2                	jne    f0101599 <strfind+0xc>$/;"	l
f01015a7	obj/kern/kernel.asm	/^f01015a7:	5d                   	pop    %ebp$/;"	l
f01015a8	obj/kern/kernel.asm	/^f01015a8:	c3                   	ret    $/;"	l
f01015a9	obj/kern/kernel.asm	/^f01015a9 <memset>:$/;"	l
f01015a9	obj/kern/kernel.asm	/^f01015a9:	55                   	push   %ebp$/;"	l
f01015aa	obj/kern/kernel.asm	/^f01015aa:	89 e5                	mov    %esp,%ebp$/;"	l
f01015ac	obj/kern/kernel.asm	/^f01015ac:	57                   	push   %edi$/;"	l
f01015ad	obj/kern/kernel.asm	/^f01015ad:	56                   	push   %esi$/;"	l
f01015ae	obj/kern/kernel.asm	/^f01015ae:	53                   	push   %ebx$/;"	l
f01015af	obj/kern/kernel.asm	/^f01015af:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f01015b2	obj/kern/kernel.asm	/^f01015b2:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f01015b5	obj/kern/kernel.asm	/^f01015b5:	85 c9                	test   %ecx,%ecx$/;"	l
f01015b7	obj/kern/kernel.asm	/^f01015b7:	74 13                	je     f01015cc <memset+0x23>$/;"	l
f01015b9	obj/kern/kernel.asm	/^f01015b9:	f7 c7 03 00 00 00    	test   $0x3,%edi$/;"	l
f01015bf	obj/kern/kernel.asm	/^f01015bf:	75 05                	jne    f01015c6 <memset+0x1d>$/;"	l
f01015c1	obj/kern/kernel.asm	/^f01015c1:	f6 c1 03             	test   $0x3,%cl$/;"	l
f01015c4	obj/kern/kernel.asm	/^f01015c4:	74 0d                	je     f01015d3 <memset+0x2a>$/;"	l
f01015c6	obj/kern/kernel.asm	/^f01015c6:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01015c9	obj/kern/kernel.asm	/^f01015c9:	fc                   	cld    $/;"	l
f01015ca	obj/kern/kernel.asm	/^f01015ca:	f3 aa                	rep stos %al,%es:(%edi)$/;"	l
f01015cc	obj/kern/kernel.asm	/^f01015cc:	89 f8                	mov    %edi,%eax$/;"	l
f01015ce	obj/kern/kernel.asm	/^f01015ce:	5b                   	pop    %ebx$/;"	l
f01015cf	obj/kern/kernel.asm	/^f01015cf:	5e                   	pop    %esi$/;"	l
f01015d0	obj/kern/kernel.asm	/^f01015d0:	5f                   	pop    %edi$/;"	l
f01015d1	obj/kern/kernel.asm	/^f01015d1:	5d                   	pop    %ebp$/;"	l
f01015d2	obj/kern/kernel.asm	/^f01015d2:	c3                   	ret    $/;"	l
f01015d3	obj/kern/kernel.asm	/^f01015d3:	0f b6 55 0c          	movzbl 0xc(%ebp),%edx$/;"	l
f01015d7	obj/kern/kernel.asm	/^f01015d7:	89 d3                	mov    %edx,%ebx$/;"	l
f01015d9	obj/kern/kernel.asm	/^f01015d9:	c1 e3 08             	shl    $0x8,%ebx$/;"	l
f01015dc	obj/kern/kernel.asm	/^f01015dc:	89 d0                	mov    %edx,%eax$/;"	l
f01015de	obj/kern/kernel.asm	/^f01015de:	c1 e0 18             	shl    $0x18,%eax$/;"	l
f01015e1	obj/kern/kernel.asm	/^f01015e1:	89 d6                	mov    %edx,%esi$/;"	l
f01015e3	obj/kern/kernel.asm	/^f01015e3:	c1 e6 10             	shl    $0x10,%esi$/;"	l
f01015e6	obj/kern/kernel.asm	/^f01015e6:	09 f0                	or     %esi,%eax$/;"	l
f01015e8	obj/kern/kernel.asm	/^f01015e8:	09 c2                	or     %eax,%edx$/;"	l
f01015ea	obj/kern/kernel.asm	/^f01015ea:	09 da                	or     %ebx,%edx$/;"	l
f01015ec	obj/kern/kernel.asm	/^f01015ec:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f01015ef	obj/kern/kernel.asm	/^f01015ef:	89 d0                	mov    %edx,%eax$/;"	l
f01015f1	obj/kern/kernel.asm	/^f01015f1:	fc                   	cld    $/;"	l
f01015f2	obj/kern/kernel.asm	/^f01015f2:	f3 ab                	rep stos %eax,%es:(%edi)$/;"	l
f01015f4	obj/kern/kernel.asm	/^f01015f4:	eb d6                	jmp    f01015cc <memset+0x23>$/;"	l
f01015f6	obj/kern/kernel.asm	/^f01015f6 <memmove>:$/;"	l
f01015f6	obj/kern/kernel.asm	/^f01015f6:	55                   	push   %ebp$/;"	l
f01015f7	obj/kern/kernel.asm	/^f01015f7:	89 e5                	mov    %esp,%ebp$/;"	l
f01015f9	obj/kern/kernel.asm	/^f01015f9:	57                   	push   %edi$/;"	l
f01015fa	obj/kern/kernel.asm	/^f01015fa:	56                   	push   %esi$/;"	l
f01015fb	obj/kern/kernel.asm	/^f01015fb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01015fe	obj/kern/kernel.asm	/^f01015fe:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0101601	obj/kern/kernel.asm	/^f0101601:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f0101604	obj/kern/kernel.asm	/^f0101604:	39 c6                	cmp    %eax,%esi$/;"	l
f0101606	obj/kern/kernel.asm	/^f0101606:	73 35                	jae    f010163d <memmove+0x47>$/;"	l
f0101608	obj/kern/kernel.asm	/^f0101608:	8d 14 0e             	lea    (%esi,%ecx,1),%edx$/;"	l
f010160b	obj/kern/kernel.asm	/^f010160b:	39 c2                	cmp    %eax,%edx$/;"	l
f010160d	obj/kern/kernel.asm	/^f010160d:	76 2e                	jbe    f010163d <memmove+0x47>$/;"	l
f010160f	obj/kern/kernel.asm	/^f010160f:	8d 3c 08             	lea    (%eax,%ecx,1),%edi$/;"	l
f0101612	obj/kern/kernel.asm	/^f0101612:	89 d6                	mov    %edx,%esi$/;"	l
f0101614	obj/kern/kernel.asm	/^f0101614:	09 fe                	or     %edi,%esi$/;"	l
f0101616	obj/kern/kernel.asm	/^f0101616:	f7 c6 03 00 00 00    	test   $0x3,%esi$/;"	l
f010161c	obj/kern/kernel.asm	/^f010161c:	74 0c                	je     f010162a <memmove+0x34>$/;"	l
f010161e	obj/kern/kernel.asm	/^f010161e:	83 ef 01             	sub    $0x1,%edi$/;"	l
f0101621	obj/kern/kernel.asm	/^f0101621:	8d 72 ff             	lea    -0x1(%edx),%esi$/;"	l
f0101624	obj/kern/kernel.asm	/^f0101624:	fd                   	std    $/;"	l
f0101625	obj/kern/kernel.asm	/^f0101625:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
f0101627	obj/kern/kernel.asm	/^f0101627:	fc                   	cld    $/;"	l
f0101628	obj/kern/kernel.asm	/^f0101628:	eb 21                	jmp    f010164b <memmove+0x55>$/;"	l
f010162a	obj/kern/kernel.asm	/^f010162a:	f6 c1 03             	test   $0x3,%cl$/;"	l
f010162d	obj/kern/kernel.asm	/^f010162d:	75 ef                	jne    f010161e <memmove+0x28>$/;"	l
f010162f	obj/kern/kernel.asm	/^f010162f:	83 ef 04             	sub    $0x4,%edi$/;"	l
f0101632	obj/kern/kernel.asm	/^f0101632:	8d 72 fc             	lea    -0x4(%edx),%esi$/;"	l
f0101635	obj/kern/kernel.asm	/^f0101635:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f0101638	obj/kern/kernel.asm	/^f0101638:	fd                   	std    $/;"	l
f0101639	obj/kern/kernel.asm	/^f0101639:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f010163b	obj/kern/kernel.asm	/^f010163b:	eb ea                	jmp    f0101627 <memmove+0x31>$/;"	l
f010163d	obj/kern/kernel.asm	/^f010163d:	89 f2                	mov    %esi,%edx$/;"	l
f010163f	obj/kern/kernel.asm	/^f010163f:	09 c2                	or     %eax,%edx$/;"	l
f0101641	obj/kern/kernel.asm	/^f0101641:	f6 c2 03             	test   $0x3,%dl$/;"	l
f0101644	obj/kern/kernel.asm	/^f0101644:	74 09                	je     f010164f <memmove+0x59>$/;"	l
f0101646	obj/kern/kernel.asm	/^f0101646:	89 c7                	mov    %eax,%edi$/;"	l
f0101648	obj/kern/kernel.asm	/^f0101648:	fc                   	cld    $/;"	l
f0101649	obj/kern/kernel.asm	/^f0101649:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
f010164b	obj/kern/kernel.asm	/^f010164b:	5e                   	pop    %esi$/;"	l
f010164c	obj/kern/kernel.asm	/^f010164c:	5f                   	pop    %edi$/;"	l
f010164d	obj/kern/kernel.asm	/^f010164d:	5d                   	pop    %ebp$/;"	l
f010164e	obj/kern/kernel.asm	/^f010164e:	c3                   	ret    $/;"	l
f010164f	obj/kern/kernel.asm	/^f010164f:	f6 c1 03             	test   $0x3,%cl$/;"	l
f0101652	obj/kern/kernel.asm	/^f0101652:	75 f2                	jne    f0101646 <memmove+0x50>$/;"	l
f0101654	obj/kern/kernel.asm	/^f0101654:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f0101657	obj/kern/kernel.asm	/^f0101657:	89 c7                	mov    %eax,%edi$/;"	l
f0101659	obj/kern/kernel.asm	/^f0101659:	fc                   	cld    $/;"	l
f010165a	obj/kern/kernel.asm	/^f010165a:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f010165c	obj/kern/kernel.asm	/^f010165c:	eb ed                	jmp    f010164b <memmove+0x55>$/;"	l
f010165e	obj/kern/kernel.asm	/^f010165e <memcpy>:$/;"	l
f010165e	obj/kern/kernel.asm	/^f010165e:	55                   	push   %ebp$/;"	l
f010165f	obj/kern/kernel.asm	/^f010165f:	89 e5                	mov    %esp,%ebp$/;"	l
f0101661	obj/kern/kernel.asm	/^f0101661:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0101664	obj/kern/kernel.asm	/^f0101664:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0101667	obj/kern/kernel.asm	/^f0101667:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f010166a	obj/kern/kernel.asm	/^f010166a:	e8 87 ff ff ff       	call   f01015f6 <memmove>$/;"	l
f010166f	obj/kern/kernel.asm	/^f010166f:	c9                   	leave  $/;"	l
f0101670	obj/kern/kernel.asm	/^f0101670:	c3                   	ret    $/;"	l
f0101671	obj/kern/kernel.asm	/^f0101671 <memcmp>:$/;"	l
f0101671	obj/kern/kernel.asm	/^f0101671:	55                   	push   %ebp$/;"	l
f0101672	obj/kern/kernel.asm	/^f0101672:	89 e5                	mov    %esp,%ebp$/;"	l
f0101674	obj/kern/kernel.asm	/^f0101674:	56                   	push   %esi$/;"	l
f0101675	obj/kern/kernel.asm	/^f0101675:	53                   	push   %ebx$/;"	l
f0101676	obj/kern/kernel.asm	/^f0101676:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101679	obj/kern/kernel.asm	/^f0101679:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f010167c	obj/kern/kernel.asm	/^f010167c:	89 c6                	mov    %eax,%esi$/;"	l
f010167e	obj/kern/kernel.asm	/^f010167e:	03 75 10             	add    0x10(%ebp),%esi$/;"	l
f0101681	obj/kern/kernel.asm	/^f0101681:	39 f0                	cmp    %esi,%eax$/;"	l
f0101683	obj/kern/kernel.asm	/^f0101683:	74 1c                	je     f01016a1 <memcmp+0x30>$/;"	l
f0101685	obj/kern/kernel.asm	/^f0101685:	0f b6 08             	movzbl (%eax),%ecx$/;"	l
f0101688	obj/kern/kernel.asm	/^f0101688:	0f b6 1a             	movzbl (%edx),%ebx$/;"	l
f010168b	obj/kern/kernel.asm	/^f010168b:	38 d9                	cmp    %bl,%cl$/;"	l
f010168d	obj/kern/kernel.asm	/^f010168d:	75 08                	jne    f0101697 <memcmp+0x26>$/;"	l
f010168f	obj/kern/kernel.asm	/^f010168f:	83 c0 01             	add    $0x1,%eax$/;"	l
f0101692	obj/kern/kernel.asm	/^f0101692:	83 c2 01             	add    $0x1,%edx$/;"	l
f0101695	obj/kern/kernel.asm	/^f0101695:	eb ea                	jmp    f0101681 <memcmp+0x10>$/;"	l
f0101697	obj/kern/kernel.asm	/^f0101697:	0f b6 c1             	movzbl %cl,%eax$/;"	l
f010169a	obj/kern/kernel.asm	/^f010169a:	0f b6 db             	movzbl %bl,%ebx$/;"	l
f010169d	obj/kern/kernel.asm	/^f010169d:	29 d8                	sub    %ebx,%eax$/;"	l
f010169f	obj/kern/kernel.asm	/^f010169f:	eb 05                	jmp    f01016a6 <memcmp+0x35>$/;"	l
f01016a1	obj/kern/kernel.asm	/^f01016a1:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01016a6	obj/kern/kernel.asm	/^f01016a6:	5b                   	pop    %ebx$/;"	l
f01016a7	obj/kern/kernel.asm	/^f01016a7:	5e                   	pop    %esi$/;"	l
f01016a8	obj/kern/kernel.asm	/^f01016a8:	5d                   	pop    %ebp$/;"	l
f01016a9	obj/kern/kernel.asm	/^f01016a9:	c3                   	ret    $/;"	l
f01016aa	obj/kern/kernel.asm	/^f01016aa <memfind>:$/;"	l
f01016aa	obj/kern/kernel.asm	/^f01016aa:	55                   	push   %ebp$/;"	l
f01016ab	obj/kern/kernel.asm	/^f01016ab:	89 e5                	mov    %esp,%ebp$/;"	l
f01016ad	obj/kern/kernel.asm	/^f01016ad:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01016b0	obj/kern/kernel.asm	/^f01016b0:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f01016b3	obj/kern/kernel.asm	/^f01016b3:	89 c2                	mov    %eax,%edx$/;"	l
f01016b5	obj/kern/kernel.asm	/^f01016b5:	03 55 10             	add    0x10(%ebp),%edx$/;"	l
f01016b8	obj/kern/kernel.asm	/^f01016b8:	39 d0                	cmp    %edx,%eax$/;"	l
f01016ba	obj/kern/kernel.asm	/^f01016ba:	73 09                	jae    f01016c5 <memfind+0x1b>$/;"	l
f01016bc	obj/kern/kernel.asm	/^f01016bc:	38 08                	cmp    %cl,(%eax)$/;"	l
f01016be	obj/kern/kernel.asm	/^f01016be:	74 05                	je     f01016c5 <memfind+0x1b>$/;"	l
f01016c0	obj/kern/kernel.asm	/^f01016c0:	83 c0 01             	add    $0x1,%eax$/;"	l
f01016c3	obj/kern/kernel.asm	/^f01016c3:	eb f3                	jmp    f01016b8 <memfind+0xe>$/;"	l
f01016c5	obj/kern/kernel.asm	/^f01016c5:	5d                   	pop    %ebp$/;"	l
f01016c6	obj/kern/kernel.asm	/^f01016c6:	c3                   	ret    $/;"	l
f01016c7	obj/kern/kernel.asm	/^f01016c7 <strtol>:$/;"	l
f01016c7	obj/kern/kernel.asm	/^f01016c7:	55                   	push   %ebp$/;"	l
f01016c8	obj/kern/kernel.asm	/^f01016c8:	89 e5                	mov    %esp,%ebp$/;"	l
f01016ca	obj/kern/kernel.asm	/^f01016ca:	57                   	push   %edi$/;"	l
f01016cb	obj/kern/kernel.asm	/^f01016cb:	56                   	push   %esi$/;"	l
f01016cc	obj/kern/kernel.asm	/^f01016cc:	53                   	push   %ebx$/;"	l
f01016cd	obj/kern/kernel.asm	/^f01016cd:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f01016d0	obj/kern/kernel.asm	/^f01016d0:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f01016d3	obj/kern/kernel.asm	/^f01016d3:	eb 03                	jmp    f01016d8 <strtol+0x11>$/;"	l
f01016d5	obj/kern/kernel.asm	/^f01016d5:	83 c1 01             	add    $0x1,%ecx$/;"	l
f01016d8	obj/kern/kernel.asm	/^f01016d8:	0f b6 01             	movzbl (%ecx),%eax$/;"	l
f01016db	obj/kern/kernel.asm	/^f01016db:	3c 20                	cmp    $0x20,%al$/;"	l
f01016dd	obj/kern/kernel.asm	/^f01016dd:	74 f6                	je     f01016d5 <strtol+0xe>$/;"	l
f01016df	obj/kern/kernel.asm	/^f01016df:	3c 09                	cmp    $0x9,%al$/;"	l
f01016e1	obj/kern/kernel.asm	/^f01016e1:	74 f2                	je     f01016d5 <strtol+0xe>$/;"	l
f01016e3	obj/kern/kernel.asm	/^f01016e3:	3c 2b                	cmp    $0x2b,%al$/;"	l
f01016e5	obj/kern/kernel.asm	/^f01016e5:	74 2e                	je     f0101715 <strtol+0x4e>$/;"	l
f01016e7	obj/kern/kernel.asm	/^f01016e7:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f01016ec	obj/kern/kernel.asm	/^f01016ec:	3c 2d                	cmp    $0x2d,%al$/;"	l
f01016ee	obj/kern/kernel.asm	/^f01016ee:	74 2f                	je     f010171f <strtol+0x58>$/;"	l
f01016f0	obj/kern/kernel.asm	/^f01016f0:	f7 c3 ef ff ff ff    	test   $0xffffffef,%ebx$/;"	l
f01016f6	obj/kern/kernel.asm	/^f01016f6:	75 05                	jne    f01016fd <strtol+0x36>$/;"	l
f01016f8	obj/kern/kernel.asm	/^f01016f8:	80 39 30             	cmpb   $0x30,(%ecx)$/;"	l
f01016fb	obj/kern/kernel.asm	/^f01016fb:	74 2c                	je     f0101729 <strtol+0x62>$/;"	l
f01016fd	obj/kern/kernel.asm	/^f01016fd:	85 db                	test   %ebx,%ebx$/;"	l
f01016ff	obj/kern/kernel.asm	/^f01016ff:	75 0a                	jne    f010170b <strtol+0x44>$/;"	l
f0101701	obj/kern/kernel.asm	/^f0101701:	bb 0a 00 00 00       	mov    $0xa,%ebx$/;"	l
f0101706	obj/kern/kernel.asm	/^f0101706:	80 39 30             	cmpb   $0x30,(%ecx)$/;"	l
f0101709	obj/kern/kernel.asm	/^f0101709:	74 28                	je     f0101733 <strtol+0x6c>$/;"	l
f010170b	obj/kern/kernel.asm	/^f010170b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101710	obj/kern/kernel.asm	/^f0101710:	89 5d 10             	mov    %ebx,0x10(%ebp)$/;"	l
f0101713	obj/kern/kernel.asm	/^f0101713:	eb 50                	jmp    f0101765 <strtol+0x9e>$/;"	l
f0101715	obj/kern/kernel.asm	/^f0101715:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0101718	obj/kern/kernel.asm	/^f0101718:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f010171d	obj/kern/kernel.asm	/^f010171d:	eb d1                	jmp    f01016f0 <strtol+0x29>$/;"	l
f010171f	obj/kern/kernel.asm	/^f010171f:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0101722	obj/kern/kernel.asm	/^f0101722:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
f0101727	obj/kern/kernel.asm	/^f0101727:	eb c7                	jmp    f01016f0 <strtol+0x29>$/;"	l
f0101729	obj/kern/kernel.asm	/^f0101729:	80 79 01 78          	cmpb   $0x78,0x1(%ecx)$/;"	l
f010172d	obj/kern/kernel.asm	/^f010172d:	74 0e                	je     f010173d <strtol+0x76>$/;"	l
f010172f	obj/kern/kernel.asm	/^f010172f:	85 db                	test   %ebx,%ebx$/;"	l
f0101731	obj/kern/kernel.asm	/^f0101731:	75 d8                	jne    f010170b <strtol+0x44>$/;"	l
f0101733	obj/kern/kernel.asm	/^f0101733:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0101736	obj/kern/kernel.asm	/^f0101736:	bb 08 00 00 00       	mov    $0x8,%ebx$/;"	l
f010173b	obj/kern/kernel.asm	/^f010173b:	eb ce                	jmp    f010170b <strtol+0x44>$/;"	l
f010173d	obj/kern/kernel.asm	/^f010173d:	83 c1 02             	add    $0x2,%ecx$/;"	l
f0101740	obj/kern/kernel.asm	/^f0101740:	bb 10 00 00 00       	mov    $0x10,%ebx$/;"	l
f0101745	obj/kern/kernel.asm	/^f0101745:	eb c4                	jmp    f010170b <strtol+0x44>$/;"	l
f0101747	obj/kern/kernel.asm	/^f0101747:	8d 72 9f             	lea    -0x61(%edx),%esi$/;"	l
f010174a	obj/kern/kernel.asm	/^f010174a:	89 f3                	mov    %esi,%ebx$/;"	l
f010174c	obj/kern/kernel.asm	/^f010174c:	80 fb 19             	cmp    $0x19,%bl$/;"	l
f010174f	obj/kern/kernel.asm	/^f010174f:	77 29                	ja     f010177a <strtol+0xb3>$/;"	l
f0101751	obj/kern/kernel.asm	/^f0101751:	0f be d2             	movsbl %dl,%edx$/;"	l
f0101754	obj/kern/kernel.asm	/^f0101754:	83 ea 57             	sub    $0x57,%edx$/;"	l
f0101757	obj/kern/kernel.asm	/^f0101757:	3b 55 10             	cmp    0x10(%ebp),%edx$/;"	l
f010175a	obj/kern/kernel.asm	/^f010175a:	7d 30                	jge    f010178c <strtol+0xc5>$/;"	l
f010175c	obj/kern/kernel.asm	/^f010175c:	83 c1 01             	add    $0x1,%ecx$/;"	l
f010175f	obj/kern/kernel.asm	/^f010175f:	0f af 45 10          	imul   0x10(%ebp),%eax$/;"	l
f0101763	obj/kern/kernel.asm	/^f0101763:	01 d0                	add    %edx,%eax$/;"	l
f0101765	obj/kern/kernel.asm	/^f0101765:	0f b6 11             	movzbl (%ecx),%edx$/;"	l
f0101768	obj/kern/kernel.asm	/^f0101768:	8d 72 d0             	lea    -0x30(%edx),%esi$/;"	l
f010176b	obj/kern/kernel.asm	/^f010176b:	89 f3                	mov    %esi,%ebx$/;"	l
f010176d	obj/kern/kernel.asm	/^f010176d:	80 fb 09             	cmp    $0x9,%bl$/;"	l
f0101770	obj/kern/kernel.asm	/^f0101770:	77 d5                	ja     f0101747 <strtol+0x80>$/;"	l
f0101772	obj/kern/kernel.asm	/^f0101772:	0f be d2             	movsbl %dl,%edx$/;"	l
f0101775	obj/kern/kernel.asm	/^f0101775:	83 ea 30             	sub    $0x30,%edx$/;"	l
f0101778	obj/kern/kernel.asm	/^f0101778:	eb dd                	jmp    f0101757 <strtol+0x90>$/;"	l
f010177a	obj/kern/kernel.asm	/^f010177a:	8d 72 bf             	lea    -0x41(%edx),%esi$/;"	l
f010177d	obj/kern/kernel.asm	/^f010177d:	89 f3                	mov    %esi,%ebx$/;"	l
f010177f	obj/kern/kernel.asm	/^f010177f:	80 fb 19             	cmp    $0x19,%bl$/;"	l
f0101782	obj/kern/kernel.asm	/^f0101782:	77 08                	ja     f010178c <strtol+0xc5>$/;"	l
f0101784	obj/kern/kernel.asm	/^f0101784:	0f be d2             	movsbl %dl,%edx$/;"	l
f0101787	obj/kern/kernel.asm	/^f0101787:	83 ea 37             	sub    $0x37,%edx$/;"	l
f010178a	obj/kern/kernel.asm	/^f010178a:	eb cb                	jmp    f0101757 <strtol+0x90>$/;"	l
f010178c	obj/kern/kernel.asm	/^f010178c:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
f0101790	obj/kern/kernel.asm	/^f0101790:	74 05                	je     f0101797 <strtol+0xd0>$/;"	l
f0101792	obj/kern/kernel.asm	/^f0101792:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0101795	obj/kern/kernel.asm	/^f0101795:	89 0e                	mov    %ecx,(%esi)$/;"	l
f0101797	obj/kern/kernel.asm	/^f0101797:	89 c2                	mov    %eax,%edx$/;"	l
f0101799	obj/kern/kernel.asm	/^f0101799:	f7 da                	neg    %edx$/;"	l
f010179b	obj/kern/kernel.asm	/^f010179b:	85 ff                	test   %edi,%edi$/;"	l
f010179d	obj/kern/kernel.asm	/^f010179d:	0f 45 c2             	cmovne %edx,%eax$/;"	l
f01017a0	obj/kern/kernel.asm	/^f01017a0:	5b                   	pop    %ebx$/;"	l
f01017a1	obj/kern/kernel.asm	/^f01017a1:	5e                   	pop    %esi$/;"	l
f01017a2	obj/kern/kernel.asm	/^f01017a2:	5f                   	pop    %edi$/;"	l
f01017a3	obj/kern/kernel.asm	/^f01017a3:	5d                   	pop    %ebp$/;"	l
f01017a4	obj/kern/kernel.asm	/^f01017a4:	c3                   	ret    $/;"	l
f01017a5	obj/kern/kernel.asm	/^f01017a5:	66 90                	xchg   %ax,%ax$/;"	l
f01017a7	obj/kern/kernel.asm	/^f01017a7:	66 90                	xchg   %ax,%ax$/;"	l
f01017a9	obj/kern/kernel.asm	/^f01017a9:	66 90                	xchg   %ax,%ax$/;"	l
f01017ab	obj/kern/kernel.asm	/^f01017ab:	66 90                	xchg   %ax,%ax$/;"	l
f01017ad	obj/kern/kernel.asm	/^f01017ad:	66 90                	xchg   %ax,%ax$/;"	l
f01017af	obj/kern/kernel.asm	/^f01017af:	90                   	nop$/;"	l
f01017b0	obj/kern/kernel.asm	/^f01017b0 <__udivdi3>:$/;"	l
f01017b0	obj/kern/kernel.asm	/^f01017b0:	55                   	push   %ebp$/;"	l
f01017b1	obj/kern/kernel.asm	/^f01017b1:	57                   	push   %edi$/;"	l
f01017b2	obj/kern/kernel.asm	/^f01017b2:	56                   	push   %esi$/;"	l
f01017b3	obj/kern/kernel.asm	/^f01017b3:	53                   	push   %ebx$/;"	l
f01017b4	obj/kern/kernel.asm	/^f01017b4:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f01017b7	obj/kern/kernel.asm	/^f01017b7:	8b 54 24 3c          	mov    0x3c(%esp),%edx$/;"	l
f01017bb	obj/kern/kernel.asm	/^f01017bb:	8b 6c 24 30          	mov    0x30(%esp),%ebp$/;"	l
f01017bf	obj/kern/kernel.asm	/^f01017bf:	8b 74 24 34          	mov    0x34(%esp),%esi$/;"	l
f01017c3	obj/kern/kernel.asm	/^f01017c3:	8b 5c 24 38          	mov    0x38(%esp),%ebx$/;"	l
f01017c7	obj/kern/kernel.asm	/^f01017c7:	85 d2                	test   %edx,%edx$/;"	l
f01017c9	obj/kern/kernel.asm	/^f01017c9:	75 35                	jne    f0101800 <__udivdi3+0x50>$/;"	l
f01017cb	obj/kern/kernel.asm	/^f01017cb:	39 f3                	cmp    %esi,%ebx$/;"	l
f01017cd	obj/kern/kernel.asm	/^f01017cd:	0f 87 bd 00 00 00    	ja     f0101890 <__udivdi3+0xe0>$/;"	l
f01017d3	obj/kern/kernel.asm	/^f01017d3:	85 db                	test   %ebx,%ebx$/;"	l
f01017d5	obj/kern/kernel.asm	/^f01017d5:	89 d9                	mov    %ebx,%ecx$/;"	l
f01017d7	obj/kern/kernel.asm	/^f01017d7:	75 0b                	jne    f01017e4 <__udivdi3+0x34>$/;"	l
f01017d9	obj/kern/kernel.asm	/^f01017d9:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f01017de	obj/kern/kernel.asm	/^f01017de:	31 d2                	xor    %edx,%edx$/;"	l
f01017e0	obj/kern/kernel.asm	/^f01017e0:	f7 f3                	div    %ebx$/;"	l
f01017e2	obj/kern/kernel.asm	/^f01017e2:	89 c1                	mov    %eax,%ecx$/;"	l
f01017e4	obj/kern/kernel.asm	/^f01017e4:	31 d2                	xor    %edx,%edx$/;"	l
f01017e6	obj/kern/kernel.asm	/^f01017e6:	89 f0                	mov    %esi,%eax$/;"	l
f01017e8	obj/kern/kernel.asm	/^f01017e8:	f7 f1                	div    %ecx$/;"	l
f01017ea	obj/kern/kernel.asm	/^f01017ea:	89 c6                	mov    %eax,%esi$/;"	l
f01017ec	obj/kern/kernel.asm	/^f01017ec:	89 e8                	mov    %ebp,%eax$/;"	l
f01017ee	obj/kern/kernel.asm	/^f01017ee:	89 f7                	mov    %esi,%edi$/;"	l
f01017f0	obj/kern/kernel.asm	/^f01017f0:	f7 f1                	div    %ecx$/;"	l
f01017f2	obj/kern/kernel.asm	/^f01017f2:	89 fa                	mov    %edi,%edx$/;"	l
f01017f4	obj/kern/kernel.asm	/^f01017f4:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f01017f7	obj/kern/kernel.asm	/^f01017f7:	5b                   	pop    %ebx$/;"	l
f01017f8	obj/kern/kernel.asm	/^f01017f8:	5e                   	pop    %esi$/;"	l
f01017f9	obj/kern/kernel.asm	/^f01017f9:	5f                   	pop    %edi$/;"	l
f01017fa	obj/kern/kernel.asm	/^f01017fa:	5d                   	pop    %ebp$/;"	l
f01017fb	obj/kern/kernel.asm	/^f01017fb:	c3                   	ret    $/;"	l
f01017fc	obj/kern/kernel.asm	/^f01017fc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0101800	obj/kern/kernel.asm	/^f0101800:	39 f2                	cmp    %esi,%edx$/;"	l
f0101802	obj/kern/kernel.asm	/^f0101802:	77 7c                	ja     f0101880 <__udivdi3+0xd0>$/;"	l
f0101804	obj/kern/kernel.asm	/^f0101804:	0f bd fa             	bsr    %edx,%edi$/;"	l
f0101807	obj/kern/kernel.asm	/^f0101807:	83 f7 1f             	xor    $0x1f,%edi$/;"	l
f010180a	obj/kern/kernel.asm	/^f010180a:	0f 84 98 00 00 00    	je     f01018a8 <__udivdi3+0xf8>$/;"	l
f0101810	obj/kern/kernel.asm	/^f0101810:	89 f9                	mov    %edi,%ecx$/;"	l
f0101812	obj/kern/kernel.asm	/^f0101812:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0101817	obj/kern/kernel.asm	/^f0101817:	29 f8                	sub    %edi,%eax$/;"	l
f0101819	obj/kern/kernel.asm	/^f0101819:	d3 e2                	shl    %cl,%edx$/;"	d
f010181b	obj/kern/kernel.asm	/^f010181b:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f010181f	obj/kern/kernel.asm	/^f010181f:	89 c1                	mov    %eax,%ecx$/;"	l
f0101821	obj/kern/kernel.asm	/^f0101821:	89 da                	mov    %ebx,%edx$/;"	l
f0101823	obj/kern/kernel.asm	/^f0101823:	d3 ea                	shr    %cl,%edx$/;"	d
f0101825	obj/kern/kernel.asm	/^f0101825:	8b 4c 24 08          	mov    0x8(%esp),%ecx$/;"	l
f0101829	obj/kern/kernel.asm	/^f0101829:	09 d1                	or     %edx,%ecx$/;"	l
f010182b	obj/kern/kernel.asm	/^f010182b:	89 f2                	mov    %esi,%edx$/;"	l
f010182d	obj/kern/kernel.asm	/^f010182d:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
f0101831	obj/kern/kernel.asm	/^f0101831:	89 f9                	mov    %edi,%ecx$/;"	l
f0101833	obj/kern/kernel.asm	/^f0101833:	d3 e3                	shl    %cl,%ebx$/;"	d
f0101835	obj/kern/kernel.asm	/^f0101835:	89 c1                	mov    %eax,%ecx$/;"	l
f0101837	obj/kern/kernel.asm	/^f0101837:	d3 ea                	shr    %cl,%edx$/;"	d
f0101839	obj/kern/kernel.asm	/^f0101839:	89 f9                	mov    %edi,%ecx$/;"	l
f010183b	obj/kern/kernel.asm	/^f010183b:	89 5c 24 0c          	mov    %ebx,0xc(%esp)$/;"	l
f010183f	obj/kern/kernel.asm	/^f010183f:	d3 e6                	shl    %cl,%esi$/;"	d
f0101841	obj/kern/kernel.asm	/^f0101841:	89 eb                	mov    %ebp,%ebx$/;"	l
f0101843	obj/kern/kernel.asm	/^f0101843:	89 c1                	mov    %eax,%ecx$/;"	l
f0101845	obj/kern/kernel.asm	/^f0101845:	d3 eb                	shr    %cl,%ebx$/;"	d
f0101847	obj/kern/kernel.asm	/^f0101847:	09 de                	or     %ebx,%esi$/;"	l
f0101849	obj/kern/kernel.asm	/^f0101849:	89 f0                	mov    %esi,%eax$/;"	l
f010184b	obj/kern/kernel.asm	/^f010184b:	f7 74 24 08          	divl   0x8(%esp)$/;"	l
f010184f	obj/kern/kernel.asm	/^f010184f:	89 d6                	mov    %edx,%esi$/;"	l
f0101851	obj/kern/kernel.asm	/^f0101851:	89 c3                	mov    %eax,%ebx$/;"	l
f0101853	obj/kern/kernel.asm	/^f0101853:	f7 64 24 0c          	mull   0xc(%esp)$/;"	l
f0101857	obj/kern/kernel.asm	/^f0101857:	39 d6                	cmp    %edx,%esi$/;"	l
f0101859	obj/kern/kernel.asm	/^f0101859:	72 0c                	jb     f0101867 <__udivdi3+0xb7>$/;"	l
f010185b	obj/kern/kernel.asm	/^f010185b:	89 f9                	mov    %edi,%ecx$/;"	l
f010185d	obj/kern/kernel.asm	/^f010185d:	d3 e5                	shl    %cl,%ebp$/;"	d
f010185f	obj/kern/kernel.asm	/^f010185f:	39 c5                	cmp    %eax,%ebp$/;"	l
f0101861	obj/kern/kernel.asm	/^f0101861:	73 5d                	jae    f01018c0 <__udivdi3+0x110>$/;"	l
f0101863	obj/kern/kernel.asm	/^f0101863:	39 d6                	cmp    %edx,%esi$/;"	l
f0101865	obj/kern/kernel.asm	/^f0101865:	75 59                	jne    f01018c0 <__udivdi3+0x110>$/;"	l
f0101867	obj/kern/kernel.asm	/^f0101867:	8d 43 ff             	lea    -0x1(%ebx),%eax$/;"	l
f010186a	obj/kern/kernel.asm	/^f010186a:	31 ff                	xor    %edi,%edi$/;"	l
f010186c	obj/kern/kernel.asm	/^f010186c:	89 fa                	mov    %edi,%edx$/;"	l
f010186e	obj/kern/kernel.asm	/^f010186e:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0101871	obj/kern/kernel.asm	/^f0101871:	5b                   	pop    %ebx$/;"	l
f0101872	obj/kern/kernel.asm	/^f0101872:	5e                   	pop    %esi$/;"	l
f0101873	obj/kern/kernel.asm	/^f0101873:	5f                   	pop    %edi$/;"	l
f0101874	obj/kern/kernel.asm	/^f0101874:	5d                   	pop    %ebp$/;"	l
f0101875	obj/kern/kernel.asm	/^f0101875:	c3                   	ret    $/;"	l
f0101876	obj/kern/kernel.asm	/^f0101876:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0101879	obj/kern/kernel.asm	/^f0101879:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi$/;"	l
f0101880	obj/kern/kernel.asm	/^f0101880:	31 ff                	xor    %edi,%edi$/;"	l
f0101882	obj/kern/kernel.asm	/^f0101882:	31 c0                	xor    %eax,%eax$/;"	l
f0101884	obj/kern/kernel.asm	/^f0101884:	89 fa                	mov    %edi,%edx$/;"	l
f0101886	obj/kern/kernel.asm	/^f0101886:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0101889	obj/kern/kernel.asm	/^f0101889:	5b                   	pop    %ebx$/;"	l
f010188a	obj/kern/kernel.asm	/^f010188a:	5e                   	pop    %esi$/;"	l
f010188b	obj/kern/kernel.asm	/^f010188b:	5f                   	pop    %edi$/;"	l
f010188c	obj/kern/kernel.asm	/^f010188c:	5d                   	pop    %ebp$/;"	l
f010188d	obj/kern/kernel.asm	/^f010188d:	c3                   	ret    $/;"	l
f010188e	obj/kern/kernel.asm	/^f010188e:	66 90                	xchg   %ax,%ax$/;"	l
f0101890	obj/kern/kernel.asm	/^f0101890:	31 ff                	xor    %edi,%edi$/;"	l
f0101892	obj/kern/kernel.asm	/^f0101892:	89 e8                	mov    %ebp,%eax$/;"	l
f0101894	obj/kern/kernel.asm	/^f0101894:	89 f2                	mov    %esi,%edx$/;"	l
f0101896	obj/kern/kernel.asm	/^f0101896:	f7 f3                	div    %ebx$/;"	l
f0101898	obj/kern/kernel.asm	/^f0101898:	89 fa                	mov    %edi,%edx$/;"	l
f010189a	obj/kern/kernel.asm	/^f010189a:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f010189d	obj/kern/kernel.asm	/^f010189d:	5b                   	pop    %ebx$/;"	l
f010189e	obj/kern/kernel.asm	/^f010189e:	5e                   	pop    %esi$/;"	l
f010189f	obj/kern/kernel.asm	/^f010189f:	5f                   	pop    %edi$/;"	l
f01018a0	obj/kern/kernel.asm	/^f01018a0:	5d                   	pop    %ebp$/;"	l
f01018a1	obj/kern/kernel.asm	/^f01018a1:	c3                   	ret    $/;"	l
f01018a2	obj/kern/kernel.asm	/^f01018a2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi$/;"	l
f01018a8	obj/kern/kernel.asm	/^f01018a8:	39 f2                	cmp    %esi,%edx$/;"	l
f01018aa	obj/kern/kernel.asm	/^f01018aa:	72 06                	jb     f01018b2 <__udivdi3+0x102>$/;"	l
f01018ac	obj/kern/kernel.asm	/^f01018ac:	31 c0                	xor    %eax,%eax$/;"	l
f01018ae	obj/kern/kernel.asm	/^f01018ae:	39 eb                	cmp    %ebp,%ebx$/;"	l
f01018b0	obj/kern/kernel.asm	/^f01018b0:	77 d2                	ja     f0101884 <__udivdi3+0xd4>$/;"	l
f01018b2	obj/kern/kernel.asm	/^f01018b2:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f01018b7	obj/kern/kernel.asm	/^f01018b7:	eb cb                	jmp    f0101884 <__udivdi3+0xd4>$/;"	l
f01018b9	obj/kern/kernel.asm	/^f01018b9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f01018c0	obj/kern/kernel.asm	/^f01018c0:	89 d8                	mov    %ebx,%eax$/;"	l
f01018c2	obj/kern/kernel.asm	/^f01018c2:	31 ff                	xor    %edi,%edi$/;"	l
f01018c4	obj/kern/kernel.asm	/^f01018c4:	eb be                	jmp    f0101884 <__udivdi3+0xd4>$/;"	l
f01018c6	obj/kern/kernel.asm	/^f01018c6:	66 90                	xchg   %ax,%ax$/;"	l
f01018c8	obj/kern/kernel.asm	/^f01018c8:	66 90                	xchg   %ax,%ax$/;"	l
f01018ca	obj/kern/kernel.asm	/^f01018ca:	66 90                	xchg   %ax,%ax$/;"	l
f01018cc	obj/kern/kernel.asm	/^f01018cc:	66 90                	xchg   %ax,%ax$/;"	l
f01018ce	obj/kern/kernel.asm	/^f01018ce:	66 90                	xchg   %ax,%ax$/;"	l
f01018d0	obj/kern/kernel.asm	/^f01018d0 <__umoddi3>:$/;"	l
f01018d0	obj/kern/kernel.asm	/^f01018d0:	55                   	push   %ebp$/;"	l
f01018d1	obj/kern/kernel.asm	/^f01018d1:	57                   	push   %edi$/;"	l
f01018d2	obj/kern/kernel.asm	/^f01018d2:	56                   	push   %esi$/;"	l
f01018d3	obj/kern/kernel.asm	/^f01018d3:	53                   	push   %ebx$/;"	l
f01018d4	obj/kern/kernel.asm	/^f01018d4:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f01018d7	obj/kern/kernel.asm	/^f01018d7:	8b 6c 24 3c          	mov    0x3c(%esp),%ebp$/;"	l
f01018db	obj/kern/kernel.asm	/^f01018db:	8b 74 24 30          	mov    0x30(%esp),%esi$/;"	l
f01018df	obj/kern/kernel.asm	/^f01018df:	8b 5c 24 34          	mov    0x34(%esp),%ebx$/;"	l
f01018e3	obj/kern/kernel.asm	/^f01018e3:	8b 7c 24 38          	mov    0x38(%esp),%edi$/;"	l
f01018e7	obj/kern/kernel.asm	/^f01018e7:	85 ed                	test   %ebp,%ebp$/;"	l
f01018e9	obj/kern/kernel.asm	/^f01018e9:	89 f0                	mov    %esi,%eax$/;"	l
f01018eb	obj/kern/kernel.asm	/^f01018eb:	89 da                	mov    %ebx,%edx$/;"	l
f01018ed	obj/kern/kernel.asm	/^f01018ed:	75 19                	jne    f0101908 <__umoddi3+0x38>$/;"	l
f01018ef	obj/kern/kernel.asm	/^f01018ef:	39 df                	cmp    %ebx,%edi$/;"	l
f01018f1	obj/kern/kernel.asm	/^f01018f1:	0f 86 b1 00 00 00    	jbe    f01019a8 <__umoddi3+0xd8>$/;"	l
f01018f7	obj/kern/kernel.asm	/^f01018f7:	f7 f7                	div    %edi$/;"	l
f01018f9	obj/kern/kernel.asm	/^f01018f9:	89 d0                	mov    %edx,%eax$/;"	l
f01018fb	obj/kern/kernel.asm	/^f01018fb:	31 d2                	xor    %edx,%edx$/;"	l
f01018fd	obj/kern/kernel.asm	/^f01018fd:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0101900	obj/kern/kernel.asm	/^f0101900:	5b                   	pop    %ebx$/;"	l
f0101901	obj/kern/kernel.asm	/^f0101901:	5e                   	pop    %esi$/;"	l
f0101902	obj/kern/kernel.asm	/^f0101902:	5f                   	pop    %edi$/;"	l
f0101903	obj/kern/kernel.asm	/^f0101903:	5d                   	pop    %ebp$/;"	l
f0101904	obj/kern/kernel.asm	/^f0101904:	c3                   	ret    $/;"	l
f0101905	obj/kern/kernel.asm	/^f0101905:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0101908	obj/kern/kernel.asm	/^f0101908:	39 dd                	cmp    %ebx,%ebp$/;"	l
f010190a	obj/kern/kernel.asm	/^f010190a:	77 f1                	ja     f01018fd <__umoddi3+0x2d>$/;"	l
f010190c	obj/kern/kernel.asm	/^f010190c:	0f bd cd             	bsr    %ebp,%ecx$/;"	l
f010190f	obj/kern/kernel.asm	/^f010190f:	83 f1 1f             	xor    $0x1f,%ecx$/;"	l
f0101912	obj/kern/kernel.asm	/^f0101912:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
f0101916	obj/kern/kernel.asm	/^f0101916:	0f 84 b4 00 00 00    	je     f01019d0 <__umoddi3+0x100>$/;"	l
f010191c	obj/kern/kernel.asm	/^f010191c:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0101921	obj/kern/kernel.asm	/^f0101921:	89 c2                	mov    %eax,%edx$/;"	l
f0101923	obj/kern/kernel.asm	/^f0101923:	8b 44 24 04          	mov    0x4(%esp),%eax$/;"	l
f0101927	obj/kern/kernel.asm	/^f0101927:	29 c2                	sub    %eax,%edx$/;"	l
f0101929	obj/kern/kernel.asm	/^f0101929:	89 c1                	mov    %eax,%ecx$/;"	l
f010192b	obj/kern/kernel.asm	/^f010192b:	89 f8                	mov    %edi,%eax$/;"	l
f010192d	obj/kern/kernel.asm	/^f010192d:	d3 e5                	shl    %cl,%ebp$/;"	d
f010192f	obj/kern/kernel.asm	/^f010192f:	89 d1                	mov    %edx,%ecx$/;"	l
f0101931	obj/kern/kernel.asm	/^f0101931:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0101935	obj/kern/kernel.asm	/^f0101935:	d3 e8                	shr    %cl,%eax$/;"	d
f0101937	obj/kern/kernel.asm	/^f0101937:	09 c5                	or     %eax,%ebp$/;"	l
f0101939	obj/kern/kernel.asm	/^f0101939:	8b 44 24 04          	mov    0x4(%esp),%eax$/;"	l
f010193d	obj/kern/kernel.asm	/^f010193d:	89 c1                	mov    %eax,%ecx$/;"	l
f010193f	obj/kern/kernel.asm	/^f010193f:	d3 e7                	shl    %cl,%edi$/;"	d
f0101941	obj/kern/kernel.asm	/^f0101941:	89 d1                	mov    %edx,%ecx$/;"	l
f0101943	obj/kern/kernel.asm	/^f0101943:	89 7c 24 08          	mov    %edi,0x8(%esp)$/;"	l
f0101947	obj/kern/kernel.asm	/^f0101947:	89 df                	mov    %ebx,%edi$/;"	l
f0101949	obj/kern/kernel.asm	/^f0101949:	d3 ef                	shr    %cl,%edi$/;"	d
f010194b	obj/kern/kernel.asm	/^f010194b:	89 c1                	mov    %eax,%ecx$/;"	l
f010194d	obj/kern/kernel.asm	/^f010194d:	89 f0                	mov    %esi,%eax$/;"	l
f010194f	obj/kern/kernel.asm	/^f010194f:	d3 e3                	shl    %cl,%ebx$/;"	d
f0101951	obj/kern/kernel.asm	/^f0101951:	89 d1                	mov    %edx,%ecx$/;"	l
f0101953	obj/kern/kernel.asm	/^f0101953:	89 fa                	mov    %edi,%edx$/;"	l
f0101955	obj/kern/kernel.asm	/^f0101955:	d3 e8                	shr    %cl,%eax$/;"	d
f0101957	obj/kern/kernel.asm	/^f0101957:	0f b6 4c 24 04       	movzbl 0x4(%esp),%ecx$/;"	l
f010195c	obj/kern/kernel.asm	/^f010195c:	09 d8                	or     %ebx,%eax$/;"	l
f010195e	obj/kern/kernel.asm	/^f010195e:	f7 f5                	div    %ebp$/;"	l
f0101960	obj/kern/kernel.asm	/^f0101960:	d3 e6                	shl    %cl,%esi$/;"	d
f0101962	obj/kern/kernel.asm	/^f0101962:	89 d1                	mov    %edx,%ecx$/;"	l
f0101964	obj/kern/kernel.asm	/^f0101964:	f7 64 24 08          	mull   0x8(%esp)$/;"	l
f0101968	obj/kern/kernel.asm	/^f0101968:	39 d1                	cmp    %edx,%ecx$/;"	l
f010196a	obj/kern/kernel.asm	/^f010196a:	89 c3                	mov    %eax,%ebx$/;"	l
f010196c	obj/kern/kernel.asm	/^f010196c:	89 d7                	mov    %edx,%edi$/;"	l
f010196e	obj/kern/kernel.asm	/^f010196e:	72 06                	jb     f0101976 <__umoddi3+0xa6>$/;"	l
f0101970	obj/kern/kernel.asm	/^f0101970:	75 0e                	jne    f0101980 <__umoddi3+0xb0>$/;"	l
f0101972	obj/kern/kernel.asm	/^f0101972:	39 c6                	cmp    %eax,%esi$/;"	l
f0101974	obj/kern/kernel.asm	/^f0101974:	73 0a                	jae    f0101980 <__umoddi3+0xb0>$/;"	l
f0101976	obj/kern/kernel.asm	/^f0101976:	2b 44 24 08          	sub    0x8(%esp),%eax$/;"	l
f010197a	obj/kern/kernel.asm	/^f010197a:	19 ea                	sbb    %ebp,%edx$/;"	l
f010197c	obj/kern/kernel.asm	/^f010197c:	89 d7                	mov    %edx,%edi$/;"	l
f010197e	obj/kern/kernel.asm	/^f010197e:	89 c3                	mov    %eax,%ebx$/;"	l
f0101980	obj/kern/kernel.asm	/^f0101980:	89 ca                	mov    %ecx,%edx$/;"	l
f0101982	obj/kern/kernel.asm	/^f0101982:	0f b6 4c 24 0c       	movzbl 0xc(%esp),%ecx$/;"	l
f0101987	obj/kern/kernel.asm	/^f0101987:	29 de                	sub    %ebx,%esi$/;"	l
f0101989	obj/kern/kernel.asm	/^f0101989:	19 fa                	sbb    %edi,%edx$/;"	l
f010198b	obj/kern/kernel.asm	/^f010198b:	8b 5c 24 04          	mov    0x4(%esp),%ebx$/;"	l
f010198f	obj/kern/kernel.asm	/^f010198f:	89 d0                	mov    %edx,%eax$/;"	l
f0101991	obj/kern/kernel.asm	/^f0101991:	d3 e0                	shl    %cl,%eax$/;"	d
f0101993	obj/kern/kernel.asm	/^f0101993:	89 d9                	mov    %ebx,%ecx$/;"	l
f0101995	obj/kern/kernel.asm	/^f0101995:	d3 ee                	shr    %cl,%esi$/;"	d
f0101997	obj/kern/kernel.asm	/^f0101997:	d3 ea                	shr    %cl,%edx$/;"	d
f0101999	obj/kern/kernel.asm	/^f0101999:	09 f0                	or     %esi,%eax$/;"	l
f010199b	obj/kern/kernel.asm	/^f010199b:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f010199e	obj/kern/kernel.asm	/^f010199e:	5b                   	pop    %ebx$/;"	l
f010199f	obj/kern/kernel.asm	/^f010199f:	5e                   	pop    %esi$/;"	l
f01019a0	obj/kern/kernel.asm	/^f01019a0:	5f                   	pop    %edi$/;"	l
f01019a1	obj/kern/kernel.asm	/^f01019a1:	5d                   	pop    %ebp$/;"	l
f01019a2	obj/kern/kernel.asm	/^f01019a2:	c3                   	ret    $/;"	l
f01019a3	obj/kern/kernel.asm	/^f01019a3:	90                   	nop$/;"	l
f01019a4	obj/kern/kernel.asm	/^f01019a4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f01019a8	obj/kern/kernel.asm	/^f01019a8:	85 ff                	test   %edi,%edi$/;"	l
f01019aa	obj/kern/kernel.asm	/^f01019aa:	89 f9                	mov    %edi,%ecx$/;"	l
f01019ac	obj/kern/kernel.asm	/^f01019ac:	75 0b                	jne    f01019b9 <__umoddi3+0xe9>$/;"	l
f01019ae	obj/kern/kernel.asm	/^f01019ae:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f01019b3	obj/kern/kernel.asm	/^f01019b3:	31 d2                	xor    %edx,%edx$/;"	l
f01019b5	obj/kern/kernel.asm	/^f01019b5:	f7 f7                	div    %edi$/;"	l
f01019b7	obj/kern/kernel.asm	/^f01019b7:	89 c1                	mov    %eax,%ecx$/;"	l
f01019b9	obj/kern/kernel.asm	/^f01019b9:	89 d8                	mov    %ebx,%eax$/;"	l
f01019bb	obj/kern/kernel.asm	/^f01019bb:	31 d2                	xor    %edx,%edx$/;"	l
f01019bd	obj/kern/kernel.asm	/^f01019bd:	f7 f1                	div    %ecx$/;"	l
f01019bf	obj/kern/kernel.asm	/^f01019bf:	89 f0                	mov    %esi,%eax$/;"	l
f01019c1	obj/kern/kernel.asm	/^f01019c1:	f7 f1                	div    %ecx$/;"	l
f01019c3	obj/kern/kernel.asm	/^f01019c3:	e9 31 ff ff ff       	jmp    f01018f9 <__umoddi3+0x29>$/;"	l
f01019c8	obj/kern/kernel.asm	/^f01019c8:	90                   	nop$/;"	l
f01019c9	obj/kern/kernel.asm	/^f01019c9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f01019d0	obj/kern/kernel.asm	/^f01019d0:	39 dd                	cmp    %ebx,%ebp$/;"	l
f01019d2	obj/kern/kernel.asm	/^f01019d2:	72 08                	jb     f01019dc <__umoddi3+0x10c>$/;"	l
f01019d4	obj/kern/kernel.asm	/^f01019d4:	39 f7                	cmp    %esi,%edi$/;"	l
f01019d6	obj/kern/kernel.asm	/^f01019d6:	0f 87 21 ff ff ff    	ja     f01018fd <__umoddi3+0x2d>$/;"	l
f01019dc	obj/kern/kernel.asm	/^f01019dc:	89 da                	mov    %ebx,%edx$/;"	l
f01019de	obj/kern/kernel.asm	/^f01019de:	89 f0                	mov    %esi,%eax$/;"	l
f01019e0	obj/kern/kernel.asm	/^f01019e0:	29 f8                	sub    %edi,%eax$/;"	l
f01019e2	obj/kern/kernel.asm	/^f01019e2:	19 ea                	sbb    %ebp,%edx$/;"	l
f01019e4	obj/kern/kernel.asm	/^f01019e4:	e9 14 ff ff ff       	jmp    f01018fd <__umoddi3+0x2d>$/;"	l
fileno	gradelib.py	/^    def fileno(self):$/;"	m	class:GDBClient
fileno	gradelib.py	/^    def fileno(self):$/;"	m	class:QEMU
fs_test	fs/test.c	/^fs_test(void)$/;"	f	typeref:typename:void
func	kern/monitor.c	/^	int (*func)(int argc, char** argv, struct Trapframe* tf);$/;"	m	struct:Command	typeref:typename:int (*)(int argc,char ** argv,struct Trapframe * tf)	file:
gd_args	inc/mmu.h	/^	unsigned gd_args : 5;        \/\/ # args, 0 for interrupt\/trap gates$/;"	m	struct:Gatedesc	typeref:typename:unsigned:5
gd_dpl	inc/mmu.h	/^	unsigned gd_dpl : 2;         \/\/ descriptor(meaning new) privilege level$/;"	m	struct:Gatedesc	typeref:typename:unsigned:2
gd_off_15_0	inc/mmu.h	/^	unsigned gd_off_15_0 : 16;   \/\/ low 16 bits of offset in segment$/;"	m	struct:Gatedesc	typeref:typename:unsigned:16
gd_off_31_16	inc/mmu.h	/^	unsigned gd_off_31_16 : 16;  \/\/ high bits of offset in segment$/;"	m	struct:Gatedesc	typeref:typename:unsigned:16
gd_p	inc/mmu.h	/^	unsigned gd_p : 1;           \/\/ Present$/;"	m	struct:Gatedesc	typeref:typename:unsigned:1
gd_rsv1	inc/mmu.h	/^	unsigned gd_rsv1 : 3;        \/\/ reserved(should be zero I guess)$/;"	m	struct:Gatedesc	typeref:typename:unsigned:3
gd_s	inc/mmu.h	/^	unsigned gd_s : 1;           \/\/ must be 0 (system)$/;"	m	struct:Gatedesc	typeref:typename:unsigned:1
gd_sel	inc/mmu.h	/^	unsigned gd_sel : 16;        \/\/ segment selector$/;"	m	struct:Gatedesc	typeref:typename:unsigned:16
gd_type	inc/mmu.h	/^	unsigned gd_type : 4;        \/\/ type(STS_{TG,IG32,TG32})$/;"	m	struct:Gatedesc	typeref:typename:unsigned:4
gdb	GNUmakefile	/^gdb:$/;"	t
gdt	boot/boot.S	/^gdt:$/;"	l
gdtdesc	boot/boot.S	/^gdtdesc:$/;"	l
get_current_test	gradelib.py	/^def get_current_test():$/;"	f
get_gdb_port	gradelib.py	/^    def get_gdb_port():$/;"	m	class:QEMU
getchar	kern/console.c	/^getchar(void)$/;"	f	typeref:typename:int
getint	lib/printfmt.c	/^getint(va_list *ap, int lflag)$/;"	f	typeref:typename:long long	file:
getuint	lib/printfmt.c	/^getuint(va_list *ap, int lflag)$/;"	f	typeref:typename:unsigned long long	file:
git-handin	GNUmakefile	/^git-handin: handin-check$/;"	t
grade	GNUmakefile	/^grade:$/;"	t
handin	GNUmakefile	/^handin: tarball-pref myapi.key$/;"	t
handin-check	GNUmakefile	/^handin-check:$/;"	t
handle_output	gradelib.py	/^        def handle_output(output):$/;"	f	function:call_on_line.setup_call_on_line	file:
handle_read	gradelib.py	/^    def handle_read(self):$/;"	m	class:GDBClient
handle_read	gradelib.py	/^    def handle_read(self):$/;"	m	class:QEMU
i	obj/kern/kernel.asm	/^	i = 0;$/;"	d
i386_init	kern/init.c	/^i386_init(void)$/;"	f	typeref:typename:void
inb	inc/x86.h	/^inb(int port)$/;"	f	typeref:typename:uint8_t
inl	inc/x86.h	/^inl(int port)$/;"	f	typeref:typename:uint32_t
insb	inc/x86.h	/^insb(int port, void *addr, int cnt)$/;"	f	typeref:typename:void
insl	inc/x86.h	/^insl(int port, void *addr, int cnt)$/;"	f	typeref:typename:void
insw	inc/x86.h	/^insw(int port, void *addr, int cnt)$/;"	f	typeref:typename:void
int	obj/kern/kernel.asm	/^int$/;"	l
int16_t	inc/types.h	/^typedef short int16_t;$/;"	t	typeref:typename:short
int32_t	inc/types.h	/^typedef int int32_t;$/;"	t	typeref:typename:int
int64_t	inc/types.h	/^typedef long long int64_t;$/;"	t	typeref:typename:long long
int8_t	inc/types.h	/^typedef __signed char int8_t;$/;"	t	typeref:typename:__signed char
intptr_t	inc/types.h	/^typedef int32_t intptr_t;$/;"	t	typeref:typename:int32_t
invlpg	inc/x86.h	/^invlpg(void *addr)$/;"	f	typeref:typename:void
inw	inc/x86.h	/^inw(int port)$/;"	f	typeref:typename:uint16_t
iscons	kern/console.c	/^iscons(int fdnum)$/;"	f	typeref:typename:int
kbd_init	kern/console.c	/^kbd_init(void)$/;"	f	typeref:typename:void	file:
kbd_intr	kern/console.c	/^kbd_intr(void)$/;"	f	typeref:typename:void
kbd_proc_data	kern/console.c	/^kbd_proc_data(void)$/;"	f	typeref:typename:int	file:
kill	gradelib.py	/^    def kill(self):$/;"	m	class:QEMU
l	obj/kern/kernel.asm	/^			l = m;$/;"	d
l	obj/kern/kernel.asm	/^			l = true_m + 1;$/;"	d
lcr0	inc/x86.h	/^lcr0(uint32_t val)$/;"	f	typeref:typename:void
lcr3	inc/x86.h	/^lcr3(uint32_t val)$/;"	f	typeref:typename:void
lcr4	inc/x86.h	/^lcr4(uint32_t val)$/;"	f	typeref:typename:void
lfile	obj/kern/kernel.asm	/^	lfile = 0;$/;"	d
lflag	obj/kern/kernel.asm	/^		lflag = 0;$/;"	d
lfun	obj/kern/kernel.asm	/^	lfun = lfile;$/;"	d
lgdt	inc/x86.h	/^lgdt(void *p)$/;"	f	typeref:typename:void
lidt	inc/x86.h	/^lidt(void *p)$/;"	f	typeref:typename:void
lldt	inc/x86.h	/^lldt(uint16_t sel)$/;"	f	typeref:typename:void
lline	obj/kern/kernel.asm	/^		lline = lfile;$/;"	d
long	obj/kern/kernel.asm	/^long$/;"	l
lpt_putc	kern/console.c	/^lpt_putc(int c)$/;"	f	typeref:typename:void	file:
ltr	inc/x86.h	/^ltr(uint16_t sel)$/;"	f	typeref:typename:void
make	gradelib.py	/^def make(*target):$/;"	f
match	gradelib.py	/^    def match(self, *args, **kwargs):$/;"	m	class:Runner
maybe_unlink	gradelib.py	/^def maybe_unlink(*paths):$/;"	f
memcmp	lib/string.c	/^memcmp(const void *v1, const void *v2, size_t n)$/;"	f	typeref:typename:int
memcpy	lib/string.c	/^memcpy(void *dst, const void *src, size_t n)$/;"	f	typeref:typename:void *
memfind	lib/string.c	/^memfind(const void *s, int c, size_t n)$/;"	f	typeref:typename:void *
memmove	lib/string.c	/^memmove(void *dst, const void *src, size_t n)$/;"	f	typeref:typename:void *
memset	lib/string.c	/^memset(void *v, int c, size_t n)$/;"	f	typeref:typename:void *
mon_backtrace	kern/monitor.c	/^mon_backtrace(int argc, char **argv, struct Trapframe *tf)$/;"	f	typeref:typename:int
mon_help	kern/monitor.c	/^mon_help(int argc, char **argv, struct Trapframe *tf)$/;"	f	typeref:typename:int
mon_kerninfo	kern/monitor.c	/^mon_kerninfo(int argc, char **argv, struct Trapframe *tf)$/;"	f	typeref:typename:int
monitor	kern/monitor.c	/^monitor(struct Trapframe *tf)$/;"	f	typeref:typename:void
msg	fs/test.c	/^static char *msg = "This is the NEW message of the day!\\n\\n";$/;"	v	typeref:typename:char *	file:
myapi.key	GNUmakefile	/^myapi.key:$/;"	t
n_desc	inc/stab.h	/^	uint16_t n_desc;        \/\/ description field$/;"	m	struct:Stab	typeref:typename:uint16_t
n_other	inc/stab.h	/^	uint8_t n_other;        \/\/ misc info (usually empty)$/;"	m	struct:Stab	typeref:typename:uint8_t
n_strx	inc/stab.h	/^	uint32_t n_strx;	\/\/ index into string table of name$/;"	m	struct:Stab	typeref:typename:uint32_t
n_type	inc/stab.h	/^	uint8_t n_type;         \/\/ type of symbol$/;"	m	struct:Stab	typeref:typename:uint8_t
n_value	inc/stab.h	/^	uintptr_t n_value;	\/\/ value of symbol$/;"	m	struct:Stab	typeref:typename:uintptr_t
name	kern/monitor.c	/^	const char *name;$/;"	m	struct:Command	typeref:typename:const char *	file:
normalmap	kern/console.c	/^static uint8_t normalmap[256] =$/;"	v	typeref:typename:uint8_t[256]	file:
num	obj/kern/kernel.asm	/^				num = -(long long) num;$/;"	d
num	obj/kern/kernel.asm	/^			num = (unsigned long long)$/;"	d
num	obj/kern/kernel.asm	/^			num = getint(&ap, lflag);$/;"	d
off_t	inc/types.h	/^typedef int32_t off_t;$/;"	t	typeref:typename:int32_t
offset	obj/boot/boot.asm	/^	offset = (offset \/ SECTSIZE) + 1;$/;"	d
offsetof	inc/types.h	/^#define offsetof(/;"	d
outb	inc/x86.h	/^outb(int port, uint8_t data)$/;"	f	typeref:typename:void
outl	inc/x86.h	/^outl(int port, uint32_t data)$/;"	f	typeref:typename:void
outsb	inc/x86.h	/^outsb(int port, const void *addr, int cnt)$/;"	f	typeref:typename:void
outsl	inc/x86.h	/^outsl(int port, const void *addr, int cnt)$/;"	f	typeref:typename:void
outsw	inc/x86.h	/^outsw(int port, const void *addr, int cnt)$/;"	f	typeref:typename:void
outw	inc/x86.h	/^outw(int port, uint16_t data)$/;"	f	typeref:typename:void
p	obj/kern/kernel.asm	/^				p = "(null)";$/;"	d
p_align	inc/elf.h	/^	uint32_t p_align;$/;"	m	struct:Proghdr	typeref:typename:uint32_t
p_filesz	inc/elf.h	/^	uint32_t p_filesz;$/;"	m	struct:Proghdr	typeref:typename:uint32_t
p_flags	inc/elf.h	/^	uint32_t p_flags;$/;"	m	struct:Proghdr	typeref:typename:uint32_t
p_memsz	inc/elf.h	/^	uint32_t p_memsz;$/;"	m	struct:Proghdr	typeref:typename:uint32_t
p_offset	inc/elf.h	/^	uint32_t p_offset;$/;"	m	struct:Proghdr	typeref:typename:uint32_t
p_pa	inc/elf.h	/^	uint32_t p_pa;$/;"	m	struct:Proghdr	typeref:typename:uint32_t
p_type	inc/elf.h	/^	uint32_t p_type;$/;"	m	struct:Proghdr	typeref:typename:uint32_t
p_va	inc/elf.h	/^	uint32_t p_va;$/;"	m	struct:Proghdr	typeref:typename:uint32_t
padc	obj/kern/kernel.asm	/^			padc = '-';$/;"	d
padc	obj/kern/kernel.asm	/^			padc = '0';$/;"	d
padc	obj/kern/kernel.asm	/^		padc = ' ';$/;"	d
panic	inc/assert.h	/^#define panic(/;"	d
panicstr	kern/init.c	/^const char *panicstr;$/;"	v	typeref:typename:const char *
panicstr	obj/kern/kernel.asm	/^	panicstr = fmt;$/;"	d
pd_base	inc/mmu.h	/^	uint32_t pd_base;		\/\/ Base address$/;"	m	struct:Pseudodesc	typeref:typename:uint32_t
pd_lim	inc/mmu.h	/^	uint16_t pd_lim;		\/\/ Limit$/;"	m	struct:Pseudodesc	typeref:typename:uint16_t
pde_t	inc/memlayout.h	/^typedef uint32_t pde_t;$/;"	t	typeref:typename:uint32_t
ph	obj/boot/boot.asm	/^	ph = (struct Proghdr *) ((uint8_t *) ELFHDR + ELFHDR->e_phoff);$/;"	d
physaddr_t	inc/types.h	/^typedef uint32_t physaddr_t;$/;"	t	typeref:typename:uint32_t
pos	obj/kern/kernel.asm	/^	pos = inb(addr_6845 + 1) << 8;$/;"	d
post_make	gradelib.py	/^def post_make():$/;"	f
ppn_t	inc/types.h	/^typedef uint32_t ppn_t;$/;"	t	typeref:typename:uint32_t
pre-qemu	GNUmakefile	/^pre-qemu: .gdbinit$/;"	t
pre_make	gradelib.py	/^def pre_make():$/;"	f
precision	obj/kern/kernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/kern/kernel.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/kern/kernel.asm	/^		precision = -1;$/;"	d
print-gdbport	GNUmakefile	/^print-gdbport:$/;"	t
print-qemu	GNUmakefile	/^print-qemu:$/;"	t
printfmt	lib/printfmt.c	/^printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...)$/;"	f	typeref:typename:void
printnum	lib/printfmt.c	/^printnum(void (*putch)(int, void*), void *putdat,$/;"	f	typeref:typename:void	file:
protcseg	boot/boot.S	/^protcseg:$/;"	l
protcseg	obj/boot/boot.asm	/^protcseg:$/;"	l
pte_t	inc/memlayout.h	/^typedef uint32_t pte_t;$/;"	t	typeref:typename:uint32_t
putch	kern/printf.c	/^putch(int ch, int *cnt)$/;"	f	typeref:typename:void	file:
qemu	GNUmakefile	/^qemu: $(IMAGES) pre-qemu$/;"	t
qemu-gdb	GNUmakefile	/^qemu-gdb: $(IMAGES) pre-qemu$/;"	t
qemu-nox	GNUmakefile	/^qemu-nox: $(IMAGES) pre-qemu$/;"	t
qemu-nox-gdb	GNUmakefile	/^qemu-nox-gdb: $(IMAGES) pre-qemu$/;"	t
r	grade-lab1	/^r = Runner(save("jos.out"),$/;"	v
r	obj/kern/kernel.asm	/^			r = m - 1;$/;"	d
rc	obj/kern/kernel.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rcr0	inc/x86.h	/^rcr0(void)$/;"	f	typeref:typename:uint32_t
rcr2	inc/x86.h	/^rcr2(void)$/;"	f	typeref:typename:uint32_t
rcr3	inc/x86.h	/^rcr3(void)$/;"	f	typeref:typename:uint32_t
rcr4	inc/x86.h	/^rcr4(void)$/;"	f	typeref:typename:uint32_t
read_ebp	inc/x86.h	/^read_ebp(void)$/;"	f	typeref:typename:uint32_t
read_eflags	inc/x86.h	/^read_eflags(void)$/;"	f	typeref:typename:uint32_t
read_esp	inc/x86.h	/^read_esp(void)$/;"	f	typeref:typename:uint32_t
read_tsc	inc/x86.h	/^read_tsc(void)$/;"	f	typeref:typename:uint64_t
readdeps	mergedep.pl	/^sub readdeps {$/;"	s
readline	lib/readline.c	/^readline(const char *prompt)$/;"	f	typeref:typename:char *
readsect	boot/main.c	/^readsect(void *dst, uint32_t offset)$/;"	f	typeref:typename:void
readseg	boot/main.c	/^readseg(uint32_t pa, uint32_t count, uint32_t offset)$/;"	f	typeref:typename:void
realclean	GNUmakefile	/^realclean: clean$/;"	t
register_test	gradelib.py	/^    def register_test(fn, title=title):$/;"	f	function:test	file:
relocated	kern/entry.S	/^relocated:$/;"	l
relocated	obj/kern/kernel.asm	/^relocated:$/;"	l
reset_fs	gradelib.py	/^def reset_fs():$/;"	f
ret	obj/kern/kernel.asm	/^	ret = dst;$/;"	d
rfile	obj/kern/kernel.asm	/^	rfile = (stab_end - stabs) - 1;$/;"	d
rfun	obj/kern/kernel.asm	/^	rfun = rfile;$/;"	d
rline	obj/kern/kernel.asm	/^		rline = rfile;$/;"	d
rpos	kern/console.c	/^	uint32_t rpos;$/;"	m	struct:__anon9d6ad5280108	typeref:typename:uint32_t	file:
run_qemu	gradelib.py	/^    def run_qemu(self, *monitors, **kw):$/;"	m	class:Runner
run_qemu_kw	gradelib.py	/^        def run_qemu_kw(target_base="qemu", make_args=[], timeout=30):$/;"	f	member:Runner.run_qemu	file:
run_test	gradelib.py	/^        def run_test():$/;"	f	function:test.register_test	file:
run_tests	gradelib.py	/^def run_tests():$/;"	f
runcmd	kern/monitor.c	/^runcmd(char *buf, struct Trapframe *tf)$/;"	f	typeref:typename:int	file:
s	obj/kern/kernel.asm	/^	s = src;$/;"	d
save	gradelib.py	/^def save(path):$/;"	f
save_on_finish	gradelib.py	/^    def save_on_finish(fail):$/;"	f	function:save	file:
sd_avl	inc/mmu.h	/^	unsigned sd_avl : 1;        \/\/ Unused (available for software use)$/;"	m	struct:Segdesc	typeref:typename:unsigned:1
sd_base_15_0	inc/mmu.h	/^	unsigned sd_base_15_0 : 16; \/\/ Low bits of segment base address$/;"	m	struct:Segdesc	typeref:typename:unsigned:16
sd_base_23_16	inc/mmu.h	/^	unsigned sd_base_23_16 : 8; \/\/ Middle bits of segment base address$/;"	m	struct:Segdesc	typeref:typename:unsigned:8
sd_base_31_24	inc/mmu.h	/^	unsigned sd_base_31_24 : 8; \/\/ High bits of segment base address$/;"	m	struct:Segdesc	typeref:typename:unsigned:8
sd_db	inc/mmu.h	/^	unsigned sd_db : 1;         \/\/ 0 = 16-bit segment, 1 = 32-bit segment$/;"	m	struct:Segdesc	typeref:typename:unsigned:1
sd_dpl	inc/mmu.h	/^	unsigned sd_dpl : 2;        \/\/ Descriptor Privilege Level$/;"	m	struct:Segdesc	typeref:typename:unsigned:2
sd_g	inc/mmu.h	/^	unsigned sd_g : 1;          \/\/ Granularity: limit scaled by 4K when set$/;"	m	struct:Segdesc	typeref:typename:unsigned:1
sd_lim_15_0	inc/mmu.h	/^	unsigned sd_lim_15_0 : 16;  \/\/ Low bits of segment limit$/;"	m	struct:Segdesc	typeref:typename:unsigned:16
sd_lim_19_16	inc/mmu.h	/^	unsigned sd_lim_19_16 : 4;  \/\/ High bits of segment limit$/;"	m	struct:Segdesc	typeref:typename:unsigned:4
sd_p	inc/mmu.h	/^	unsigned sd_p : 1;          \/\/ Present$/;"	m	struct:Segdesc	typeref:typename:unsigned:1
sd_rsv1	inc/mmu.h	/^	unsigned sd_rsv1 : 1;       \/\/ Reserved$/;"	m	struct:Segdesc	typeref:typename:unsigned:1
sd_s	inc/mmu.h	/^	unsigned sd_s : 1;          \/\/ 0 = system, 1 = application$/;"	m	struct:Segdesc	typeref:typename:unsigned:1
sd_type	inc/mmu.h	/^	unsigned sd_type : 4;       \/\/ Segment type (see STS_ constants)$/;"	m	struct:Segdesc	typeref:typename:unsigned:4
serial_exists	kern/console.c	/^static bool serial_exists;$/;"	v	typeref:typename:bool	file:
serial_exists	obj/kern/kernel.asm	/^	serial_exists = (inb(COM1+COM_LSR) != 0xFF);$/;"	d
serial_init	kern/console.c	/^serial_init(void)$/;"	f	typeref:typename:void	file:
serial_intr	kern/console.c	/^serial_intr(void)$/;"	f	typeref:typename:void
serial_proc_data	kern/console.c	/^serial_proc_data(void)$/;"	f	typeref:typename:int	file:
serial_putc	kern/console.c	/^serial_putc(int c)$/;"	f	typeref:typename:void	file:
setup_breakpoint	gradelib.py	/^    def setup_breakpoint(runner):$/;"	f	function:stop_breakpoint	file:
setup_call_on_line	gradelib.py	/^    def setup_call_on_line(runner):$/;"	f	function:call_on_line	file:
setup_save	gradelib.py	/^    def setup_save(runner):$/;"	f	function:save	file:
sh_addr	inc/elf.h	/^	uint32_t sh_addr;$/;"	m	struct:Secthdr	typeref:typename:uint32_t
sh_addralign	inc/elf.h	/^	uint32_t sh_addralign;$/;"	m	struct:Secthdr	typeref:typename:uint32_t
sh_entsize	inc/elf.h	/^	uint32_t sh_entsize;$/;"	m	struct:Secthdr	typeref:typename:uint32_t
sh_flags	inc/elf.h	/^	uint32_t sh_flags;$/;"	m	struct:Secthdr	typeref:typename:uint32_t
sh_info	inc/elf.h	/^	uint32_t sh_info;$/;"	m	struct:Secthdr	typeref:typename:uint32_t
sh_link	inc/elf.h	/^	uint32_t sh_link;$/;"	m	struct:Secthdr	typeref:typename:uint32_t
sh_name	inc/elf.h	/^	uint32_t sh_name;$/;"	m	struct:Secthdr	typeref:typename:uint32_t
sh_offset	inc/elf.h	/^	uint32_t sh_offset;$/;"	m	struct:Secthdr	typeref:typename:uint32_t
sh_size	inc/elf.h	/^	uint32_t sh_size;$/;"	m	struct:Secthdr	typeref:typename:uint32_t
sh_type	inc/elf.h	/^	uint32_t sh_type;$/;"	m	struct:Secthdr	typeref:typename:uint32_t
shiftcode	kern/console.c	/^static uint8_t shiftcode[256] =$/;"	v	typeref:typename:uint8_t[256]	file:
shiftmap	kern/console.c	/^static uint8_t shiftmap[256] =$/;"	v	typeref:typename:uint8_t[256]	file:
show_command	gradelib.py	/^def show_command(cmd):$/;"	f
show_part	gradelib.py	/^    def show_part():$/;"	f	function:end_part	file:
size_t	inc/types.h	/^typedef uint32_t size_t;$/;"	t	typeref:typename:uint32_t
size_t	obj/kern/kernel.asm	/^size_t$/;"	l
snprintf	lib/printfmt.c	/^snprintf(char *buf, int n, const char *fmt, ...)$/;"	f	typeref:typename:int
spin	boot/boot.S	/^spin:$/;"	l
spin	kern/entry.S	/^spin:	jmp	spin$/;"	l
spin	obj/boot/boot.asm	/^spin:$/;"	l
spin	obj/kern/kernel.asm	/^spin:	jmp	spin$/;"	l
sprintbuf	lib/printfmt.c	/^struct sprintbuf {$/;"	s	file:
sprintputch	lib/printfmt.c	/^sprintputch(int ch, struct sprintbuf *b)$/;"	f	typeref:typename:void	file:
ssize_t	inc/types.h	/^typedef int32_t ssize_t;$/;"	t	typeref:typename:int32_t
stab_binsearch	kern/kdebug.c	/^stab_binsearch(const struct Stab *stabs, int *region_left, int *region_right,$/;"	f	typeref:typename:void	file:
start	boot/boot.S	/^start:$/;"	l
start	obj/boot/boot.asm	/^start:$/;"	l
static	obj/boot/boot.asm	/^static inline uint8_t$/;"	l
static	obj/boot/boot.asm	/^static inline void$/;"	l
static	obj/kern/kernel.asm	/^static bool serial_exists;$/;"	l
static	obj/kern/kernel.asm	/^static char buf[BUFLEN];$/;"	l
static	obj/kern/kernel.asm	/^static inline uint8_t$/;"	l
static	obj/kern/kernel.asm	/^static inline void$/;"	l
static	obj/kern/kernel.asm	/^static int$/;"	l
static	obj/kern/kernel.asm	/^static void$/;"	l
static_assert	inc/assert.h	/^#define static_assert(/;"	d
stop	gradelib.py	/^    def stop(line):$/;"	f	function:stop_on_line	file:
stop_breakpoint	gradelib.py	/^def stop_breakpoint(addr):$/;"	f
stop_on_line	gradelib.py	/^def stop_on_line(regexp):$/;"	f
str1	user/sendpage.c	/^const char *str1 = "hello child environment! how are you?";$/;"	v	typeref:typename:const char *
str2	user/sendpage.c	/^const char *str2 = "hello parent environment! I'm good.";$/;"	v	typeref:typename:const char *
strcat	lib/string.c	/^strcat(char *dst, const char *src)$/;"	f	typeref:typename:char *
strchr	lib/string.c	/^strchr(const char *s, char c)$/;"	f	typeref:typename:char *
strcmp	lib/string.c	/^strcmp(const char *p, const char *q)$/;"	f	typeref:typename:int
strcpy	lib/string.c	/^strcpy(char *dst, const char *src)$/;"	f	typeref:typename:char *
strfind	lib/string.c	/^strfind(const char *s, char c)$/;"	f	typeref:typename:char *
strlcpy	lib/string.c	/^strlcpy(char *dst, const char *src, size_t size)$/;"	f	typeref:typename:size_t
strlen	lib/string.c	/^strlen(const char *s)$/;"	f	typeref:typename:int
strncmp	lib/string.c	/^strncmp(const char *p, const char *q, size_t n)$/;"	f	typeref:typename:int
strncpy	lib/string.c	/^strncpy(char *dst, const char *src, size_t size) {$/;"	f	typeref:typename:char *
strnlen	lib/string.c	/^strnlen(const char *s, size_t size)$/;"	f	typeref:typename:int
strtol	lib/string.c	/^strtol(const char *s, char **endptr, int base)$/;"	f	typeref:typename:long
tarball-pref	GNUmakefile	/^tarball-pref: handin-check$/;"	t
test	gradelib.py	/^def test(points, title=None, parent=None):$/;"	f
test_backtrace	kern/init.c	/^test_backtrace(int x)$/;"	f	typeref:typename:void
test_backtrace_arguments	grade-lab1	/^def test_backtrace_arguments():$/;"	f
test_backtrace_count	grade-lab1	/^def test_backtrace_count():$/;"	f
test_backtrace_lines	grade-lab1	/^def test_backtrace_lines():$/;"	f
test_backtrace_symbols	grade-lab1	/^def test_backtrace_symbols():$/;"	f
test_jos	grade-lab1	/^def test_jos():$/;"	f
test_printf	grade-lab1	/^def test_printf():$/;"	f
tlbflush	inc/x86.h	/^tlbflush(void)$/;"	f	typeref:typename:void
togglecode	kern/console.c	/^static uint8_t togglecode[256] =$/;"	v	typeref:typename:uint8_t[256]	file:
ts_cr3	inc/mmu.h	/^	physaddr_t ts_cr3;	\/\/ Page directory base$/;"	m	struct:Taskstate	typeref:typename:physaddr_t
ts_cs	inc/mmu.h	/^	uint16_t ts_cs;$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_ds	inc/mmu.h	/^	uint16_t ts_ds;$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_eax	inc/mmu.h	/^	uint32_t ts_eax;	\/\/ More saved state (registers)$/;"	m	struct:Taskstate	typeref:typename:uint32_t
ts_ebp	inc/mmu.h	/^	uintptr_t ts_ebp;$/;"	m	struct:Taskstate	typeref:typename:uintptr_t
ts_ebx	inc/mmu.h	/^	uint32_t ts_ebx;$/;"	m	struct:Taskstate	typeref:typename:uint32_t
ts_ecx	inc/mmu.h	/^	uint32_t ts_ecx;$/;"	m	struct:Taskstate	typeref:typename:uint32_t
ts_edi	inc/mmu.h	/^	uint32_t ts_edi;$/;"	m	struct:Taskstate	typeref:typename:uint32_t
ts_edx	inc/mmu.h	/^	uint32_t ts_edx;$/;"	m	struct:Taskstate	typeref:typename:uint32_t
ts_eflags	inc/mmu.h	/^	uint32_t ts_eflags;$/;"	m	struct:Taskstate	typeref:typename:uint32_t
ts_eip	inc/mmu.h	/^	uintptr_t ts_eip;	\/\/ Saved state from last task switch$/;"	m	struct:Taskstate	typeref:typename:uintptr_t
ts_es	inc/mmu.h	/^	uint16_t ts_es;		\/\/ Even more saved state (segment selectors)$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_esi	inc/mmu.h	/^	uint32_t ts_esi;$/;"	m	struct:Taskstate	typeref:typename:uint32_t
ts_esp	inc/mmu.h	/^	uintptr_t ts_esp;$/;"	m	struct:Taskstate	typeref:typename:uintptr_t
ts_esp0	inc/mmu.h	/^	uintptr_t ts_esp0;	\/\/ Stack pointers and segment selectors$/;"	m	struct:Taskstate	typeref:typename:uintptr_t
ts_esp1	inc/mmu.h	/^	uintptr_t ts_esp1;$/;"	m	struct:Taskstate	typeref:typename:uintptr_t
ts_esp2	inc/mmu.h	/^	uintptr_t ts_esp2;$/;"	m	struct:Taskstate	typeref:typename:uintptr_t
ts_fs	inc/mmu.h	/^	uint16_t ts_fs;$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_gs	inc/mmu.h	/^	uint16_t ts_gs;$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_iomb	inc/mmu.h	/^	uint16_t ts_iomb;	\/\/ I\/O map base address$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_ldt	inc/mmu.h	/^	uint16_t ts_ldt;$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_link	inc/mmu.h	/^	uint32_t ts_link;	\/\/ Old ts selector$/;"	m	struct:Taskstate	typeref:typename:uint32_t
ts_padding1	inc/mmu.h	/^	uint16_t ts_padding1;$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_padding10	inc/mmu.h	/^	uint16_t ts_padding10;$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_padding2	inc/mmu.h	/^	uint16_t ts_padding2;$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_padding3	inc/mmu.h	/^	uint16_t ts_padding3;$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_padding4	inc/mmu.h	/^	uint16_t ts_padding4;$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_padding5	inc/mmu.h	/^	uint16_t ts_padding5;$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_padding6	inc/mmu.h	/^	uint16_t ts_padding6;$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_padding7	inc/mmu.h	/^	uint16_t ts_padding7;$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_padding8	inc/mmu.h	/^	uint16_t ts_padding8;$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_padding9	inc/mmu.h	/^	uint16_t ts_padding9;$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_ss	inc/mmu.h	/^	uint16_t ts_ss;$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_ss0	inc/mmu.h	/^	uint16_t ts_ss0;	\/\/   after an increase in privilege level$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_ss1	inc/mmu.h	/^	uint16_t ts_ss1;$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_ss2	inc/mmu.h	/^	uint16_t ts_ss2;$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_t	inc/mmu.h	/^	uint16_t ts_t;		\/\/ Trap on task switch$/;"	m	struct:Taskstate	typeref:typename:uint16_t
uint16_t	inc/types.h	/^typedef unsigned short uint16_t;$/;"	t	typeref:typename:unsigned short
uint32_t	inc/types.h	/^typedef unsigned int uint32_t;$/;"	t	typeref:typename:unsigned int
uint64_t	inc/types.h	/^typedef unsigned long long uint64_t;$/;"	t	typeref:typename:unsigned long long
uint8_t	inc/types.h	/^typedef unsigned char uint8_t;$/;"	t	typeref:typename:unsigned char
uintptr_t	inc/types.h	/^typedef uint32_t uintptr_t;$/;"	t	typeref:typename:uint32_t
umain	user/sendpage.c	/^umain(int argc, char **argv)$/;"	f	typeref:typename:void
user_test	gradelib.py	/^    def user_test(self, binary, *monitors, **kw):$/;"	m	class:Runner
va_arg	inc/stdarg.h	/^#define va_arg(/;"	d
va_end	inc/stdarg.h	/^#define va_end(/;"	d
va_list	inc/stdarg.h	/^typedef __builtin_va_list va_list;$/;"	t	typeref:typename:__builtin_va_list
va_start	inc/stdarg.h	/^#define va_start(/;"	d
vcprintf	kern/printf.c	/^vcprintf(const char *fmt, va_list ap)$/;"	f	typeref:typename:int
void	obj/boot/boot.asm	/^void$/;"	l
void	obj/kern/kernel.asm	/^void *$/;"	l
void	obj/kern/kernel.asm	/^void$/;"	l
vprintfmt	lib/printfmt.c	/^vprintfmt(void (*putch)(int, void*), void *putdat, const char *fmt, va_list ap)$/;"	f	typeref:typename:void
vsnprintf	lib/printfmt.c	/^vsnprintf(char *buf, int n, const char *fmt, va_list ap)$/;"	f	typeref:typename:int
wait	gradelib.py	/^    def wait(self):$/;"	m	class:QEMU
waitdisk	boot/main.c	/^waitdisk(void)$/;"	f	typeref:typename:void
warn	inc/assert.h	/^#define warn(/;"	d
was	obj/kern/kernel.asm	/^	was = *cp;$/;"	d
width	obj/kern/kernel.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/kern/kernel.asm	/^		width = -1;$/;"	d
wpos	kern/console.c	/^	uint32_t wpos;$/;"	m	struct:__anon9d6ad5280108	typeref:typename:uint32_t	file:
write_eflags	inc/x86.h	/^write_eflags(uint32_t eflags)$/;"	f	typeref:typename:void
xchg	inc/x86.h	/^xchg(volatile uint32_t *addr, uint32_t newval)$/;"	f	typeref:typename:uint32_t
